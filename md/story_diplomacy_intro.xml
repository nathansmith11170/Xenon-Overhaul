<?xml version='1.0' encoding='utf-8'?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Story_Diplomacy_Intro" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>
    <cue name="Patch_Userdata" instantiate="true">
      <conditions>
        <event_cue_signalled cue="md.Setup.Start"/>
      </conditions>
      <actions>
        <do_if value="Pt11_End.state == cuestate.complete">
          <set_userdata storystate="'story_hq_dal'" value="1"/>
          <debug_text text="'Setting userdata story_hq_dal to ' + userdatasigned.story_hq_dal" filter="savegame"/>
        </do_if>
      </actions>
    </cue>
    <!--You can skip to certain parts of the story using the MD shortcuts prefixed with "Plot_Diplomat_"
    WARNING: Forcing a part of the plot earlier than the current active part may result in errors and unintended gameplay.-->
    <!--TODO @Owen #important play_cutscene abortable flag-->
    <!--TODO @Owen #important check that no NPC usecases are critical and can be aborted by the player by starting a conversation with an actor-->
    <cue name="Start" namespace="this" version="6">
      <conditions>
        <event_cue_signalled cue="md.Setup.Start"/>
        <check_value value="player.galaxy.macro == macro.xu_ep2_universe_macro" comment="only in main-galaxy"/>
      </conditions>
      <actions>
        <set_value name="$DebugChance" exact="0"/>
        <set_value name="$DebugChance2" exact="0"/>
        <set_value name="$ForceCompleted" exact="gamestart.storystate.story_hq_dal"/>
        <set_value name="$Page" exact="30202" comment="Diplomatic mentor mission page"/>
        <set_value name="$MissionGroup" exact="missiongroup.diplomat_mentor_plot"/>
        <!--### Locations ###-->
        <!--Preferable locations for Hatikvah station-->
        <set_value name="$PreferableHatikvahSectors" exact="[]"/>
        <find_sector name="$PreferableHatikvahSectors" macro="macro.cluster_29_sector001_macro" append="true" comment="Hatikvah's choice I"/>
        <find_sector name="$PreferableHatikvahSectors" macro="macro.cluster_08_sector001_macro" append="true" comment="Silent Witness I"/>
        <find_sector name="$PreferableHatikvahSectors" macro="macro.cluster_29_sector002_macro" append="true" comment="Hatikvah's choice II"/>
        <!--Objects-->
        <set_value name="$Hat_Station" exact="null"/>
        <set_value name="$LentFreighter" exact="null"/>
        <!--NPC Location Tables-->
        <set_value name="$Reen_Office_Interior" exact="null"/>
        <set_value name="$Reen_Office_Corridor" exact="null"/>
        <set_value name="$Reen_Office_Room" exact="null"/>
        <!--Diplomatic mentor contact - Dal Busta-->
        <create_cue_actor name="$Dal" cue="namespace" macro="character_argon_male_plot_dal_buster_macro">
          <page exact="10111"/>
          <owner exact="faction.hatikvah"/>
          <skills>
            <skill type="management" exact="13"/>
            <skill type="morale" exact="10"/>
            <skill type="piloting" exact="9"/>
            <skill type="engineering" exact="9"/>
            <skill type="boarding" exact="7"/>
          </skills>
        </create_cue_actor>
        <set_entity_traits entity="$Dal" missionactor="true" customhandler="true"/>
        <set_entity_overrides entity="$Dal" icon="'specialist'"/>
        <set_value name="md.$PersistentCharacters.$DalBusta" exact="$Dal"/>
        <set_value name="$AddStoryMentors"/>
        <create_cue_actor name="$Reen" cue="namespace" macro="character_argon_female_plot_reen_omara_macro">
          <page exact="10152"/>
          <owner exact="faction.hatikvah"/>
          <skills>
            <skill type="management" exact="9"/>
            <skill type="morale" exact="4"/>
            <skill type="piloting" exact="7"/>
            <skill type="engineering" exact="10"/>
            <skill type="boarding" exact="4"/>
          </skills>
        </create_cue_actor>
        <set_entity_traits entity="$Reen" missionactor="true" customhandler="true"/>
        <set_entity_overrides entity="$Reen" title="'{30202,201}'" icon="'factionrepresentative'"/>
        <create_cue_actor name="$Partner_Manager" cue="namespace" macro="character_argon_male_plot_lowgon_jams_macro">
          <page exact="10153"/>
          <owner exact="faction.argon"/>
          <skills>
            <skill type="management" exact="12"/>
            <skill type="morale" exact="7"/>
            <skill type="piloting" exact="4"/>
            <skill type="engineering" exact="9"/>
            <skill type="boarding" exact="3"/>
          </skills>
        </create_cue_actor>
        <set_entity_traits entity="$Partner_Manager" missionactor="true" customhandler="true"/>
        <!--Dal's crew-->
        <create_cue_actor name="$Cline" cue="namespace" macro="character_argon_male_plot_cline_rodrigo_macro">
          <page exact="10153"/>
          <owner exact="faction.hatikvah"/>
          <skills>
            <skill type="management" exact="3"/>
            <skill type="morale" exact="8"/>
            <skill type="piloting" exact="6"/>
            <skill type="engineering" exact="8"/>
            <skill type="boarding" exact="4"/>
          </skills>
        </create_cue_actor>
        <set_entity_traits entity="$Cline" missionactor="true" customhandler="true"/>
        <set_entity_overrides entity="$Cline" title="'{20208,30401}'" icon="'engineer'"/>
        <!--Dal's crew-->
        <create_cue_actor name="$Kat" cue="namespace" macro="character_argon_female_plot_kat_lanton_macro">
          <page exact="10107"/>
          <owner exact="faction.hatikvah"/>
          <skills>
            <skill type="management" exact="4"/>
            <skill type="morale" exact="7"/>
            <skill type="piloting" exact="9"/>
            <skill type="engineering" exact="4"/>
            <skill type="boarding" exact="5"/>
          </skills>
        </create_cue_actor>
        <set_entity_traits entity="$Kat" missionactor="true" customhandler="true"/>
        <set_entity_overrides entity="$Kat" title="'{20208,20102}'" icon="'pilot'"/>
        <!--Scale Plate Lieutenant-->
        <create_cue_actor name="$ScalePlateBoss" cue="namespace" macro="character_teladi_male_plot_lieutenant_macro">
          <page exact="10551"/>
          <owner exact="faction.scaleplate"/>
          <skills>
            <skill type="management" exact="9"/>
            <skill type="morale" exact="7"/>
            <skill type="piloting" exact="3"/>
            <skill type="engineering" exact="4"/>
            <skill type="boarding" exact="5"/>
          </skills>
        </create_cue_actor>
        <set_entity_traits entity="$ScalePlateBoss" missionactor="true" customhandler="true" subtitlename="true"/>
        <set_entity_overrides entity="$ScalePlateBoss" title="'{30202,202}'" icon="'factionrepresentative'"/>
        <set_value name="$DalShipID" exact="''"/>
      </actions>
      <patch sinceversion="2" state="complete">
        <set_value name="$DebugChance2" exact="0"/>
      </patch>
      <patch sinceversion="3" state="complete">
        <do_if value="Pt4_Start_Follow_Mission.state == cuestate.complete or Pt4_Start_Follow_Mission.state == cuestate.cancelled">
          <do_if value="$Argon_Police_Pilot.exists and $Argon_Police_Pilot.controlled.exists">
            <!--This issue was due to the pilot being assigned to a new ship but not aborting running scripts-->
            <debug_text text="'Plot police pilot ' + $Argon_Police_Pilot + ' ' + $Argon_Police_Pilot.knownname + ' exists on a ship in a broken state. Restart scripts.'" filter="savegame"/>
            <abort_scripts entity="$Argon_Police_Pilot"/>
            <set_value name="this.$Patch_PoliceShip" exact="$Argon_Police_Pilot.controlled"/>
            <dismiss_control_entity actor="$Argon_Police_Pilot" object="this.$Patch_PoliceShip"/>
            <assign_control_entity actor="$Argon_Police_Pilot" object="this.$Patch_PoliceShip" post="controlpost.aipilot"/>
            <do_if value="Pt4_Police_Encounter_Move_On.state == cuestate.complete or Pt4_Police_Encounter_Move_On.state == cuestate.cancelled">
              <debug_text text="'Plot police pilot ' + $Argon_Police_Pilot + ' ' + $Argon_Police_Pilot.knownname + ' will now move.die'" filter="savegame"/>
              <!--Police ship moves to die. Release the existing police pilot as a mission actor. They will be recreated later for a dialog.-->
              <set_entity_traits entity="$Argon_Police_Pilot" missionactor="false"/>
              <set_value name="$DespawningPolicePilot" exact="$Argon_Police_Pilot"/>
              <remove_cue_actor actor="$Argon_Police_Pilot" cue="namespace"/>
              <remove_value name="$Argon_Police_Pilot"/>
              <create_order object="this.$Patch_PoliceShip" id="'MoveDie'" immediate="true">
                <param name="mintime" value="120s" comment="stay alive for specified time, after it docks"/>
              </create_order>
            </do_if>
            <remove_value name="this.$Patch_PoliceShip"/>
          </do_if>
        </do_if>
      </patch>
      <patch sinceversion="4" state="complete">
        <do_if value="not $Kat.exists and $Kat.isclass.npc">
          <debug_text text="$Kat + ' ' + $Kat.knownname + ' is disconnected and may have scripts running. Abort them.'" filter="savegame"/>
          <abort_scripts entity="$Kat"/>
        </do_if>
      </patch>
      <patch sinceversion="5" state="complete">
        <do_if value="(Pt1_Offer_Accepted.state == cuestate.complete or Pt1_Offer_Accepted.state == cuestate.cancelled) and                       (Pt9_Find_Dal.state != cuestate.complete or Pt9_Find_Dal.state != cuestate.cancelled)">
          <do_if value="not $Hat_Station.exists">
            <debug_text text="'Hatikvah station is missing when it should be present and indestructible. Attempting to recover.'" filter="savegame"/>
            <include_actions ref="Find_Hatikvah_Station"/>
            <do_if value="not $Hat_Station.isoperational">
              <!--Unable to find a suitable Hatikvah station. Create a replacement in most preferable sector with the most friendly stations.-->
              <set_value name="$FriendliestSectorTable" exact="table[]"/>
              <do_for_each name="$PotentialSpawnSector" in="$PreferableHatikvahSectors">
                <find_station name="$FriendlyStations" space="$PotentialSpawnSector" multiple="true">
                  <match_relation_to faction="faction.player" relation="dock" comparison="ge"/>
                </find_station>
                <set_value name="$FriendliestSectorTable.{$PotentialSpawnSector}" exact="$FriendlyStations.count"/>
              </do_for_each>
              <create_station name="$Hat_Station" macro="macro.station_arg_tradestation_base_01_macro" owner="faction.hatikvah" sector="$FriendliestSectorTable.keys.sorted.last" state="componentstate.operational" constructionplan="'arg_tradestation'">
                <safepos x="100km" z="-20km" space="$FriendliestSectorTable.keys.sorted.last"/>
              </create_station>
            </do_if>
            <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
              <param name="Object" value="$Hat_Station"/>
              <param name="RequesterCue" value="Start"/>
              <param name="DebugChance" value="$DebugChance"/>
            </run_actions>
          </do_if>
          <include_actions ref="Create_Reen_Office"/>
          <!--All plot NPCs will at least still have a referenced held by the mission, so even if they were on the station when it was removed, they can still be restored to their correct positions-->
          <do_if value="Pt1_Manager_Conv_1.state == cuestate.waiting">
            <!--Reen standing in her office with the crewman-->
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                                            table[                                           $requestercue = namespace,                                           $location = $Reen_Office_Room,                                           $priority = 100,                                           $position = position.[-2.8m, 0.09m, -5.1m],                                           $rotation = rotation.[180deg, 0deg, 0deg],                                           $debugchance = $DebugChance2,                                           $debugcaller = if $DebugChance2 == 100 then this else null]                                           ]"/>
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Hat_Crewman,                                            table[                                           $requestercue = namespace,                                           $location = $Reen_Office_Room,                                           $priority = 100,                                           $position = position.[-3.5m, 0.09m, -6.0m],                                           $rotation = rotation.[20deg, 0deg, 0deg],                                           $debugchance = $DebugChance2,                                           $debugcaller = if $DebugChance2 == 100 then this else null]                                           ]"/>
          </do_if>
          <do_elseif value="Pt9_Breakdown.state == cuestate.complete or Pt9_Breakdown.state == cuestate.cancelled">
            <!--Reen should be disconnected at this point, do nothing-->
          </do_elseif>
          <do_else>
            <!--Default position for Reen, sitting in her office-->
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                                            table[                                           $requestercue = namespace,                                           $location = $Reen_Office_Room,                                           $priority = 100,                                           $slottags = [tag.sit],                                           $debugchance = $DebugChance2,                                           $debugcaller = if $DebugChance2 == 100 then this else null]                                           ]"/>
          </do_else>
          <do_if value="Pt2_Return_To_Hatikvah.state == cuestate.complete">
            <!--Dal intro position (for the patch, we'll also keep him here when he's usually on his ship to keep things simple)-->
            <include_actions ref="Create_Dal_Ship"/>
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                           table[                                           $requestercue = namespace,                                           $location = $Reen_Office_Room,                                           $priority = 100,                                           $position = position.[-0.85m, 0.05m, -6.5m],                                           $rotation = rotation.[130deg, 0deg, 0deg],                                           $debugchance = $DebugChance2,                                           $debugcaller = if $DebugChance2 == 100 then this else null]                                           ]"/>
            <do_if value="Pt2_Setup_Intro_Scene.state == cuestate.waiting">
              <set_objective cue="Start" step="3" action="objective.talkto" object="$Reen"/>
            </do_if>
          </do_if>
        </do_if>
      </patch>
      <patch sinceversion="6" state="complete">
        <set_value name="$AddStoryMentors"/>
      </patch>
      <cues>
        <cue name="PATCH_AddStoryMentors" onfail="cancel">
          <conditions>
            <check_value value="$AddStoryMentors?"/>
          </conditions>
          <delay exact="1s"/>
          <actions>
            <signal_cue_instantly cue="md.Setup.AddStoryMentor" param="table[$story=namespace, $actor=$Dal]"/>
          </actions>
        </cue>
        <!--Room / Dynamic interior management-->
        <library name="Create_Reen_Office">
          <actions>
            <do_if value="not $Reen_Office_Interior.exists">
              <set_value name="$Hat_OfficeMacro" exact="macro.room_gen_managersoffice_01_macro"/>
              <get_room_definition macro="$Hat_CorridorMacro" doors="$InteriorDoors" race="race.argon" tags="tag.corridor"/>
              <set_value name="$Hat_Door" exact="if $InteriorDoors.count ge 3 then $InteriorDoors.{3} else $InteriorDoors.{1}"/>
              <remove_value name="$InteriorDoors"/>
              <create_dynamic_interior interiorname="$Reen_Office_Interior" corridorname="$Reen_Office_Corridor" roomname="$Reen_Office_Room" object="$Hat_Station" room="$Hat_OfficeMacro" corridor="$Hat_CorridorMacro" door="$Hat_Door" name="'{30202,501}'" persistent="true" private="true"/>
            </do_if>
          </actions>
        </library>
        <!--Default conversation handlers-->
        <cue name="Conv_Started_Kat" instantiate="true">
          <conditions>
            <event_conversation_started actor="$Kat"/>
            <check_value value="$Kat.customhandler and not @$SuppressKatConv"/>
          </conditions>
          <actions>
            <add_npc_line speaker="$Kat" line="2001"/>
          </actions>
        </cue>
        <cue name="Conv_Started_Cline" instantiate="true">
          <conditions>
            <event_conversation_started actor="$Cline"/>
            <check_value value="$Cline.customhandler and not @$SuppressClineConv"/>
          </conditions>
          <actions>
            <add_npc_line speaker="$Cline" line="30222007"/>
          </actions>
        </cue>
        <!--Initialisation-->
        <cue name="Initialise" checkinterval="1s">
          <conditions>
            <check_value value="true"/>
          </conditions>
          <actions>
            <set_value name="$CurrentPartCue" exact="null"/>
            <!--Append chapter cues to a list so they can be reset when forcing another chapter - keep in order-->
            <set_value name="$ChapterCues" exact="[                        Pt1_Hatikvah_Offer,                        Pt2_Dal_Intro,                        Pt3_Going_Offensive,                        Pt4_Follow_Ship,                        Pt5_The_Meeting,                        Pt6_Drone_Cleanup,                        Pt7_Station_Defences,                        Pt8_TheAgreement,                        Pt9_Breakdown,                        Pt10_Interloper,                        Pt11_End]"/>
            <do_if value="$ForceCompleted">
              <!--Skip to the end-->
              <signal_cue cue="Pt11_Skip"/>
            </do_if>
            <do_else>
              <!--Trigger the first part-->
              <signal_cue cue="Pt1_Hatikvah_Offer"/>
            </do_else>
          </actions>
        </cue>
        <!--event.param = Forced part cue-->
        <cue name="Force_Part" instantiate="true">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$ForcedCue" exact="event.param"/>
            <assert value="not $CurrentPartCue or $ChapterCues.indexof.{$CurrentPartCue} le $ChapterCues.indexof.{$ForcedCue}" text="'Forced part ' + $ForcedCue + ' takes place before the current part ' + $CurrentPartCue + ' - may result in odd behaviour [Owen]'"/>
            <do_if value="$ChapterCues.indexof.{$ForcedCue}">
              <do_if value="$CurrentPartCue">
                <!--You can clean up things from a running part here-->
                <!--<do_if value="$CurrentPartCue == Pt1_Hatikvah_Offer">
                 
                </do_if> -->
              </do_if>
              <!--Reset all part cues-->
              <do_all exact="$ChapterCues.count" counter="$i">
                <reset_cue cue="$ChapterCues.{$i}"/>
              </do_all>
            </do_if>
          </actions>
          <cues>
            <cue name="Force_Part_Signal">
              <actions>
                <debug_text text="'Forcing ' + $ForcedCue + ' to be the active part. Currently running part: ' + $CurrentPartCue"/>
                <signal_cue_instantly cue="$ForcedCue" param="table[$forced = true]"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <!--Part 1 - Hatikvah Offer-->
        <cue name="Pt1_Force">
          <force name="Plot_Diplomat_Pt1">
            <reset_cue cue="Event_Police_Scan" comment="Reset the event triggered by Part 1"/>
            <signal_cue_instantly cue="Force_Part" param="Pt1_Hatikvah_Offer"/>
          </force>
        </cue>
        <cue name="Pt1_Hatikvah_Offer">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
          </actions>
          <cues>
            <cue name="Pt1_Hatikvah_Offer_Init">
              <actions>
                <signal_cue cue="Pt1_Find_Hatikvah_Station"/>
              </actions>
            </cue>
            <cue name="Pt1_Find_Hatikvah_Station" instantiate="true">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <include_actions ref="Find_Hatikvah_Station"/>
                <do_if value="$Hat_Station.isoperational">
                  <signal_cue cue="Pt1_Hatikvah_Offer_Setup"/>
                  <cancel_cue cue="this"/>
                </do_if>
              </actions>
              <cues>
                <cue name="Pt1_Find_Hatikvah_Station_Reset">
                  <delay min="30s" max="1min"/>
                  <actions>
                    <signal_cue cue="Pt1_Find_Hatikvah_Station.static"/>
                  </actions>
                </cue>
              </cues>
            </cue>
            <cue name="Pt1_Hatikvah_Offer_Setup">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <find_sector_in_range name="$OfferSectors" object="$Hat_Station" maxdistance="2" multiple="true"/>
              </actions>
              <cues>
                <cue name="Pt1_Hatikvah_Station_Destroyed">
                  <conditions>
                    <event_object_destroyed object="$Hat_Station"/>
                  </conditions>
                  <actions>
                    <debug_text text="'Hatikvah station ' + event.object + ' ' + event.object.knownname + ' was destroyed before offer was accepted, resetting.'" chance="$DebugChance"/>
                    <!--TODO @Owen just remove the offer and have a timer until the reset?-->
                    <do_if value="Pt1_Create_Offer.state == cuestate.complete">
                      <remove_offer cue="Start"/>
                    </do_if>
                    <do_else>
                      <cancel_cue cue="Pt1_Create_Offer"/>
                    </do_else>
                  </actions>
                  <delay exact="10min"/>
                  <actions>
                    <reset_cue cue="Pt1_Hatikvah_Offer_Setup"/>
                    <signal_cue cue="Pt1_Find_Hatikvah_Station"/>
                  </actions>
                </cue>
                <cue name="Pt1_Create_Offer_Init">
                  <actions>
                    <signal_cue cue="Pt1_Create_Offer"/>
                  </actions>
                </cue>
                <!--TODO @Owen once offer is accepted, any destruction of the station means starting from the beginning?-->
                <cue name="Pt1_Create_Offer">
                  <conditions>
                    <check_any>
                      <check_all>
                        <event_object_changed_sector object="player.entity"/>
                        <check_value value="$OfferSectors.indexof.{event.param}"/>
                      </check_all>
                      <check_all>
                        <event_cue_signalled/>
                        <check_value value="$OfferSectors.indexof.{player.sector}"/>
                      </check_all>
                    </check_any>
                    <check_value value="faction.player.hasrelation.dock.{faction.hatikvah}"/>
                  </conditions>
                  <actions>
                    <!--TODO - briefing steps?-->
                    <debug_text text="'Player is within 2 jumps from the Hatikvah station. Offering mission.'" chance="$DebugChance"/>
                    <create_offer cue="Start" type="missiontype.plot" name="{30202,1001}" description="{30202,1002}" actor="$Reen" difficulty="level.easy" faction="faction.hatikvah" space="$OfferSectors" icon="'briefing_reen_omara_01'" iconcaption="$Reen.knownname">
                      <briefing>
                        <objective step="1" action="objective.contact" text="faction.hatikvah.knownname"/>
                      </briefing>
                    </create_offer>
                    <write_incoming_message title="{30202,3001}" text="{30202,3002}" source="{30202,101}" highpriority="true" comment="send email to make briefing offer more visible" object="$Reen" interaction="guidance"/>
                  </actions>
                  <cues>
                    <cue name="Pt_1_Call_Initial_Delay">
                      <delay exact="30min"/>
                      <actions>
                        <signal_cue cue="Pt_1_Unlock_Invite_Call"/>
                      </actions>
                      <cues>
                        <cue name="Pt_1_Unlock_Invite_Call">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <cues>
                            <cue name="Pt_1_Offer_Call_Trigger" checkinterval="10s">
                              <conditions>
                                <check_value value="$OfferSectors.indexof.{player.sector} and faction.player.hasrelation.dock.{faction.hatikvah} and Pt1_Offer_Accepted.state == cuestate.waiting"/>
                                <check_value value="not md.$MissionDND.count"/>
                                <check_value value="not player.isinconversation"/>
                                <check_value value="not player.isinfullscreenmenu"/>
                                <check_value value="not player.isscreenshotmode"/>
                              </conditions>
                              <actions>
                                <run_actions ref="md.LIB_Generic.SuppressChatter_AddCue">
                                  <param name="Cue" value="Pt_1_Offer_Call_Trigger"/>
                                </run_actions>
                              </actions>
                              <delay exact="8s"/>
                              <actions>
                                <do_if value="(not md.$MissionDND.count)                                           and (not player.isinconversation)                                           and (not player.isinfullscreenmenu)                                           and (not player.isscreenshotmode)">
                                  <create_cue_actor name="$HAT_Announcer" cue="Start" macro="character_argon_male_dyn_overall_crew_01_macro">
                                    <page exact="10171"/>
                                    <owner exact="faction.hatikvah"/>
                                  </create_cue_actor>
                                </do_if>
                                <do_else>
                                  <run_actions ref="md.LIB_Generic.SuppressChatter_RemoveCue">
                                    <param name="Cue" value="Pt_1_Offer_Call_Trigger"/>
                                  </run_actions>
                                  <reset_cue cue="this"/>
                                </do_else>
                              </actions>
                              <cues>
                                <cue name="Pt_1_Offer_Call_Lines">
                                  <conditions>
                                    <event_cue_completed cue="Pt_1_Offer_Call_Trigger"/>
                                  </conditions>
                                  <actions>
                                    <speak actor="$HAT_Announcer" broadcast="true" backgroundcomm="false" priority="100">
                                      <text line="30200001" comment="Pilot, if you are hearing this independent pirate broadcast, you have been invited to join the Hatikvah Free League's Trade Revolution!"/>
                                      <text line="30200002" delay="0.5s" comment="Do you want to help create a truly independent, safe haven? Work towards peace and stability for all peoples?"/>
                                      <text line="30200003" delay="1s" comment="Then we need you! Do not hesitate, check your Mission Offers to join the cause!"/>
                                    </speak>
                                  </actions>
                                  <cues>
                                    <cue name="Pt_1_Offer_Call_Lines_Cleanup">
                                      <conditions>
                                        <event_speak_finished actor="$HAT_Announcer" line="30200001"/>
                                      </conditions>
                                      <actions>
                                        <run_actions ref="md.LIB_Generic.SuppressChatter_RemoveCue">
                                          <param name="Cue" value="Pt_1_Offer_Call_Trigger"/>
                                        </run_actions>
                                        <destroy_object object="$HAT_Announcer" comment="cleanup of HAT_Announcer"/>
                                      </actions>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="Pt1_Offer_Accepted">
                      <conditions>
                        <check_any>
                          <event_object_signalled object="$Reen" param="'accept'"/>
                          <check_all>
                            <event_conversation_next_section actor="$Reen" choiceparam="Start"/>
                            <check_value value="event.param == 'c_mission_accept'"/>
                          </check_all>
                        </check_any>
                      </conditions>
                      <actions>
                        <!--TODO @Owen #important add Hatikvah trade jobs which get more active as things go on-->
                        <debug_text text="'Accepted mission'" chance="$DebugChance"/>
                        <cancel_cue cue="Pt1_Hatikvah_Station_Destroyed"/>
                        <!--Set the station to be indestructible for the rest of the mission until requested otherwise in chapter 9. Note, chapter shortcuts will not have the station indestructible.-->
                        <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                          <param name="Object" value="$Hat_Station"/>
                          <param name="RequesterCue" value="Start"/>
                          <param name="DebugChance" value="$DebugChance"/>
                        </run_actions>
                        <set_value name="$Partner_Station" exact="null"/>
                        <do_if value="not @$Hat_Crewman.isclass.npc">
                          <create_cue_actor name="$Hat_Crewman" cue="namespace">
                            <select faction="faction.hatikvah" race="race.argon"/>
                            <owner exact="faction.hatikvah"/>
                          </create_cue_actor>
                          <set_entity_traits entity="$Hat_Crewman" missionactor="true"/>
                          <set_entity_role entity="$Hat_Crewman" role="entityrole.service"/>
                          <set_entity_role_object entity="$Hat_Crewman" object="$Hat_Station"/>
                          <set_value name="$Hat_Crewman.$Stay" exact="true"/>
                        </do_if>
                        <!--HACK @Owen - where else could we put Dal so he's available for usecases-->
                        <add_actor_to_room actor="$Dal" object="$Hat_Station.controlroom"/>
                        <include_actions ref="Create_Reen_Office"/>
                        <!--Signal placement manager with the new requests-->
                        <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                                            table[                                           $requestercue = namespace,                                           $location = $Reen_Office_Room,                                           $priority = 100,                                           $position = position.[-2.8m, 0.09m, -5.1m],                                           $rotation = rotation.[180deg, 0deg, 0deg],                                           $debugchance = $DebugChance2,                                           $debugcaller = if $DebugChance2 == 100 then this else null]                                           ]"/>
                        <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Hat_Crewman,                                            table[                                           $requestercue = namespace,                                           $location = $Reen_Office_Room,                                           $priority = 100,                                           $position = position.[-3.5m, 0.09m, -6.0m],                                           $rotation = rotation.[20deg, 0deg, 0deg],                                           $debugchance = $DebugChance2,                                           $debugcaller = if $DebugChance2 == 100 then this else null]                                           ]"/>
                        <create_mission cue="Start" offercue="Start" abortable="false"/>
                        <remove_offer cue="Start"/>
                      </actions>
                      <delay exact="1s"/>
                      <actions>
                        <set_objective cue="Start" step="1" action="objective.talkto" object="$Reen" updatebriefing="true"/>
                      </actions>
                    </cue>
                    <cue name="Pt1_Manager_Conv_1" checkinterval="50ms">
                      <conditions>
                        <check_value value="player.room and player.room == $Reen.room and Pt1_Trade_Run.state == cuestate.waiting"/>
                      </conditions>
                      <actions>
                        <set_value name="$Reen.$StateMachine.$DebugChance" exact="100" chance="$DebugChance"/>
                        <set_value name="$Hat_Crewman.$StateMachine.$DebugChance" exact="100" chance="$DebugChance"/>
                        <!--Create docked Hatikvah ship which will be given to the player-->
                        <!--TODO @Owen set_decal_faction-->
                        <!--TODO @Owen @Matthias Prevent ship being stored away-->
                        <create_ship name="$LentFreighter" dock="$Hat_Station" macro="macro.ship_arg_s_trans_container_02_b_macro">
                          <pilot actor="null"/>
                          <owner exact="faction.hatikvah"/>
                        </create_ship>
                        <debug_text text="'Created ship ' + $LentFreighter + ' ' + $LentFreighter.knownname" chance="$DebugChance"/>
                        <set_entity_traits entity="$Reen" subtitlename="true"/>
                        <set_entity_traits entity="$Hat_Crewman" subtitlename="true"/>
                        <!--Start cutscene-->
                        <!--
                        Note: this skips line "Please come in"
                        Shot 1:
                        Pan from right to left, starting with crew, revealing Reen
                        crew (10905): "The trade deal's been confirmed"
                        Reen (30202132): "Alright. Prepare the freighter for departure."
                        Both look at player
                        Both look at eachother
                        "(to crewman)That will be all."
                        Crewman starts walking out
                        
                        Shot 2:
                        (warp player?)
                        Camera showing player and door behind them
                        Crewman walks past player
                        
                        Shot 3:
                        Show Reen (from player perspective?, warp player backwards?)
                        Reen turns to player
                        Reen: "I apologise for the state of the place. Things are rather hectic at the moment."
                        Reen: "We've signed a number of promising new trade contracts, but circumstances have left us spread a bit thin."
                        Dal: "(over comm)Reen, We have an issue with the inbound ore freighter."
                        Reen looks away while listening
                        Reen: "(responding to comm)I hear you Dal. I'll be there in a minute."
                        Looks back at player
                        Reen: "(exasperated)It seemingly never ends."
                        Reen: "We've prepared a freighter for you to fly over to one of our new partners."
                        
                        Shot 4
                        Show freighter on dock
                        Reen: "Honestly, as long as you can deliver those goods on time, I'll be happy."
                        Reen: "If you do that, the ship's as good as yours."
                        
                        Shot 5
                        Show Reen and player
                        Reen: "If you screw us over, well, the worst we can do is revoke your docking privileges."
                        Reen: "Sorry to cut and run but there's something that needs my attention."
                        Reen: "I look forward to seeing how you do."
                        Reen walks out
                        
                        -->
                        <set_value name="$LastCutsceneKey" exact="'Story_Diplomacy_Intro_1'"/>
                        <set_value name="$ShotMaxDuration" exact="7s"/>
                        <set_value name="$CutsceneRoom" exact="$Reen.room"/>
                        <!--TODO @Owen support aborting this cutscene-->
                        <play_cutscene result="$LastCutscene" key="$LastCutsceneKey" abortable="false">
                          <param name="reenroom" object="$Reen.room"/>
                          <param name="shipcockpit" object="$LentFreighter.controlroom"/>
                        </play_cutscene>
                      </actions>
                      <cues>
                        <!--Crewman chat shot
                        
                        Note: this skips line "Please come in"
                        Shot 1:
                        Pan from right to left, starting with crew, revealing Reen
                        crew (10905): "The trade deal's been confirmed"
                        Reen (2108): "Okay."
                        Both look at player
                        Both look at eachother
                        "(to crewman)That will be all."
                        Crewman starts walking out-->
                        <cue name="Pt1_Cutscene_Crewman_Chat_Shot" checkinterval="5ms">
                          <conditions>
                            <check_value value="not $Reen.isspeaking"/>
                          </conditions>
                          <delay exact="0.3s"/>
                          <actions>
                            <debug_text text="'Trigger player involved usecase.'" chance="$DebugChance"/>
                            <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Meet_Reen_1', $actors = table[ $Reen = $Reen, $Crewman = $Hat_Crewman ], $callbackcue = Pt1_Cutscene_Crewman_Walk, $abortcallbackcue = Pt1_Cutscene_Crewman_Walk, $debugchance = $DebugChance ]"/>
                          </actions>
                          <cues>
                            <cue name="Pt1_Cutscene_Crewman_Walk">
                              <conditions>
                                <check_any>
                                  <event_speak_finished actor="$Reen" line="30202001"/>
                                  <event_cue_signalled/>
                                </check_any>
                              </conditions>
                              <delay exact="0.6s"/>
                              <actions>
                                <!--Warp player to different position-->
                                <add_actor_to_room actor="player.entity" object="$CutsceneRoom">
                                  <position x="-0.18m" y="1.808m" z="-4.1m"/>
                                  <rotation yaw="-115deg"/>
                                </add_actor_to_room>
                                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['remove_request', $Hat_Crewman, namespace]"/>
                                <signal_objects object="$Hat_Crewman" param="'npc_despawn'"/>
                              </actions>
                              <cues>
                                <cue name="Pt1_Cutscene_Crewman_Leaving">
                                  <conditions>
                                    <event_cue_completed cue="Pt1_Cutscene_Crewman_Walk"/>
                                  </conditions>
                                  <delay exact="2s"/>
                                  <actions>
                                    <signal_cue cue="Pt1_Cutscene_Leave_Shot" check="false"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="Pt1_Cutscene_Leave_Shot_Force">
                              <conditions>
                                <event_cue_completed cue="Pt1_Cutscene_Crewman_Chat_Shot"/>
                              </conditions>
                              <delay exact="$ShotMaxDuration"/>
                              <actions>
                                <signal_cue cue="Pt1_Cutscene_Leave_Shot" check="false"/>
                              </actions>
                            </cue>
                            <!--Crewman leave shot
                            Shot 2:
                            (warp player?)
                            Camera showing player and door behind them
                            Crewman walks past player-->
                            <cue name="Pt1_Cutscene_Leave_Shot">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <debug_text text="'Next shot triggered by ' + event.name" chance="$DebugChance"/>
                                <set_value name="$CutsceneEvent" exact="'CrewmanChatEnd'"/>
                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                <set_value name="$CutsceneEvent" exact="'CrewmanLeavesStart'"/>
                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                <set_value name="$ShotMaxDuration" exact="4s"/>
                                <set_value name="$ReenTurnTime" exact="2.5s"/>
                                <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Meet_Reen_2', $actors = table[ $Reen = $Reen, $Dal = $Dal ], $callbackcue = Pt1_Cutscene_End, $abortcallbackcue = Pt1_Cutscene_Leave_Shot_Aborted, $debugchance = $DebugChance ]"/>
                              </actions>
                              <cues>
                                <cue name="Pt1_Cutscene_Leave_Shot_Aborted">
                                  <conditions>
                                    <event_cue_signalled/>
                                  </conditions>
                                  <actions>
                                    <stop_cutscene cutscene="$LastCutscene"/>
                                    <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                                                          table[                                                         $requestercue = namespace,                                                         $location = 'disconnect',                                                         $priority = 100,                                                         $debugchance = $DebugChance2,                                                         $debugcaller = if $DebugChance2 == 100 then this else null]                                                         ]"/>
                                    <signal_cue cue="Pt1_Trade_Run"/>
                                    <cancel_cue cue="Pt1_Cutscene_Reen_Facing_Shot"/>
                                  </actions>
                                </cue>
                                <cue name="Pt1_Cutscene_Leave_Shot_End">
                                  <delay exact="$ShotMaxDuration"/>
                                  <actions>
                                    <signal_cue cue="Pt1_Cutscene_Reen_Facing_Shot" check="false"/>
                                  </actions>
                                </cue>
                                <cue name="Pt1_Cutscene_Reen_Turns">
                                  <delay exact="$ReenTurnTime"/>
                                  <actions>
                                    <start_actor_sequence actor="$Reen" type="'turnleft90'" transition="false" behavior="'generic'"/>
                                  </actions>
                                  <cues>
                                    <cue name="Pt1_Cutscene_Reen_Turns_Stop">
                                      <conditions>
                                        <event_character_animation_finished object="$Reen" id="'anim_turnleft90_01'"/>
                                      </conditions>
                                      <actions>
                                        <start_actor_sequence actor="$Reen" type="'idle'" transition="false" behavior="'generic'"/>
                                      </actions>
                                    </cue>
                                  </cues>
                                </cue>
                                <!--Reen facing shot
                                Shot 3:
                                Show Reen (from player perspective?, warp player backwards?)
                                Reen turns to player
                                Reen: "I apologise for the state of the place. Things are rather hectic at the moment."
                                Reen: "We've signed a number of promising new trade contracts, but circumstances have left us spread a bit thin."
                                Dal: "(over comm)Reen, We have an issue with the inbound ore freighter."
                                Reen looks away while listening
                                Reen: "(responding to comm)I hear you Dal. I'll be there in a minute."
                                Looks back at player
                                Reen: "(exasperated)It seemingly never ends."
                                Reen: "We've prepared a freighter for you to fly over to one of our new partners."-->
                                <cue name="Pt1_Cutscene_Reen_Facing_Shot">
                                  <conditions>
                                    <check_any>
                                      <event_cue_signalled/>
                                      <event_speak_finished actor="$Reen" line="30202002" comment="Pleaes come in"/>
                                    </check_any>
                                  </conditions>
                                  <actions>
                                    <debug_text text="'Next shot triggered by ' + event.name" chance="$DebugChance"/>
                                    <set_value name="$CutsceneEvent" exact="'CrewmanLeavesEnd'"/>
                                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                    <set_value name="$CutsceneEvent" exact="'ReenFaceFaceStart'"/>
                                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                    <set_value name="$ShotMaxDuration" exact="35s"/>
                                  </actions>
                                  <cues>
                                    <cue name="Pt1_Cutscene_Ship_Shot_Force">
                                      <delay exact="$ShotMaxDuration"/>
                                      <actions>
                                        <signal_cue cue="Pt1_Cutscene_Ship_Shot" check="false"/>
                                      </actions>
                                    </cue>
                                    <!--Ship shot
                                    Shot 4
                                    Show freighter on dock
                                    Reen: "Honestly, as long as you can deliver those goods on time, I'll be happy."
                                    Reen: "If you do that, the ship's as good as yours."-->
                                    <cue name="Pt1_Cutscene_Ship_Shot">
                                      <conditions>
                                        <check_any>
                                          <event_cue_signalled/>
                                          <event_speak_finished actor="$Reen" line="30202006"/>
                                        </check_any>
                                      </conditions>
                                      <delay exact="3s"/>
                                      <actions>
                                        <debug_text text="'Next shot triggered by ' + event.name" chance="$DebugChance"/>
                                        <set_value name="$CutsceneEvent" exact="'ReenFaceFaceEnd'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$CutsceneEvent" exact="'DockedShipStart'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$ShotMaxDuration" exact="15s"/>
                                      </actions>
                                      <cues>
                                        <cue name="Pt1_Cutscene_Reen_Leaves_Shot_Force">
                                          <conditions>
                                            <event_cue_completed cue="Pt1_Cutscene_Ship_Shot"/>
                                          </conditions>
                                          <delay exact="$ShotMaxDuration"/>
                                          <actions>
                                            <signal_cue cue="Pt1_Cutscene_Reen_Leaves_Shot" check="false"/>
                                          </actions>
                                        </cue>
                                        <!--Reen leaves shot
                                        Shot 5
                                        Show Reen and player
                                        Reen: "If you screw us over, well, the worst we can do is revoke your docking privileges."
                                        Reen: "Sorry to cut and run but there's something that needs my attention."
                                        Reen: "I look forward to seeing how you do."
                                        Reen walks out-->
                                        <cue name="Pt1_Cutscene_Reen_Leaves_Shot">
                                          <conditions>
                                            <check_any>
                                              <event_cue_signalled/>
                                              <check_all>
                                                <event_speak_finished actor="$Reen"/>
                                                <check_value value="event.param2 == 30202011 or event.param2 == 30202012"/>
                                              </check_all>
                                            </check_any>
                                          </conditions>
                                          <actions>
                                            <debug_text text="'Next shot triggered by ' + event.name" chance="$DebugChance"/>
                                            <set_value name="$CutsceneEvent" exact="'DockedShipEnd'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <set_value name="$CutsceneEvent" exact="'ReenLeavesStart'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <set_value name="$ShotMaxDuration" exact="20s"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt1_Cutscene_Reen_Walks_Out">
                                              <conditions>
                                                <event_speak_finished actor="$Reen" line="30202015"/>
                                              </conditions>
                                              <actions>
                                                <!--Signal placement manager with the new request. She will walk to despawn.-->
                                                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                                                          table[                                                         $requestercue = namespace,                                                         $location = 'disconnect',                                                         $priority = 100,                                                         $debugchance = $DebugChance2,                                                         $debugcaller = if $DebugChance2 == 100 then this else null]                                                         ]"/>
                                              </actions>
                                            </cue>
                                            <cue name="Pt1_Cutscene_End_Force">
                                              <delay exact="$ShotMaxDuration"/>
                                              <actions>
                                                <signal_cue cue="Pt1_Cutscene_End" check="false"/>
                                              </actions>
                                            </cue>
                                            <cue name="Pt1_Cutscene_End">
                                              <conditions>
                                                <check_any>
                                                  <event_cue_signalled/>
                                                  <check_all>
                                                    <event_speak_finished actor="$Reen"/>
                                                    <check_value value="event.param2 == 30202016 or event.param2 == 30202017"/>
                                                  </check_all>
                                                </check_any>
                                              </conditions>
                                              <delay exact="4s"/>
                                              <actions>
                                                <set_value name="$CutsceneEvent" exact="'ReenLeavesEnd'"/>
                                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                                <signal_cue cue="Pt1_Trade_Run"/>
                                              </actions>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                    <!--Cue to retrigger finding a delivery station if one wasn't found-->
                    <cue name="Pt1_Trade_Run_Reset">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <delay exact="10s"/>
                      <actions>
                        <signal_cue cue="Pt1_Trade_Run"/>
                        <reset_cue cue="this"/>
                      </actions>
                    </cue>
                    <cue name="Pt1_Trade_Run">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <set_value name="$DeliverWare" exact="ware.medicalsupplies"/>
                        <set_value name="$DeliverAmount" exact="250"/>
                        <set_value name="$DeliveryTable" exact="table[{$DeliverWare} = $DeliverAmount]"/>
                        <!--Find station for the trade run-->
                        <do_if value="not $Partner_Station.isoperational">
                          <find_cluster_in_range distances="$ClusterDistances" object="$Hat_Station.sector" maxdistance="3" multiple="true"/>
                          <!--Set the Hatikvah station sector to a 'distance' of 3 so it's only selected if there was no other option-->
                          <set_value name="$ClusterDistances.{$Hat_Station.cluster}" exact="3"/>
                          <!--Build a table of sectors and score them by distance to the Hatikvah station sector and whether they have Argon police (which is preferred  for the police event)-->
                          <set_value name="$SectorScores" exact="table[]"/>
                          <do_for_each name="$PotentialCluster" in="$ClusterDistances">
                            <find_sector name="$ContainedSectors" space="$PotentialCluster" multiple="true"/>
                            <shuffle_list list="$ContainedSectors"/>
                            <do_for_each name="$PotentialSector" in="$ContainedSectors">
                              <do_if value="$PotentialSector.policefaction == faction.argon">
                                <set_value name="$SectorScores.{$PotentialSector}" exact="$ClusterDistances.{$PotentialCluster}"/>
                              </do_if>
                              <do_else>
                                <set_value name="$SectorScores.{$PotentialSector}" exact="$ClusterDistances.{$PotentialCluster} + 1"/>
                              </do_else>
                            </do_for_each>
                          </do_for_each>
                          <set_value name="$SectorScores_SortedKeys" exact="$SectorScores.keys.sorted"/>
                          <do_for_each name="$PotentialSector" in="$SectorScores_SortedKeys">
                            <find_station name="$Partner_Stations" space="$PotentialSector" multiple="true">
                              <match_content class="class.production" checkoperational="true"/>
                              <match owner="[faction.player, faction.hatikvah]" negate="true"/>
                              <match_relation_to faction="faction.hatikvah" relation="dock" comparison="ge"/>
                              <match_relation_to faction="faction.player" relation="dock" comparison="ge"/>
                              <match_dock size="tag.dock_s" walkable="true"/>
                              <match_distance value="$PotentialSector.coreposition" max="$PotentialSector.coresize * 1.2" space="$PotentialSector"/>
                              <match_any>
                                <!--The station must be either in another sector or 50km from the Hatikvah station-->
                                <match_context macro="$Hat_Station.sector.macro" negate="true"/>
                                <match_distance object="$Hat_Station" min="50km"/>
                              </match_any>
                            </find_station>
                            <set_value name="$BestPrice" exact="null"/>
                            <set_value name="$Partner_Station" exact="null"/>
                            <do_all exact="$Partner_Stations.count" counter="$k">
                              <do_if value="$Partner_Stations.{$k}.cargo.{$DeliverWare}.target gt ($DeliverAmount * 1.5)">
                                <find_buy_offer wares="$DeliverWare" buyer="$Partner_Stations.{$k}" result="$FoodOffer"/>
                                <do_if value="$FoodOffer">
                                  <do_if value="$FoodOffer.unitprice gt $BestPrice">
                                    <set_value name="$Partner_Station" exact="$Partner_Stations.{$k}"/>
                                    <set_value name="$BestPrice" exact="$FoodOffer.unitprice"/>
                                    <debug_text text="'Setting ' + $Partner_Station + ' ' + $Partner_Station.knownname + ' in ' + $PotentialSector.knownname + ' as best. Price: ' + $BestPrice" chance="$DebugChance"/>
                                  </do_if>
                                </do_if>
                              </do_if>
                            </do_all>
                            <do_if value="$Partner_Station.isoperational">
                              <debug_text text="'Selected partner station ' + $Partner_Station + ' ' + $Partner_Station.knownname + ' in ' + $PotentialSector.knownname" chance="$DebugChance"/>
                              <break/>
                            </do_if>
                          </do_for_each>
                        </do_if>
                        <do_if value="not $Partner_Station">
                          <!--Fallback to any factory in the galaxy. Very unlikely-->
                          <find_station name="$Partner_Station" space="player.galaxy" reachablefrom="global.$BaseGameSector">
                            <match_content class="class.production" checkoperational="true"/>
                            <match owner="[faction.player, faction.hatikvah]" negate="true"/>
                            <match_relation_to faction="faction.hatikvah" relation="dock" comparison="ge"/>
                            <match_relation_to faction="faction.player" relation="dock" comparison="ge"/>
                            <match_dock size="tag.dock_s" walkable="true"/>
                            <match_any>
                              <!--The station must be either in another sector or 50km from the Hatikvah station-->
                              <match_context macro="$Hat_Station.sector.macro" negate="true"/>
                              <match_distance object="$Hat_Station" min="50km"/>
                            </match_any>
                          </find_station>
                        </do_if>
                        <do_if value="$Partner_Station">
                          <update_mission cue="Start" name="{30202,1011}" description="{30202,1012}" type="missiontype.plot"/>
                          <debug_text text="'Start trade run mission to ' + $Partner_Station + ' ' + $Partner_Station.knownname" chance="$DebugChance"/>
                          <do_if value="$LentFreighter.isoperational">
                            <add_cargo object="$LentFreighter" ware="$DeliverWare" exact="$DeliverAmount"/>
                            <update_mission cue="Start">
                              <briefing>
                                <objective step="2" action="objective.goto" object="$LentFreighter"/>
                              </briefing>
                            </update_mission>
                            <set_objective cue="Start" step="2" action="objective.goto" object="$LentFreighter"/>
                          </do_if>
                          <!--else, the mission will start automatically-->
                        </do_if>
                        <do_else>
                          <reset_cue cue="Pt1_Trade_Run"/>
                          <signal_cue cue="Pt1_Trade_Run_Reset"/>
                        </do_else>
                      </actions>
                      <cues>
                        <cue name="Pt1_Lent_Ship_Lost" checkinterval="1s">
                          <conditions>
                            <check_value value="not $LentFreighter.isoperational"/>
                          </conditions>
                          <actions>
                            <debug_text text="'Lent ship lost. Continuing mission'" chance="$DebugChance"/>
                            <signal_cue cue="Pt1_Trade_Run_Start" check="false"/>
                          </actions>
                        </cue>
                        <cue name="Pt1_Near_Lent_Ship" checkinterval="1s">
                          <conditions>
                            <check_value value="$LentFreighter.isoperational and $Hat_Station.isoperational and player.entity.hascontext.{$Hat_Station} and player.entity.distanceto.{$LentFreighter} lt 15m"/>
                          </conditions>
                          <actions>
                            <cancel_cue cue="Pt1_Player_Left_HAT_Station"/>
                            <!--
                            $Reen: "There she is."
                            $Reen: "We'll grant you access now."
                            $Reen: "Take good care of her, we don't have much of a budget for repairs."-->
                            <speak actor="$Reen" line="[30202127, if player.entity.isfemale then 30202129 else 30202128, 30202130]" priority="100" caninterrupt="false"/>
                            <set_owner object="$LentFreighter" faction="faction.player"/>
                            <debug_text text="'Set ship ' + $LentFreighter + ' ' + $LentFreighter.knownname + ' owner to ' + $LentFreighter.owner" chance="$DebugChance"/>
                            <signal_cue cue="Pt1_Trade_Run_Start" check="false"/>
                          </actions>
                        </cue>
                        <cue name="Pt1_Lent_Ship_Recall" checkinterval="15s" instantiate="true">
                          <conditions>
                            <check_value value="$Hat_Station.isoperational and $LentFreighter.exists and $LentFreighter.hascontext.{$Hat_Station}"/>
                          </conditions>
                          <actions>
                            <do_if value="$LentFreighter.parent.isstorage" comment="$LentFreighter is stored internally?">
                              <request_retrieval queuedresult="$QueuedResult1" grantedresult="$GrantedResult1" ship="$LentFreighter"/>
                              <debug_text text="'Requesting retrieval from internal storage for $LentFreighter'" chance="$DebugChance"/>
                            </do_if>
                          </actions>
                        </cue>
                        <cue name="Pt1_Player_Left_HAT_Station" checkinterval="1s">
                          <conditions>
                            <check_value value="not player.entity.hascontext.{$Hat_Station}"/>
                          </conditions>
                          <delay exact="3s"/>
                          <actions>
                            <!--
                            $Reen: "If you don't want to use the ship we've provided, that's fine. As long as you get the job done."-->
                            <speak actor="$Reen" line="30202131" caninterrupt="false"/>
                          </actions>
                          <cues>
                            <cue name="Pt1_Trade_Run_Force_Start">
                              <conditions>
                                <event_speak_finished actor="$Reen" line="30202131"/>
                              </conditions>
                              <actions>
                                <debug_text text="'Player left station prematurely without going to the lent freighter. Forcing supply mission to start.'" chance="$DebugChance"/>
                                <signal_cue cue="Pt1_Trade_Run_Start" check="false"/>
                              </actions>
                            </cue>
                          </cues>
                        </cue>
                        <cue name="Pt1_Trade_Run_Start" version="2">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <actions>
                            <cancel_cue cue="Pt1_Lent_Ship_Lost"/>
                            <cancel_cue cue="Pt1_Player_Left_HAT_Station"/>
                            <create_list name="$TradeOfferList"/>
                            <create_trade_offer buyer="$Partner_Station" object="$Partner_Station" ware="$DeliverWare" amount="$DeliverAmount" missioncue="namespace" name="$TradeOffer" playeronly="true" price="$DeliverWare.minprice"/>
                            <append_to_list name="$TradeOfferList" exact="$TradeOffer"/>
                          </actions>
                          <patch sinceversion="2">
                            <create_list name="$TradeOfferList"/>
                            <append_to_list name="$TradeOfferList" exact="$TradeOffer" comment="list with 1 element"/>
                            <set_value name="Esc_3_Deliver_Resources_Ref.$Offers" exact="$TradeOfferList"/>
                          </patch>
                          <cues>
                            <cue name="Pt1_Deliver_Wares_Ref" ref="md.RML_Deliver_Wares.DeliverWares">
                              <param name="EndSignalCue" value="Pt1_Deliver_Wares_End"/>
                              <param name="MissionCue" value="Start"/>
                              <param name="StartStep" value="2" comment="Briefing step to start the mission on."/>
                              <param name="Station" value="$Partner_Station" comment="The station to which the player should deliver wares"/>
                              <param name="Wares" value="$DeliveryTable" comment="Table of wares to accept. Format: table[{$Ware1} = $Amount1, {$Ware2} = $Amount2, ...]"/>
                              <param name="Offers" value="$TradeOfferList" comment=""/>
                              <param name="PlayerOnly" value="true"/>
                              <param name="DebugChance" value="$DebugChance"/>
                            </cue>
                            <cue name="Pt1_Deliver_Wares_End">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <cancel_cue cue="Pt1_Near_Lent_Ship"/>
                                <signal_cue cue="Pt1_Trade_Run_End"/>
                                <remove_trade_offer object="$Partner_Station" tradeoffer="$TradeOffer"/>
                              </actions>
                            </cue>
                            <cue name="Pt1_Trade_Run_End">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <!--TODO @Owen better check if the player delivered the last of the wares-->
                                <set_value name="$PlayerDelivered" exact="player.entity.hascontext.{$Partner_Station}"/>
                                <set_entity_traits entity="$Partner_Manager" subtitlename="true"/>
                                <!--TODO @Owen mission complete notification-->
                              </actions>
                              <cues>
                                <cue name="Pt1_Trade_Run_Player_Delivered" onfail="cancel">
                                  <conditions>
                                    <check_value value="$PlayerDelivered"/>
                                  </conditions>
                                  <delay exact="1s"/>
                                  <actions>
                                    <speak actor="$Partner_Manager">
                                      <text line="if player.entity.isfemale then 30202011 else 30202010" comment="Hello there captain. I understand you're delivering goods on behalf of Hatikvah."/>
                                      <text line="30202002" delay="0.5s" comment="Please standby while we run some checks."/>
                                    </speak>
                                  </actions>
                                  <cues>
                                    <!--Can't have a cutscene when the dock interaction menu is open-->
                                    <!--<cue name="Pt1_Trade_Run_Player_Delivered_Speak_Ref" ref="md.LIB_Dialog.Speak_Actor">
                                      <param name="Actor"             value="$Partner_Manager"/>
                                      <param name="CutsceneKey"       value="table[ $key = 'ShowCharacter']"/>
                                      <param name="Lines"             value="[[if player.entity.isfemale then 30202011 else 30202010, 1s], [30202002, 0.5s]]"/>
                                      <param name="WaitForFullscreen" value="false"/>
                                    </cue>-->
                                    <cue name="Pt1_Trade_Run_Player_Delivered_Start_Check">
                                      <conditions>
                                        <event_speak_finished actor="$Partner_Manager"/>
                                        <check_value value="[30202010, 30202011].indexof.{event.param2}"/>
                                      </conditions>
                                      <actions>
                                        <do_if value="player.controlled">
                                          <play_sound object="player.controlled.controlroom" sound="'ship_mt_police_scanning'"/>
                                        </do_if>
                                      </actions>
                                      <cues>
                                        <cue name="Pt1_Trade_Run_Player_Delivered_Left_Early" checkinterval="1s">
                                          <conditions>
                                            <check_value value="not player.entity.hascontext.{$Partner_Station}"/>
                                          </conditions>
                                          <actions>
                                            <cancel_cue cue="Pt1_Trade_Run_Player_Delivered_Check_Done"/>
                                            <speak actor="$Partner_Manager" line="if player.entity.isfemale then 30202005 else 30202004" comment="Hey, we did ask you to stay put. Anyway, the delivered goods were fine. Carry on, pilot."/>
                                          </actions>
                                        </cue>
                                        <cue name="Pt1_Trade_Run_Player_Delivered_Check_Done">
                                          <delay exact="5s"/>
                                          <actions>
                                            <cancel_cue cue="Pt1_Trade_Run_Player_Delivered_Left_Early"/>
                                            <speak actor="$Partner_Manager">
                                              <text line="30202003" comment="All clear. Sorry about that."/>
                                              <text line="30202006" delay="0.5s" comment="We're happy to see Hatikvah move away from those sketchy dealings of the past."/>
                                              <text line="30202007" comment="If it means fewer Scale Plate Pact ships in our space, I'm all for it."/>
                                              <text line="if player.entity.isfemale then 30202009 else 30202008" comment="Just watch your back out there, captain."/>
                                            </speak>
                                          </actions>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                                <cue name="Pt1_Player_Not_Delivered" onfail="cancel">
                                  <conditions>
                                    <check_value value="not $PlayerDelivered"/>
                                  </conditions>
                                  <delay exact="3s"/>
                                  <actions>
                                    <speak actor="$Partner_Manager">
                                      <text line="if player.entity.isfemale then 30202011 else 30202010" comment="Hello there captain. I understand you're delivering goods on behalf of Hatikvah."/>
                                      <text line="30202006" delay="0.5s" comment="We're happy to see Hatikvah move away from those sketchy dealings of the past."/>
                                      <text line="30202007" comment="If it means fewer Scale Plate Pact ships in our space, I'm all for it."/>
                                      <text line="if player.entity.isfemale then 30202009 else 30202008" comment="Just watch your back out there, captain."/>
                                    </speak>
                                  </actions>
                                </cue>
                                <cue name="Pt1_Return_To_Hatikvah">
                                  <conditions>
                                    <event_speak_finished actor="$Partner_Manager"/>
                                    <!--Check if any of these lines were spoken-->
                                    <check_any>
                                      <check_value value="$PlayerDelivered and event.param2 == 30202003"/>
                                      <check_value value="$PlayerDelivered and event.param2 == 30202004"/>
                                      <check_value value="$PlayerDelivered and event.param2 == 30202005"/>
                                      <check_value value="not $PlayerDelivered and event.param2 == 30202010"/>
                                      <check_value value="not $PlayerDelivered and event.param2 == 30202011"/>
                                    </check_any>
                                  </conditions>
                                  <actions>
                                    <signal_cue cue="Event_Police_Scan"/>
                                    <signal_cue cue="Pt2_Dal_Intro"/>
                                    <cancel_cue cue="Pt1_Hatikvah_Offer"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Event - Police scan
        This is an event which can happen when bridging Part 1 and 2.
        To keep the structure simple, this event is signalled when part 1 is over. Forcing part 2 will not trigger this event handling.-->
        <cue name="Event_Police_Scan" version="2">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Attempting to starting event ' + this" chance="$DebugChance"/>
            <set_value name="this.$Caught" exact="false"/>
            <set_value name="this.$Perform" exact="false"/>
            <do_if value="$LentFreighter.isoperational">
              <set_value name="$PoliceSector" exact="null"/>
              <do_if value="player.sector.policefaction == faction.argon">
                <set_value name="$PoliceSector" exact="player.sector"/>
              </do_if>
              <do_elseif value="$Hat_Station.sector.policefaction == faction.argon">
                <set_value name="$PoliceSector" exact="$Hat_Station.sector"/>
              </do_elseif>
              <do_if value="$PoliceSector">
                <set_value name="this.$Perform" exact="true"/>
              </do_if>
            </do_if>
            <do_else>
              <debug_text text="'The lent freighter from part 1 is neither not defined nor operational. Aborting event handler.'" chance="$DebugChance"/>
            </do_else>
            <do_if value="this.$Perform">
              <debug_text text="'Starting handling for event in ' + $PoliceSector + ' ' + $PoliceSector.knownname" chance="$DebugChance"/>
              <create_cue_actor name="$Argon_Police_Pilot" cue="namespace" macro="character_argon_female_plot_cynth_wilems_macro">
                <page exact="10107"/>
                <owner exact="faction.argon"/>
                <skills>
                  <skill type="management" exact="4"/>
                  <skill type="morale" exact="8"/>
                  <skill type="piloting" exact="9"/>
                  <skill type="engineering" exact="3"/>
                  <skill type="boarding" exact="5"/>
                </skills>
              </create_cue_actor>
              <set_entity_traits entity="$Argon_Police_Pilot" missionactor="true"/>
              <!--TODO @Owen find better place to spawn. At gate on route back?-->
              <create_ship name="$PoliceShip" capturable="false" zone="player.zone">
                <select faction="faction.argon" tags="[tag.fighter, tag.light]" size="class.ship_s"/>
                <loadout>
                  <level exact="0.7"/>
                </loadout>
                <owner exact="faction.argon" overridenpc="true"/>
                <pilot actor="$Argon_Police_Pilot"/>
                <safepos max="30km" object="player.entity.object"/>
              </create_ship>
              <do_if value="$PoliceShip">
                <!--TODO @Owen @CBJ - better ways of naming non-job ships. Could also be useful for giving NPCs different titles e.g. Ambassador, without needing a multitude of roles-->
                <set_object_name object="$PoliceShip" page="20204" line="6101" comment="Police"/>
                <!--Have the ship perform the police behaviour-->
                <create_order object="$PoliceShip" name="$PoliceOrder" id="'Police'" immediate="true">
                  <param name="targetclasses" value="[$LentFreighter.class]"/>
                  <param name="targetpurposes" value="[$LentFreighter.primarypurpose]"/>
                  <param name="debugchance" value="$DebugChance"/>
                </create_order>
              </do_if>
              <do_else>
                <debug_text text="'Unable to create police ship'" filter="error"/>
                <cancel_cue cue="Event_Police_Scan"/>
              </do_else>
            </do_if>
            <do_else>
              <cancel_cue cue="Event_Police_Scan"/>
            </do_else>
          </actions>
          <patch sinceversion="2" state="complete">
            <do_if value="Pt2_Meet_Dal_Usecase_2.state == cuestate.complete or Pt2_Meet_Dal_Usecase_2.state == cuestate.cancelled">
              <cancel_cue cue="Event_Police_Scan"/>
            </do_if>
          </patch>
          <cues>
            <cue name="Event_Police_Scan_Check_Player" checkinterval="2s" instantiate="true">
              <conditions>
                <check_any>
                  <check_all>
                    <check_value value="player.entity.hascontext.{$LentFreighter} and not $Argon_Police_Pilot.$override_policescanline?"/>
                    <!--Set override police scan line for this pilot-->
                    <set_value name="$Argon_Police_Pilot.$override_policescanline" exact="30202002"/>
                    <set_value name="$Argon_Police_Pilot.$override_policecontrabandline" exact="30202004"/>
                    <debug_text text="'Setting police pilot ' + $Argon_Police_Pilot + ' ' + $Argon_Police_Pilot.knownname + ' scan voice line to ' + $Argon_Police_Pilot.$override_policescanline + ' and contraband line to ' + $Argon_Police_Pilot.$override_policecontrabandline" debugchance="$DebugChance"/>
                  </check_all>
                  <check_all>
                    <check_value value="not player.entity.hascontext.{$LentFreighter} and $Argon_Police_Pilot.$override_policescanline?"/>
                    <remove_value name="$Argon_Police_Pilot.$override_policescanline"/>
                    <remove_value name="$Argon_Police_Pilot.$override_policecontrabandline"/>
                    <debug_text text="'Removing police pilot ' + $Argon_Police_Pilot + ' ' + $Argon_Police_Pilot.knownname + ' plot voice line'" debugchance="$DebugChance"/>
                  </check_all>
                </check_any>
              </conditions>
            </cue>
            <cue name="Event_Police_Scan_Player_Dropped_Contraband">
              <conditions>
                <event_speak_finished actor="$Argon_Police_Pilot" line="8001"/>
              </conditions>
              <delay exact="2s"/>
              <actions>
                <set_value name="Event_Police_Scan.$Caught" exact="true"/>
                <speak actor="$Argon_Police_Pilot">
                  <text line="30202005" comment="This incident has been logged."/>
                  <text line="if player.entity.isfemale then 30202006 else 30202005" comment="I see that this ship isn't registered to you. We'll be contacting the owner."/>
                </speak>
              </actions>
            </cue>
            <cue name="Event_Police_Scan_End">
              <conditions>
                <check_any>
                  <event_object_destroyed object="$LentFreighter"/>
                  <event_object_destroyed object="$PoliceShip"/>
                </check_any>
              </conditions>
              <actions>
                <debug_text text="event.object + ' ' + event.object.knownname + ' was destroyed'" chance="$DebugChance"/>
                <cancel_cue cue="Event_Police_Scan"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <library name="Create_Dal_Ship">
          <actions>
            <do_if value="not @$DalShip.exists">
              <debug_text text="player.age + ' Spawn Dals ship'" chance="$DebugChance"/>
              <find_dockingbay name="this.$Docks" object="$Hat_Station" walkable="true" multiple="true">
                <match_dock size="tag.dock_m" storage="false" free="true"/>
              </find_dockingbay>
              <do_if value="this.$Docks.count">
                <set_value name="this.$DockTable" exact="table[]"/>
                <do_all exact="this.$Docks.count" counter="$i">
                  <set_value name="this.$DockTable.{this.$Docks.{$i}}" exact="player.entity.distanceto.{this.$Docks.{$i}}"/>
                </do_all>
                <create_ship name="$DalShip" dock="this.$DockTable.keys.sorted.{1}" capturable="false" macro="macro.ship_arg_m_miner_solid_01_b_macro">
                  <pilot actor="null"/>
                  <owner exact="faction.hatikvah"/>
                </create_ship>
              </do_if>
              <do_else>
                <!--TODO @Owen add NPC_Placement_Manager support for control post locations-->
                <create_ship name="$DalShip" dock="$Hat_Station" capturable="false" macro="macro.ship_arg_m_miner_solid_01_b_macro">
                  <pilot actor="null"/>
                  <owner exact="faction.hatikvah"/>
                </create_ship>
              </do_else>
              <do_if value="not $DalShip">
                <create_ship name="$DalShip" zone="$Hat_Station.zone" capturable="false" macro="macro.ship_arg_m_miner_solid_01_b_macro">
                  <pilot actor="null"/>
                  <owner exact="faction.hatikvah"/>
                  <safepos object="$Hat_Station"/>
                </create_ship>
              </do_if>
              <assign_control_entity actor="$Kat" object="$DalShip" post="controlpost.aipilot" init="true" transfer="true"/>
              <!--Set Dal's ship to be indestructible for the rest of the mission until requested otherwise in chapter 9. Note, chapter shortcuts will not have the ship indestructible.-->
              <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                <param name="Object" value="$DalShip"/>
                <param name="RequesterCue" value="Start"/>
                <param name="DebugChance" value="$DebugChance"/>
              </run_actions>
              <set_value name="$DalShipID" exact="$DalShip.idcode"/>
              <create_order object="$DalShip" name="$DockAndWaitOrder" id="'DockAndWait'" default="true">
                <param name="destination" value="$Hat_Station"/>
              </create_order>
              <!--Enable default conversation for Kat while she's the pilot-->
              <set_entity_traits entity="$Kat" customhandler="false"/>
              <!--Add Cline to the gunner seat-->
              <set_entity_role entity="$Cline" role="entityrole.service"/>
              <set_entity_role_object entity="$Cline" object="$DalShip"/>
              <set_value name="$Cline.$Stay" exact="true"/>
              <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Cline,                       table[                       $requestercue = namespace,                       $location = $DalShip.controlposition.{controlposition.gunner}.roomslot,                       $priority = 100,                       $debugchance = $DebugChance2,                       $debugcaller = if $DebugChance2 == 100 then this else null]                       ]"/>
            </do_if>
          </actions>
        </library>
        <!--Part 2 - Dal Introduction-->
        <cue name="Pt2_Force">
          <force name="Plot_Diplomat_Pt2">
            <signal_cue_instantly cue="Force_Part" param="Pt2_Dal_Intro"/>
          </force>
        </cue>
        <cue name="Pt2_Dal_Intro">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <remove_mission cue="Start"/>
              <remove_offer cue="Start"/>
              <set_entity_traits entity="$Reen" subtitlename="true"/>
            </do_if>
          </actions>
          <cues>
            <cue name="Pt2_Dal_Intro_Init">
              <actions>
                <do_if value="$Hat_Station.isoperational">
                  <signal_cue cue="Pt2_Return_To_Hatikvah"/>
                </do_if>
                <do_else>
                  <signal_cue cue="Pt2_Find_Hatikvah_Station"/>
                </do_else>
              </actions>
            </cue>
            <cue name="Pt2_Find_Hatikvah_Station" instantiate="true">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <include_actions ref="Find_Hatikvah_Station"/>
                <do_if value="$Hat_Station.isoperational">
                  <signal_cue cue="Pt2_Return_To_Hatikvah"/>
                  <cancel_cue cue="this"/>
                </do_if>
              </actions>
              <cues>
                <cue name="Pt2_Find_Hatikvah_Station_Reset">
                  <delay min="30s" max="1min"/>
                  <actions>
                    <signal_cue cue="Pt2_Find_Hatikvah_Station.static"/>
                  </actions>
                </cue>
              </cues>
            </cue>
            <cue name="Pt2_Return_To_Hatikvah">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <cues>
                <!--In case the HAT Station only has 1 or 2 M docks, expand it while the player is returning.-->
                <cue name="Pt2_Expand_Hatikvah_Station">
                  <actions>
                    <find_dockingbay name="this.$Docks" object="$Hat_Station" walkable="true" multiple="true">
                      <match_dock size="tag.dock_m" storage="false"/>
                    </find_dockingbay>
                    <do_if value="this.$Docks.count lt 3">
                      <debug_text text="player.age + ' Expanding Hatikvah station with dockarea'" chance="$DebugChance"/>
                      <get_module_definition macro="$HatikvahConnectionModules" faction="faction.argon" tags="[tag.connection, tag.module]" set="'factory'" multiple="true"/>
                      <create_construction_sequence station="$Hat_Station" connectors="$HatikvahConnectionModules" base="$Hat_Station.plannedconstruction.sequence" macros="[macro.dockarea_arg_m_02_tradestation_01_macro]"/>
                      <remove_value name="$HatikvahConnectionModules"/>
                    </do_if>
                    <do_else>
                      <cancel_cue cue="this"/>
                    </do_else>
                  </actions>
                  <cues>
                    <cue name="Pt2_Expand_Hatikvah_Station_Finished">
                      <conditions>
                        <event_object_construction_sequence_created object="$Hat_Station"/>
                        <!--Just in case it fails and is expanded later-->
                        <check_value value="player.age lt parent.time + 30s"/>
                      </conditions>
                      <actions>
                        <debug_text text="player.age + ' Expanded Hatikvah station'" chance="$DebugChance"/>
                        <do_if value="event.param">
                          <apply_construction_sequence station="$Hat_Station" sequence="event.param"/>
                        </do_if>
                      </actions>
                    </cue>
                  </cues>
                </cue>
                <cue name="Pt2_Hatikvah_Station_Destroyed">
                  <conditions>
                    <event_object_destroyed object="$Hat_Station"/>
                  </conditions>
                  <actions>
                    <debug_text text="'Hatikvah station ' + event.object + ' ' + event.object.knownname + ' was destroyed before offer was accepted, resetting.'" chance="$DebugChance"/>
                    <!--TODO @Owen just remove the offer and have a timer until the reset?-->
                    <reset_cue cue="Pt2_Return_To_Hatikvah"/>
                    <signal_cue cue="Pt2_Find_Hatikvah_Station"/>
                  </actions>
                </cue>
                <cue name="Pt2_Return_To_Hatikvah_Objectives">
                  <actions>
                    <include_actions ref="Create_Reen_Office"/>
                    <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                                                table[                                               $requestercue = namespace,                                               $location = $Reen_Office_Room,                                               $priority = 100,                                               $slottags = [tag.sit],                                               $debugchance = $DebugChance2,                                               $debugcaller = if $DebugChance2 == 100 then this else null]                                               ]"/>
                    <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                               table[                                               $requestercue = namespace,                                               $location = $Reen_Office_Room,                                               $priority = 100,                                               $position = position.[-0.85m, 0.05m, -6.5m],                                               $rotation = rotation.[130deg, 0deg, 0deg],                                               $debugchance = $DebugChance2,                                               $debugcaller = if $DebugChance2 == 100 then this else null]                                               ]"/>
                    <do_if value="$Forced">
                      <create_mission cue="Start" abortable="false" type="missiontype.plot" name="{30202,1011}" description="{30202,1012}" difficulty="level.easy" faction="faction.hatikvah" icon="'briefing_reen_omara_01'" iconcaption="$Reen.knownname"/>
                    </do_if>
                  </actions>
                  <delay exact="50ms"/>
                  <actions>
                    <!--Keep the mission name and description from the previous part-->
                    <update_mission cue="Start">
                      <briefing>
                        <objective step="1" action="objective.dockat" object="$Hat_Station"/>
                        <objective step="2" action="objective.deliver" text="ware.medicalsupplies.name"/>
                        <objective step="3" action="objective.talkto" object="$Reen"/>
                      </briefing>
                    </update_mission>
                    <set_objective cue="Start" step="3" action="objective.talkto" object="$Reen"/>
                  </actions>
                </cue>
                <cue name="Pt2_Setup_Intro_Scene">
                  <conditions>
                    <!--TODO @Owen #important don't use attention levels for this-->
                    <check_any>
                      <check_all>
                        <event_object_changed_attention object="$Reen"/>
                        <check_value value="event.param ge attention.nearby"/>
                        <check_value value="$Dal.attention ge attention.nearby"/>
                      </check_all>
                      <check_all>
                        <event_object_changed_attention object="$Dal"/>
                        <check_value value="event.param ge attention.nearby"/>
                        <check_value value="$Reen.attention ge attention.nearby"/>
                      </check_all>
                    </check_any>
                  </conditions>
                  <cues>
                    <cue name="Pt2_Reset_Intro_Scene">
                      <conditions>
                        <check_any>
                          <check_all>
                            <event_object_changed_attention object="$Reen"/>
                            <check_value value="event.param lt attention.nearby"/>
                          </check_all>
                          <check_all>
                            <event_object_changed_attention object="$Reen"/>
                            <check_value value="event.param lt attention.nearby"/>
                          </check_all>
                        </check_any>
                      </conditions>
                      <actions>
                        <debug_text text="'Left scene area. Resetting.'" chance="$DebugChance"/>
                        <reset_cue cue="Pt2_Setup_Intro_Scene"/>
                      </actions>
                    </cue>
                    <cue name="Pt2_Player_At_Scene">
                      <conditions>
                        <event_object_changed_attention object="$Dal"/>
                        <check_value value="event.param ge attention.adjacentroom"/>
                      </conditions>
                      <actions>
                        <debug_text text="'Player arrived near office'" chance="$DebugChance"/>
                      </actions>
                      <cues>
                        <cue name="Pt2_Player_Left_Scene">
                          <conditions>
                            <event_object_changed_attention object="$Dal"/>
                            <check_value value="event.param lt attention.adjacentroom"/>
                          </conditions>
                          <actions>
                            <reset_cue cue="Pt2_Player_At_Scene"/>
                          </actions>
                        </cue>
                        <cue name="Pt2_Intro_Scene_Usecase_1">
                          <delay exact="2s"/>
                          <actions>
                            <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Dal_Eavesdrop_1', $actors = table[ $Dal = $Dal, $Reen = $Reen ], $callbackcue = Pt2_Intro_Scene_Usecase_2, $abortcallbackcue = Pt2_Intro_Scene_Usecase_2, $debugchance = $DebugChance ]"/>
                          </actions>
                          <cues>
                            <cue name="Pt2_Intro_Scene_Usecase_2">
                              <conditions>
                                <check_any>
                                  <event_speak_finished actor="$Reen" line="30202019"/>
                                  <event_cue_signalled/>
                                </check_any>
                              </conditions>
                              <delay exact="5s"/>
                              <actions>
                                <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Dal_Eavesdrop_2', $actors = table[ $Dal = $Dal, $Reen = $Reen ], $callbackcue = Pt2_Intro_Scene_Usecase_3, $abortcallbackcue = Pt2_Intro_Scene_Usecase_3, $debugchance = $DebugChance ]"/>
                              </actions>
                              <cues>
                                <cue name="Pt2_Intro_Scene_Usecase_3">
                                  <conditions>
                                    <check_any>
                                      <event_speak_finished actor="$Reen" line="30202022"/>
                                      <event_cue_signalled/>
                                    </check_any>
                                  </conditions>
                                  <delay exact="5s"/>
                                  <actions>
                                    <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Dal_Eavesdrop_3', $actors = table[ $Dal = $Dal, $Reen = $Reen ], $debugchance = $DebugChance ]"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                        <cue name="Pt2_Intro_Scene_Dal_Spoke" instantiate="true">
                          <conditions>
                            <event_speak_finished actor="$Dal"/>
                          </conditions>
                          <actions>
                            <debug_text text="'Spoke ' + event.param2" chance="$DebugChance"/>
                            <do_if value="event.param2 == 10043">
                              <start_actor_sequence actor="$Dal" type="'facepalm01'" behavior="'stand'" transition="true" immediate="false"/>
                            </do_if>
                          </actions>
                        </cue>
                        <cue name="Pt2_Player_Interrupts" checkinterval="50ms">
                          <conditions>
                            <check_value value="player.room == $Reen.room"/>
                          </conditions>
                          <actions>
                            <!--DEBUG-->
                            <set_value name="$RunCount" operation="add"/>
                            <do_if value="$RunCount gt 1">
                              <!--DEBUG TODO - Reset Dal location-->
                              <add_actor_to_room actor="$Dal" object="$Reen.room">
                                <position x="-0.85m" y="0.0424m" z="-6.5m"/>
                                <rotation yaw="130deg"/>
                              </add_actor_to_room>
                            </do_if>
                            <debug_text text="'Player is in the room. Cancel the usecases.'"/>
                            <cancel_cue cue="Pt2_Intro_Scene_Usecase_1"/>
                            <do_all exact="md.NPC_UseCases.UseCaseManager.$ActiveUseCases.count" counter="$i" reverse="true">
                              <do_if value="md.NPC_UseCases.UseCaseManager.$ActiveUseCases.{$i}.$ActorGroup.indexof.{$Dal} and md.NPC_UseCases.UseCaseManager.$ActiveUseCases.{$i}.$ActorGroup.indexof.{$Reen}">
                                <signal_cue_instantly cue="md.NPC_UseCases.UseCaseManager.$ActiveUseCases.{$i}" param="'cleanup'"/>
                              </do_if>
                            </do_all>
                            <!--Clear talkto objective-->
                            <!--<set_objective cue="Start" action="objective.none"/>-->
                            <!--Create Dal's ship on the dock area-->
                            <!--TODO @Owen don't allow the ship to be stored-->
                            <!--TODO @Owen unique or rare paint mod?-->
                            <!--TODO @Owen unique name-->
                            <do_if value="not @$DalShip.exists">
                              <include_actions ref="Create_Dal_Ship"/>
                            </do_if>
                            <!--At this point, the player will get the next mission. Do not reset the scene if they leave.-->
                            <cancel_cue cue="Pt2_Reset_Intro_Scene"/>
                            <cancel_cue cue="Pt2_Player_Left_Scene"/>
                            <!--Start cutscene-->
                            <!--
                            *Behind chair shot*
                            Pan up
                            Characters not speaking
                            $Diplomacy_Intro_Meet_Dal_1
                            Reen 30202087/30202088: Captain, good to see you back.
                            Dal turns
                            
                            *Reen/Dal side shot*
                            Dal still turning
                            Dal 30202008: Ah, this must be the new recruit.
                            
                            $Diplomacy_Intro_Meet_Dal_2a
                            Reen 30202024/30202025: I see you had some trouble with the Argon police.
                            Reen 30202026: Don't worry about it. We're not exactly saints here.
                            
                            OR
                            
                            $Diplomacy_Intro_Meet_Dal_2b
                            Reen 30202027: Things went smoothly, I take it.
                            
                            $Diplomacy_Intro_Meet_Dal_3
                            Reen gestures to Dal
                            Reen 30202028: This is Dal Busta. He's been helping us in our efforts to expand our business.
                            Dal 30202009: That's one way of putting it.
                            
                            *Reen face shot*
                            Reen 30202029: As you may have heard, a Hatikvah freighter was destroyed earlier today.
                            Reen 30202030: It seems that the Scale Plate Pact don't like the idea of us 'going clean'.
                            
                            *Dal side shot, Reen in background*
                            Dal 30202010: Unfortunately, this is what happens when you act on bad intel.
                            Reen looks at Dal
                            Reen 30202031: That's something we're looking to improve on.
                            
                            *Reen face shot 2*
                            Reen 30202032/30202033: If you're willing, I'd like you to help us.
                            Reen 30202034: Our goal is to break all ties with Scale Plate, while making sure they don't continue harassing us.
                            
                            *Reen/Dal side shot 2*
                            Dal looks at Reen
                            Dal 30202011: Easier said than done, but with the right preparation, I'll have them eating out of your hand.
                            Dal walks out
                            
                            *Dal leaves shot*
                            Dal 30202012: I'll be in my ship. I look forward to working with you.
                            3s
                            END CUTSCENE
                            
                            Reen 30202035: He's nothing if not confident.
                            Reen 30202036: So, what do you say?
                            
                            -->
                            <set_value name="$LastCutsceneKey" exact="'Story_Diplomacy_Intro_2'"/>
                            <set_value name="$ShotMaxDuration" exact="7s"/>
                            <set_value name="$CutsceneRoom" exact="$Reen.room"/>
                            <!--TODO @Owen allow to be abortable.-->
                            <play_cutscene result="$LastCutscene" key="$LastCutsceneKey" abortable="false">
                              <param name="sequenceobject" object="$CutsceneRoom"/>
                              <param name="bc_targetobject" object="$CutsceneRoom"/>
                              <param name="rd1_targetobject" object="$CutsceneRoom"/>
                              <param name="rf1_targetobject" object="$CutsceneRoom"/>
                              <param name="ds_targetobject" object="$CutsceneRoom"/>
                              <param name="rf2_targetobject" object="$CutsceneRoom"/>
                              <param name="rd2_targetobject" object="$CutsceneRoom"/>
                              <param name="dl_targetobject" object="$CutsceneRoom"/>
                            </play_cutscene>
                          </actions>
                          <cues>
                            <cue name="Pt2_Greet_Player" checkinterval="5ms">
                              <conditions>
                                <check_value value="not $Dal.isspeaking and not $Reen.isspeaking"/>
                              </conditions>
                              <delay exact="0.3s"/>
                              <actions>
                                <debug_text text="'Trigger player involved usecase.'" chance="$DebugChance"/>
                                <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Meet_Dal_1', $actors = table[ $Dal = $Dal, $Reen = $Reen ], $callbackcue = Pt2_Intro_Scene_Usecase_3, $abortcallbackcue = Pt2_Intro_Scene_Usecase_3, $debugchance = $DebugChance ]"/>
                              </actions>
                              <cues>
                                <cue name="Pt2_Meet_Dal_Usecase_2">
                                  <conditions>
                                    <check_any>
                                      <event_speak_finished actor="$Dal" line="30202008" comment="Ah, this must be the new recruit."/>
                                      <event_cue_signalled/>
                                    </check_any>
                                  </conditions>
                                  <delay exact="0.3s"/>
                                  <actions>
                                    <do_if value="Event_Police_Scan.$Caught">
                                      <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Meet_Dal_2a', $actors = table[ $Reen = $Reen ], $callbackcue = Pt2_Meet_Dal_Usecase_3, $abortcallbackcue = Pt2_Meet_Dal_Usecase_3, $debugchance = $DebugChance ]"/>
                                    </do_if>
                                    <do_else>
                                      <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Meet_Dal_2b', $actors = table[ $Reen = $Reen ], $callbackcue = Pt2_Meet_Dal_Usecase_3, $abortcallbackcue = Pt2_Meet_Dal_Usecase_3, $debugchance = $DebugChance ]"/>
                                    </do_else>
                                    <cancel_cue cue="Event_Police_Scan"/>
                                  </actions>
                                  <cues>
                                    <cue name="Pt2_Meet_Dal_Usecase_3">
                                      <conditions>
                                        <check_any>
                                          <check_all>
                                            <event_speak_finished actor="$Reen"/>
                                            <check_value value="[30202026, 30202027].indexof.{event.param2}"/>
                                          </check_all>
                                          <event_cue_signalled/>
                                        </check_any>
                                      </conditions>
                                      <delay exact="0.2s"/>
                                      <actions>
                                        <!--TODO @Owen Reen gestures to Dal, currently temp lookat-->
                                        <set_entity_traits entity="$Dal" subtitlename="true"/>
                                        <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Meet_Dal_3', $actors = table[ $Dal = $Dal, $Reen = $Reen ], $debugchance = $DebugChance ]"/>
                                      </actions>
                                    </cue>
                                  </cues>
                                </cue>
                                <cue name="Pt2_Greet_Player_Wait">
                                  <conditions>
                                    <event_cue_completed cue="Pt2_Greet_Player"/>
                                  </conditions>
                                  <cues>
                                    <cue name="Pt2_Greet_Player_Turn_Around">
                                      <delay exact="0.4s"/>
                                      <actions>
                                        <start_actor_sequence actor="$Dal" type="'turnleft90'" transition="false" behavior="'generic'"/>
                                      </actions>
                                      <cues>
                                        <cue name="Pt2_Greet_Player_Turn_Around_Stop">
                                          <conditions>
                                            <event_character_animation_finished object="$Dal" id="'anim_turnleft90_01'"/>
                                          </conditions>
                                          <actions>
                                            <start_actor_sequence actor="$Dal" type="'idle'" transition="false" behavior="'generic'"/>
                                          </actions>
                                        </cue>
                                        <cue name="Pt2_Cutscene_Reen_Dal_Side_01">
                                          <conditions>
                                            <event_cue_completed cue="Pt2_Greet_Player_Turn_Around"/>
                                          </conditions>
                                          <delay exact="1.0s"/>
                                          <actions>
                                            <set_value name="$ShotMaxDuration" exact="25s"/>
                                            <set_value name="$CutsceneEvent" exact="'BehindChairEnd'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <set_value name="$CutsceneEvent" exact="'ReenDal1Start'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <!--Warp player to different position-->
                                            <add_actor_to_room actor="player.entity" object="$CutsceneRoom">
                                              <position x="0.822m" y="1.808m" z="-2.564m"/>
                                              <rotation yaw="-157.5deg"/>
                                            </add_actor_to_room>
                                          </actions>
                                          <cues>
                                            <cue name="Pt2_Cutscene_Reen_Dal_Side_01_Wait">
                                              <conditions>
                                                <event_cue_completed cue="Pt2_Cutscene_Reen_Dal_Side_01"/>
                                              </conditions>
                                              <cues>
                                                <cue name="Pt2_Cutscene_Reen_Face_01_Force">
                                                  <delay exact="$ShotMaxDuration"/>
                                                  <actions>
                                                    <signal_cue cue="Pt2_Cutscene_Reen_Face_01" check="false"/>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="Pt2_Cutscene_Reen_Face_01">
                                          <conditions>
                                            <check_any>
                                              <event_cue_signalled/>
                                              <event_speak_finished actor="$Dal" line="30202009" comment="That's one way of putting it."/>
                                            </check_any>
                                          </conditions>
                                          <delay exact="0.2s"/>
                                          <actions>
                                            <set_value name="$ShotMaxDuration" exact="25s"/>
                                            <set_value name="$CutsceneEvent" exact="'ReenDal1End'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <set_value name="$CutsceneEvent" exact="'ReenFace1Start'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt2_Cutscene_Reen_Face_01_Wait">
                                              <conditions>
                                                <event_cue_completed cue="Pt2_Cutscene_Reen_Face_01"/>
                                              </conditions>
                                              <cues>
                                                <cue name="Pt2_Cutscene_Dal_Side_Force">
                                                  <delay exact="$ShotMaxDuration"/>
                                                  <actions>
                                                    <signal_cue cue="Pt2_Cutscene_Dal_Side" check="false"/>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="Pt2_Cutscene_Dal_Side">
                                          <conditions>
                                            <check_any>
                                              <event_cue_signalled/>
                                              <event_speak_finished actor="$Reen" line="30202030" comment="It seems that the Scale Plate Pact don't like the idea of us 'going clean'."/>
                                            </check_any>
                                          </conditions>
                                          <delay exact="1ms"/>
                                          <actions>
                                            <set_value name="$ShotMaxDuration" exact="25s"/>
                                            <set_value name="$CutsceneEvent" exact="'ReenFace1End'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <set_value name="$CutsceneEvent" exact="'DalSideStart'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt2_Cutscene_Dal_Side_Wait">
                                              <conditions>
                                                <event_cue_completed cue="Pt2_Cutscene_Dal_Side"/>
                                              </conditions>
                                              <cues>
                                                <cue name="Pt2_Cutscene_Reen_Face_02_Force">
                                                  <delay exact="$ShotMaxDuration"/>
                                                  <actions>
                                                    <signal_cue cue="Pt2_Cutscene_Reen_Face_02" check="false"/>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="Pt2_Cutscene_Reen_Face_02">
                                          <conditions>
                                            <check_any>
                                              <event_cue_signalled/>
                                              <event_speak_finished actor="$Reen" line="30202031" comment="That's something we're looking to improve on."/>
                                            </check_any>
                                          </conditions>
                                          <delay exact="1ms"/>
                                          <actions>
                                            <set_value name="$ShotMaxDuration" exact="25s"/>
                                            <set_value name="$CutsceneEvent" exact="'DalSideEnd'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <set_value name="$CutsceneEvent" exact="'ReenFace2Start'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt2_Cutscene_Reen_Face_02_Wait">
                                              <conditions>
                                                <event_cue_completed cue="Pt2_Cutscene_Reen_Face_02"/>
                                              </conditions>
                                              <cues>
                                                <cue name="Pt2_Cutscene_Reen_Dal_Side_02_Force">
                                                  <delay exact="$ShotMaxDuration"/>
                                                  <actions>
                                                    <signal_cue cue="Pt2_Cutscene_Reen_Dal_Side_02" check="false"/>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="Pt2_Cutscene_Reen_Dal_Side_02">
                                          <conditions>
                                            <check_any>
                                              <event_cue_signalled/>
                                              <event_speak_finished actor="$Reen" line="30202034" comment="Our goal is to break all ties with Scale Plate, while making sure they don't continue harassing us."/>
                                            </check_any>
                                          </conditions>
                                          <delay exact="1ms"/>
                                          <actions>
                                            <set_value name="$ShotMaxDuration" exact="25s"/>
                                            <set_value name="$CutsceneEvent" exact="'ReenFace2End'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <set_value name="$CutsceneEvent" exact="'ReenDal2Start'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt2_Cutscene_Reen_Dal_Side_02_Wait">
                                              <conditions>
                                                <event_cue_completed cue="Pt2_Cutscene_Reen_Dal_Side_02"/>
                                              </conditions>
                                              <cues>
                                                <cue name="Pt2_Cutscene_Dal_Leaves_Force">
                                                  <delay exact="$ShotMaxDuration"/>
                                                  <actions>
                                                    <signal_cue cue="Pt2_Cutscene_Dal_Leaves" check="false"/>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="Pt2_Cutscene_Dal_Leaves">
                                          <conditions>
                                            <check_any>
                                              <event_cue_signalled/>
                                              <event_speak_finished actor="$Dal" line="30202011" comment="Easier said than done, but with the right preparation, I'll have them eating out of your hand."/>
                                            </check_any>
                                          </conditions>
                                          <delay exact="0.3s"/>
                                          <actions>
                                            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                                     table[                                                     $requestercue = namespace,                                                     $location = $DalShip.controlroom,                                                     $priority = 100,                                                     $position = position.[1.62m, 0.05m, -1.8m],                                                     $rotation = rotation.[65deg, 0deg, 0deg],                                                     $debugchance = $DebugChance2,                                                     $debugcaller = if $DebugChance2 == 100 then this else null]                                                     ]"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt2_Cutscene_Dal_Leaves_Wait">
                                              <conditions>
                                                <event_cue_completed cue="Pt2_Cutscene_Dal_Leaves"/>
                                              </conditions>
                                              <delay exact="0.5s"/>
                                              <actions>
                                                <set_value name="$CutsceneEvent" exact="'ReenDal2End'"/>
                                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                                <set_value name="$CutsceneEvent" exact="'DalLeavesStart'"/>
                                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                              </actions>
                                              <cues>
                                                <cue name="Pt2_Cutscene_Dal_Leaves_End">
                                                  <delay exact="7s"/>
                                                  <actions>
                                                    <set_value name="$CutsceneEvent" exact="'DalLeavesEnd'"/>
                                                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                                    <update_mission cue="Start" name="{30202,1021}" description="{30202,1022}"/>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="Pt2_Dal_Conv_Started_Early" instantiate="true">
                                          <conditions>
                                            <event_conversation_started actor="$Dal"/>
                                          </conditions>
                                          <actions>
                                            <add_npc_line speaker="$Dal" line="30202222"/>
                                          </actions>
                                        </cue>
                                        <library name="Pt2_Reen_Conv_Player_Options">
                                          <actions>
                                            <do_if value="Pt2_Reen_Conv_Next_Accept.state == cuestate.waiting">
                                              <add_player_choice text="{30202,701}" section="conv_accept" position="top_right"/>
                                              <add_player_choice text="{30202,702}" section="conv_decline" position="bottom_right"/>
                                              <do_if value="not @$PlayerSelected_ReenConv_ScalePlate">
                                                <add_player_choice text="{30202,703}" section="conv_ask_scaleplate" position="top_left"/>
                                              </do_if>
                                              <do_if value="not @$PlayerSelected_ReenConv_Dal">
                                                <add_player_choice text="{30202,704}" section="conv_ask_dal" position="left"/>
                                              </do_if>
                                            </do_if>
                                            <do_else>
                                              <!--Nothing-->
                                            </do_else>
                                          </actions>
                                        </library>
                                        <cue name="Pt2_Reen_Conv_Started" instantiate="true">
                                          <conditions>
                                            <event_conversation_started actor="$Reen"/>
                                          </conditions>
                                          <actions>
                                            <do_if value="@static.$Offered">
                                              <add_npc_line speaker="$Reen" line="30202094" hidechoices="true" comment="Thanks for coming."/>
                                            </do_if>
                                            <do_else>
                                              <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202037 else 30202036" hidechoices="true" comment="So, what do you say?"/>
                                            </do_else>
                                            <include_actions ref="Pt2_Reen_Conv_Player_Options"/>
                                            <set_value name="static.$Offered" exact="true"/>
                                          </actions>
                                        </cue>
                                        <cue name="Pt2_Reen_Conv_Next_Section" instantiate="true">
                                          <conditions>
                                            <event_conversation_next_section actor="$Reen"/>
                                          </conditions>
                                          <actions>
                                            <do_if value="event.param == 'conv_decline'">
                                              <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202039 else 30202038" hidechoices="true" comment="Fair enough. The offer stands if you change your mind."/>
                                            </do_if>
                                            <do_elseif value="event.param == 'conv_ask_scaleplate'">
                                              <set_value name="$PlayerSelected_ReenConv_ScalePlate" exact="true"/>
                                              <add_npc_line speaker="$Reen" line="30202043" hidechoices="true"/>
                                              <add_npc_line speaker="$Reen" line="30202044" hidechoices="true"/>
                                              <add_npc_line speaker="$Reen" line="30202045" hidechoices="true"/>
                                              <include_actions ref="Pt2_Reen_Conv_Player_Options"/>
                                            </do_elseif>
                                            <do_elseif value="event.param == 'conv_ask_dal'">
                                              <set_value name="$PlayerSelected_ReenConv_Dal" exact="true"/>
                                              <add_npc_line speaker="$Reen" line="30202040" hidechoices="true"/>
                                              <add_npc_line speaker="$Reen" line="30202041" hidechoices="true"/>
                                              <add_npc_line speaker="$Reen" line="30202042" hidechoices="true"/>
                                              <include_actions ref="Pt2_Reen_Conv_Player_Options"/>
                                            </do_elseif>
                                          </actions>
                                        </cue>
                                        <cue name="Pt2_Reen_Conv_Next_Accept">
                                          <conditions>
                                            <event_conversation_next_section actor="$Reen" section="conv_accept"/>
                                          </conditions>
                                          <actions>
                                            <add_npc_line speaker="$Reen" line="30202046" hidechoices="true"/>
                                            <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202048 else 30202047" hidechoices="true"/>
                                            <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202050 else 30202049" hidechoices="true"/>
                                            <add_npc_line speaker="$Reen" line="30202051" hidechoices="true"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt2_Reen_Conv_Finished">
                                              <conditions>
                                                <event_conversation_finished actor="$Reen"/>
                                              </conditions>
                                              <actions>
                                                <debug_text text="'Updating mission briefing with Dal related tasks'" chance="$DebugChance"/>
                                                <update_mission cue="Start">
                                                  <briefing>
                                                    <!--was:
                                                    1: Dock at Hatikvah station
                                                    2: Deliver resources to other station
                                                    3: Talk to Hatikvah manager-->
                                                    <objective step="1" action="objective.deliver" text="ware.medicalsupplies.name"/>
                                                    <objective step="2" action="objective.talkto" text="$Reen.knownname"/>
                                                    <objective step="3" action="objective.talkto" object="$Dal"/>
                                                  </briefing>
                                                </update_mission>
                                                <set_objective cue="Start" step="3" action="objective.talkto" object="$Dal"/>
                                                <cancel_cue cue="Pt2_Dal_Conv_Started_Early"/>
                                              </actions>
                                              <cues>
                                                <library name="Pt2_Dal_Conv_Player_Options">
                                                  <actions>
                                                    <!--Where can I help?-->
                                                    <add_player_choice text="{30202,705}" section="conv_accept" position="top_right"/>
                                                    <!--Not right now. OR Goodbye.-->
                                                    <add_player_choice text="if @Pt2_Dal_Conv_Started.$Offered then {30202,706} else {30202,707}" section="conv_decline" position="bottom_right"/>
                                                    <do_if value="event.param != 'conv_ask_hatikvah'">
                                                      <do_if value="event.param == 'conv_ask_dal'">
                                                        <!--Why are Hatikvah being targeted?-->
                                                        <add_player_choice text="{30202,708}" section="conv_ask_hatikvah" position="top_left"/>
                                                      </do_if>
                                                      <do_else>
                                                        <!--What exactly do you do?-->
                                                        <add_player_choice text="{30202,709}" section="conv_ask_dal" position="top_left"/>
                                                      </do_else>
                                                    </do_if>
                                                  </actions>
                                                </library>
                                                <cue name="Pt2_Dal_Conv_Started" instantiate="true">
                                                  <conditions>
                                                    <event_conversation_started actor="$Dal"/>
                                                  </conditions>
                                                  <actions>
                                                    <do_if value="@static.$PlayerWaiting">
                                                      <add_npc_line speaker="$Dal" line="30202036" hidechoices="true" comment="The worm's not ready just yet."/>
                                                      <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202038 else 30202037" hidechoices="true"/>
                                                    </do_if>
                                                    <do_else>
                                                      <do_if value="@static.$Offered">
                                                        <add_npc_line speaker="$Dal" line="30202017" hidechoices="true" comment="Are you ready to get started?"/>
                                                      </do_if>
                                                      <do_else>
                                                        <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202190 else 30202189" hidechoices="true" comment="Ah, captain."/>
                                                        <add_npc_line speaker="$Dal" line="30202014" hidechoices="true"/>
                                                        <add_npc_line speaker="$Dal" line="30202015" hidechoices="true"/>
                                                        <add_npc_line speaker="$Dal" line="30202016" hidechoices="true"/>
                                                        <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202192 else 30202191" hidechoices="true" comment="So, what can I do for you?"/>
                                                      </do_else>
                                                      <include_actions ref="Pt2_Dal_Conv_Player_Options"/>
                                                      <set_value name="static.$Offered" exact="true"/>
                                                    </do_else>
                                                  </actions>
                                                </cue>
                                                <cue name="Pt2_Dal_Conv_Next_Section" instantiate="true">
                                                  <conditions>
                                                    <event_conversation_next_section actor="$Dal"/>
                                                  </conditions>
                                                  <actions>
                                                    <do_if value="event.param == 'conv_decline'">
                                                      <add_npc_line speaker="$Dal" line="2007" hidechoices="true" comment="Good luck out there."/>
                                                    </do_if>
                                                    <do_elseif value="event.param == 'conv_ask_dal'">
                                                      <add_npc_line speaker="$Dal" line="30202019" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202020" hidechoices="true"/>
                                                      <include_actions ref="Pt2_Dal_Conv_Player_Options"/>
                                                    </do_elseif>
                                                    <do_elseif value="event.param == 'conv_ask_hatikvah'">
                                                      <add_npc_line speaker="$Dal" line="30202021" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202022" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202023" hidechoices="true"/>
                                                      <include_actions ref="Pt2_Dal_Conv_Player_Options"/>
                                                    </do_elseif>
                                                  </actions>
                                                </cue>
                                                <cue name="Pt2_Dal_Conv_Next_Accept">
                                                  <conditions>
                                                    <event_conversation_next_section actor="$Dal" section="conv_accept"/>
                                                  </conditions>
                                                  <actions>
                                                    <do_if value="player.entity.isfemale">
                                                      <add_npc_line speaker="$Dal" line="30202025" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202026" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202027" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202029" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202031" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202033" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202035" hidechoices="true"/>
                                                    </do_if>
                                                    <do_else>
                                                      <add_npc_line speaker="$Dal" line="30202024" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202026" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202027" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202028" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202030" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202032" hidechoices="true"/>
                                                      <add_npc_line speaker="$Dal" line="30202034" hidechoices="true"/>
                                                    </do_else>
                                                  </actions>
                                                  <cues>
                                                    <library name="Pt2_Create_Backup_ScalePlate_Station">
                                                      <actions>
                                                        <find_sector name="$FallbackScalePlateSector" macro="macro.cluster_44_sector001_macro"/>
                                                        <create_station name="$Invincible_ScalePlateStation" macro="macro.station_gen_piratebase_base_01_macro" owner="faction.scaleplate" sector="$FallbackScalePlateSector" state="componentstate.operational" constructionplan="'gen_piratedock'">
                                                          <safepos x="200km" z="-145km" space="$FallbackScalePlateSector"/>
                                                        </create_station>
                                                        <signal_objects object="player.galaxy" param="'init station'" param2="$Invincible_ScalePlateStation" param3="false"/>
                                                        <!--Use Pt2_Dal_Conv_Finished as the requester-->
                                                        <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                                                          <param name="Object" value="$Invincible_ScalePlateStation"/>
                                                          <param name="RequesterCue" value="Pt2_Dal_Conv_Finished"/>
                                                          <param name="DebugChance" value="$DebugChance"/>
                                                        </run_actions>
                                                      </actions>
                                                    </library>
                                                    <cue name="Pt2_Dal_Conv_Finished" version="2">
                                                      <conditions>
                                                        <event_conversation_finished actor="$Dal"/>
                                                      </conditions>
                                                      <actions>
                                                        <set_objective cue="Start" step="4" action="objective.undock" object="$Hat_Station" updatebriefing="true"/>
                                                        <update_mission cue="Start" icon="'briefing_dal_busta_01'" iconcaption="$Dal.knownname">
                                                          <briefing>
                                                            <!--was:
                                                            1: Dock at Hatikvah station
                                                            2: Deliver resources to other station
                                                            3: Talk to Hatikvah manager
                                                            4: Undock from station-->
                                                            <objective step="1" action="objective.deliver" text="ware.medicalsupplies.name"/>
                                                            <objective step="2" action="objective.talkto" text="$Reen.knownname"/>
                                                            <objective step="3" action="objective.talkto" object="$Dal"/>
                                                            <objective step="4" action="objective.scan" text="{30202,2001}"/>
                                                          </briefing>
                                                        </update_mission>
                                                        <!--Set several Scale Plate Stations to known-->
                                                        <set_value name="$ScalePlateStations" exact="[]"/>
                                                        <find_sector_in_range name="$NearSectors" object="$Hat_Station" maxdistance="4" multiple="true"/>
                                                        <find_station_by_true_owner name="$ScalePlateStations" faction="faction.scaleplate" space="$NearSectors" multiple="true"/>
                                                        <do_if value="$ScalePlateStations.count == 0">
                                                          <find_sector_in_range name="$NearSectors" object="$Hat_Station" maxdistance="6" multiple="true"/>
                                                          <find_station_by_true_owner name="$ScalePlateStations" faction="faction.scaleplate" space="$NearSectors" multiple="true"/>
                                                        </do_if>
                                                        <do_if value="$ScalePlateStations.count">
                                                          <shuffle_list list="$ScalePlateStations"/>
                                                          <!--Set one station to be invincible-->
                                                          <set_value name="$Invincible_ScalePlateStation" exact="$ScalePlateStations.{1}"/>
                                                          <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                                                            <param name="Object" value="$Invincible_ScalePlateStation"/>
                                                            <param name="RequesterCue" value="Pt2_Dal_Conv_Finished"/>
                                                            <param name="DebugChance" value="$DebugChance"/>
                                                          </run_actions>
                                                          <do_for_each name="$RevealedStation" in="$ScalePlateStations" counter="$i">
                                                            <set_known object="$RevealedStation" known="true" updatesnapshot="true"/>
                                                            <set_known object="$RevealedStation.zone" known="true"/>
                                                            <set_known object="$RevealedStation.sector" known="true"/>
                                                            <set_known object="$RevealedStation.cluster" known="true"/>
                                                            <do_if value="$i ge 3">
                                                            <break/>
                                                            </do_if>
                                                          </do_for_each>
                                                        </do_if>
                                                        <do_else>
                                                          <include_actions ref="Pt2_Create_Backup_ScalePlate_Station"/>
                                                        </do_else>
                                                        <remove_value name="$ScalePlateStations"/>
                                                      </actions>
                                                      <patch sinceversion="2" state="complete">
                                                        <set_value name="$Invincible_ScalePlateStation" exact="null"/>
                                                        <do_if value="Pt2_Data_Leak_Scanned.state == cuestate.waiting">
                                                          <find_station_by_true_owner name="$Invincible_ScalePlateStation" faction="faction.scaleplate" space="player.galaxy"/>
                                                          <do_if value="$Invincible_ScalePlateStation">
                                                            <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                                                            <param name="Object" value="$Invincible_ScalePlateStation"/>
                                                            <param name="RequesterCue" value="Pt2_Dal_Conv_Finished"/>
                                                            <param name="DebugChance" value="$DebugChance"/>
                                                            </run_actions>
                                                          </do_if>
                                                          <do_else>
                                                            <include_actions ref="Pt2_Create_Backup_ScalePlate_Station"/>
                                                          </do_else>
                                                        </do_if>
                                                      </patch>
                                                      <cues>
                                                        <cue name="Pt2_Returned_To_Ship" checkinterval="1s">
                                                          <conditions>
                                                            <check_value value="player.ship and player.ship.isplayerowned"/>
                                                          </conditions>
                                                          <cues>
                                                            <cue name="Pt2_Worm_Speak_Wrapper" onfail="cancel">
                                                            <conditions>
                                                            <!--Check parent activation time so that it doesn't trigger on patching-->
                                                            <check_value value="player.age lt parent.time + 1s"/>
                                                            </conditions>
                                                            <cues>
                                                            <!--
                                                                We've uploaded the worm to your ship database.
                                                                Don't worry. It won't do anything to your systems.-->
                                                            <cue name="Pt2_Worm_Speak_Ref" ref="md.LIB_Dialog.Speak_Actor">
                                                            <param name="Actor" value="$Dal"/>
                                                            <param name="CutsceneKey" value="table[ $key = 'ShowCharacter']"/>
                                                            <param name="Lines" value="[[if player.entity.isfemale then 30202040 else 30202039, 1s], [if player.entity.isfemale then 30202042 else 30202041, 0.5s]]"/>
                                                            <param name="WaitForFullscreen" value="false"/>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            <cue name="Pt2_Worm_Speak_Finished">
                                                            <conditions>
                                                            <event_speak_finished actor="$Dal"/>
                                                            <check_value value="event.param2 == 30202039 or event.param2 == 30202040"/>
                                                            </conditions>
                                                            </cue>
                                                            <cue name="Pt2_Scan_Data_Leak" checkinterval="1s" version="2">
                                                            <conditions>
                                                            <check_any>
                                                            <cue_is_complete cue="Pt2_Worm_Speak_Finished"/>
                                                            <!--TODO @Owen #hack in some situations Pt2_Worm_Speak_Wrapper was complete but the speak events didn't fire-->
                                                            <check_value value="player.age gt Pt2_Returned_To_Ship.time + 30s"/>
                                                            </check_any>
                                                            <check_value value="not player.entity.hascontext.{$Hat_Station}"/>
                                                            </conditions>
                                                            <actions>
                                                            <update_mission cue="Start" name="{30202,1031}" description="{30202,1032} + '\n\n' + {30202,1035}"/>
                                                            <set_objective cue="Start" step="4" action="objective.scan" text="{30202,2002}" updatebriefing="true"/>
                                                            <!--Prevent Scale Plate stations having signal leak missions during this mission-->
                                                            <append_to_list name="md.Signal_Leaks.Manager.$ExcludedMissionFactions" exact="faction.scaleplate"/>
                                                            <create_group groupname="$ScalePlateFighters"/>
                                                            </actions>
                                                            <patch sinceversion="2" state="complete">
                                                            <do_if value="Pt2_Data_Leak_Scanned.state == cuestate.waiting">
                                                            <append_to_list name="md.Signal_Leaks.Manager.$ExcludedMissionFactions" exact="faction.scaleplate"/>
                                                            </do_if>
                                                            </patch>
                                                            <cues>
                                                            <cue name="Pt2_Scan_Data_Leak_Speak_Wrapper" onfail="cancel">
                                                            <conditions>
                                                            <!--Check parent activation time so that it doesn't trigger on patching-->
                                                            <check_value value="player.age lt parent.time + 1s"/>
                                                            </conditions>
                                                            <cues>
                                                            <!--
                                                                    The safest method of delivery is through an external vulnerability.
                                                                    You can usually find some on poorly-maintained stations.
                                                                    We leave it up to you which station to target. Just let the program do its thing.-->
                                                            <cue name="Pt2_Scan_Data_Leak_Speak_Ref" ref="md.LIB_Dialog.Speak_Actor">
                                                            <param name="Actor" value="$Dal"/>
                                                            <param name="CutsceneKey" value="table[ $key = 'ShowCharacter']"/>
                                                            <param name="Lines" value="[[30202043, 1s], [if player.entity.isfemale then 30202045 else 30202044], [if player.entity.isfemale then 30202047 else 30202046]]"/>
                                                            <param name="WaitForFullscreen" value="false"/>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            <cue name="Pt2_ScalePlate_Station_Hint">
                                                            <delay exact="30min"/>
                                                            <actions>
                                                            <do_if value="not $Invincible_ScalePlateStation.exists">
                                                            <assert value="$Invincible_ScalePlateStation.exists" text="'An invincible Scale Plate station should have existed at this point. Create one. [Owen]'"/>
                                                            <include_actions ref="Pt2_Create_Backup_ScalePlate_Station"/>
                                                            </do_if>
                                                            <substitute_text text="$ScalePlateStationMessageText" source="{30202,2056}">
                                                            <replace string="'$NAME$'" with="$Invincible_ScalePlateStation.knownname"/>
                                                            <replace string="'$IDCODE$'" with="$Invincible_ScalePlateStation.idcode"/>
                                                            <replace string="'$SECTOR$'" with="$Invincible_ScalePlateStation.sector.knownname"/>
                                                            </substitute_text>
                                                            <write_incoming_message result="$ScalePlateStationMessage" title="{30202,2055}" text="$ScalePlateStationMessageText" source="$Kat.knownname" highpriority="true" read="false" interaction="showonmap" object="$Invincible_ScalePlateStation"/>
                                                            <remove_value name="$ScalePlateStationMessageText"/>
                                                            </actions>
                                                            <cues>
                                                            <cue name="Pt2_ScalePlate_Station_Hint_Message_Readd" checkinterval="5s">
                                                            <conditions>
                                                            <check_value value="Pt2_ScalePlate_Station_Hint.state == cuestate.complete and not player.ismessageunread.{$ScalePlateStationMessage}"/>
                                                            </conditions>
                                                            <actions>
                                                            <do_if value="$Invincible_ScalePlateStation.exists">
                                                            <!--Update the briefing with the intel-->
                                                            <substitute_text text="this.$ScaleplateStationText" source="{30202,1036}">
                                                            <replace string="'$SECTOR$'" with="$Invincible_ScalePlateStation.sector.knownname"/>
                                                            </substitute_text>
                                                            <update_mission cue="Start" description="{30202,1032} + '\n\n' + {30202,1035} + '\n\n' + this.$ScaleplateStationText"/>
                                                            <remove_value name="this.$ScaleplateStationText"/>
                                                            </do_if>
                                                            </actions>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            <cue name="Pt2_Scaleplate_Fighter_Captured" instantiate="true">
                                                            <conditions>
                                                            <event_object_changed_true_owner group="$ScalePlateFighters"/>
                                                            </conditions>
                                                            <actions>
                                                            <remove_from_group group="$ScalePlateFighters" object="event.object"/>
                                                            </actions>
                                                            </cue>
                                                            <cue name="Pt2_Near_Scaleplate_Station" checkinterval="2s">
                                                            <conditions>
                                                            <check_value value="player.sector and player.ship"/>
                                                            <count_stations min="1" owner="faction.scaleplate" space="player.sector">
                                                            <match_distance object="player.entity" max="4km"/>
                                                            </count_stations>
                                                            </conditions>
                                                            <cues>
                                                            <!--TODO @Owen recursive hint on using an EMP-->
                                                            <cue name="Pt2_Near_Scaleplate_Station_Speak_Wrapper" onfail="cancel">
                                                            <conditions>
                                                            <!--Check parent activation time so that it doesn't trigger on patching-->
                                                            <check_value value="player.age lt parent.time + 1s"/>
                                                            </conditions>
                                                            <cues>
                                                            <!--
                                                                        Use your ship's scan mode to look for any data leaks.
                                                                        If you have any spacesuit EMP(spoken E.M.P) mines, you could use them to expose further leaks.-->
                                                            <cue name="Pt2_Near_Scaleplate_Station_Speak_Ref" ref="md.LIB_Dialog.Speak_Actor">
                                                            <param name="Actor" value="$Dal"/>
                                                            <param name="CutsceneKey" value="table[ $key = 'ShowCharacter']"/>
                                                            <param name="Lines" value="[[if player.entity.isfemale then 30202049 else 30202048], [if player.entity.isfemale then 30202051 else 30202050]]"/>
                                                            <param name="WaitForFullscreen" value="false"/>
                                                            </cue>
                                                            <!--Reset the reminder for the next time the player is near a suitable station-->
                                                            <cue name="Pt2_Near_Scaleplate_Station_Reset">
                                                            <delay exact="30min"/>
                                                            <actions>
                                                            <reset_cue cue="Pt2_Near_Scaleplate_Station"/>
                                                            </actions>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            <cue name="Pt2_Data_Leak_Scanned" version="2">
                                                            <conditions>
                                                            <event_player_signal_unlock_finished/>
                                                            <check_value value="event.param.type == signalleaktype.data and event.param2 and (event.param2.isclass.station or event.param2.object.isclass.station) and not event.param2.isplayerowned"/>
                                                            <check_value value="event.param2.owner == faction.scaleplate"/>
                                                            </conditions>
                                                            <actions>
                                                            <cancel_cue cue="Pt2_Near_Scaleplate_Station"/>
                                                            <cancel_cue cue="Pt2_ScalePlate_Station_Hint"/>
                                                            <remove_from_list name="md.Signal_Leaks.Manager.$ExcludedMissionFactions" exact="faction.scaleplate" multiple="false" comment="Only the first to allow multiple exclusion requests"/>
                                                            <!--Remove the invincibility request for Scale plate station which we made invincible-->
                                                            <do_if value="$Invincible_ScalePlateStation">
                                                            <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                                                            <param name="Object" value="$Invincible_ScalePlateStation"/>
                                                            <param name="RequesterCue" value="Pt2_Dal_Conv_Finished"/>
                                                            <param name="DebugChance" value="$DebugChance"/>
                                                            </run_actions>
                                                            </do_if>
                                                            <set_value name="$ScannedScalePlateStation" exact="event.param2.object"/>
                                                            <!--Spawn some scale plate ships docked at the station to go after the player-->
                                                            <!--TODO @Owen better positioning. Commandeer some?-->
                                                            <find_ship_by_true_owner groupname="$NearPlayerShips" faction="faction.player" unit="false" space="player.sector" multiple="true">
                                                            <match class="class.spacesuit" negate="true"/>
                                                            <match_parent class="class.zone"/>
                                                            <match_distance object="player.entity" max="15km"/>
                                                            </find_ship_by_true_owner>
                                                            <!--TODO @Owen explicity add the player ship. docked ships?-->
                                                            <do_if value="$NearPlayerShips.count">
                                                            <sort_group group="$NearPlayerShips" sortbydistanceto="player.entity"/>
                                                            <do_all exact="3" counter="$i">
                                                            <find_dockingbay name="$FreeDockingBay" object="$ScannedScalePlateStation">
                                                            <match_dock storage="true" free="true" size="tag.dock_s"/>
                                                            </find_dockingbay>
                                                            <do_if value="$FreeDockingBay">
                                                            <create_ship name="$Fighter" groupname="$ScalePlateFighters" sector="player.sector" dock="$FreeDockingBay">
                                                            <select faction="faction.scaleplate" size="class.ship_s" tags="tag.fighter"/>
                                                            <owner exact="faction.scaleplate" overridenpc="true"/>
                                                            </create_ship>
                                                            </do_if>
                                                            <do_else>
                                                            <create_ship name="$Fighter" groupname="$ScalePlateFighters" sector="player.sector">
                                                            <select faction="faction.scaleplate" size="class.ship_s" tags="tag.fighter"/>
                                                            <owner exact="faction.scaleplate" overridenpc="true"/>
                                                            <safepos object="player.entity" min="40km" max="50km"/>
                                                            </create_ship>
                                                            </do_else>
                                                            </do_all>
                                                            </do_if>
                                                            <remove_value name="$Fighter"/>
                                                            </actions>
                                                            <patch sinceversion="2" state="complete">
                                                            <cancel_cue cue="Pt2_Near_Scaleplate_Station"/>
                                                            </patch>
                                                            <cues>
                                                            <cue name="Pt2_Data_Leak_Scanned_Speak_Wrapper" onfail="cancel">
                                                            <conditions>
                                                            <!--Check parent activation time so that it doesn't trigger on patching-->
                                                            <check_value value="player.age lt parent.time + 1s"/>
                                                            </conditions>
                                                            <cues>
                                                            <!--
                                                                        This is Dal.
                                                                        We're getting data from the worm program.
                                                                        Good work. Now, get out of there safely.-->
                                                            <cue name="Pt2_Data_Leak_Scanned_Speak_Ref" ref="md.LIB_Dialog.Speak_Actor">
                                                            <param name="Actor" value="$Dal"/>
                                                            <param name="CutsceneKey" value="table[ $key = 'ShowCharacter']"/>
                                                            <param name="Lines" value="[[30202052], [30202053], [30202054]]"/>
                                                            <param name="WaitForFullscreen" value="false"/>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            <cue name="Pt2_Leave_Station">
                                                            <delay exact="4s"/>
                                                            <actions>
                                                            <set_objective cue="Start" step="4" action="objective.flyto" text="{30202,2003}" updatebriefing="true"/>
                                                            </actions>
                                                            <delay exact="6s"/>
                                                            <actions>
                                                            <do_for_each name="$Fighter" in="$ScalePlateFighters" counter="$i">
                                                            <set_relation_boost object="$Fighter" faction="faction.player" silent="true" decay="0.00000001" value="-0.7"/>
                                                            <do_if value="$NearPlayerShips.count">
                                                            <create_order object="$Fighter" id="'Attack'">
                                                            <param name="primarytarget" value="if $i le 2 then $NearPlayerShips.{1} else $NearPlayerShips.random"/>
                                                            <param name="pursuetargets" value="true"/>
                                                            <param name="allowothertargets" value="false"/>
                                                            </create_order>
                                                            </do_if>
                                                            <do_else>
                                                            <create_order object="$Fighter" id="'Patrol'" default="true">
                                                            <param name="space" value="$Fighter.sector"/>
                                                            </create_order>
                                                            </do_else>
                                                            </do_for_each>
                                                            </actions>
                                                            </cue>
                                                            <cue name="Pt2_ScalePlate_Ships_Near" checkinterval="5s">
                                                            <conditions>
                                                            <check_value value="player.age gt Pt2_Data_Leak_Scanned.time + 20s"/>
                                                            <check_any counter="$i">
                                                            <check_value value="$ScalePlateFighters.{$i}.sector == player.sector and $ScalePlateFighters.{$i}.distanceto.{player.entity} le 10km"/>
                                                            </check_any>
                                                            </conditions>
                                                            <cues>
                                                            <cue name="Pt2_ScalePlate_Ships_Near_Speak_Wrapper" onfail="cancel">
                                                            <conditions>
                                                            <!--Check parent activation time so that it doesn't trigger on patching-->
                                                            <check_value value="player.age lt parent.time + 1s"/>
                                                            </conditions>
                                                            <cues>
                                                            <!--Looks like you've got some Scale Plate ships after you.-->
                                                            <cue name="Pt2_ScalePlate_Ships_Near_Speak_Ref" ref="md.LIB_Dialog.Speak_Actor">
                                                            <param name="Actor" value="$Dal"/>
                                                            <param name="CutsceneKey" value="table[ $key = 'ShowCharacter']"/>
                                                            <param name="Lines" value="[[30202055]]"/>
                                                            <param name="WaitForFullscreen" value="false"/>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            <cue name="Pt2_Scaleplate_Fighter_Changed_Owner" instantiate="true">
                                                            <conditions>
                                                            <event_object_changed_owner group="$ScalePlateFighters"/>
                                                            </conditions>
                                                            <actions>
                                                            <remove_from_group group="$ScalePlateFighters" object="event.object"/>
                                                            </actions>
                                                            </cue>
                                                            <cue name="Pt2_Player_Escaped" checkinterval="2s">
                                                            <conditions>
                                                            <check_value value="player.age gt Pt2_Data_Leak_Scanned.time + 30s"/>
                                                            <check_value value="not $ScannedScalePlateStation.exists or player.sector != $ScannedScalePlateStation.sector or player.entity.distanceto.{$ScannedScalePlateStation} gt 25km"/>
                                                            <check_all counter="$i">
                                                            <check_value value="$ScalePlateFighters.{$i}.sector != player.sector or $ScalePlateFighters.{$i}.distanceto.{player.entity} gt 40km"/>
                                                            </check_all>
                                                            </conditions>
                                                            <actions>
                                                            <!--End of part 2-->
                                                            <signal_cue cue="Pt3_Going_Offensive"/>
                                                            <cancel_cue cue="Pt2_Dal_Intro"/>
                                                            </actions>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                            </cues>
                                                            </cue>
                                                          </cues>
                                                        </cue>
                                                      </cues>
                                                    </cue>
                                                  </cues>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Part 3 - Going Offensive-->
        <cue name="Pt3_Force">
          <force name="Plot_Diplomat_Pt3">
            <signal_cue_instantly cue="Force_Part" param="Pt3_Going_Offensive"/>
          </force>
        </cue>
        <cue name="Pt3_Going_Offensive">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <create_mission cue="Start" abortable="false" type="missiontype.plot" name="{30202,1041}" description="{30202,1042}" difficulty="level.easy" faction="faction.hatikvah"/>
              <include_actions ref="Create_Reen_Office"/>
              <set_entity_traits entity="$Reen" subtitlename="true"/>
              <set_entity_traits entity="$Dal" subtitlename="true"/>
              <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                  table[                 $requestercue = namespace,                 $location = $Reen_Office_Room,                 $priority = 100,                 $slottags = [tag.sit],                 $debugchance = $DebugChance2,                 $debugcaller = if $DebugChance2 == 100 then this else null]                 ]"/>
              <do_if value="@$DalShip.exists">
                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                   table[                   $requestercue = namespace,                   $location = $DalShip.controlroom,                   $priority = 100,                   $position = position.[1.62m, 0.05m, -1.8m],                   $rotation = rotation.[95deg, 0deg, 0deg],                   $debugchance = $DebugChance2,                   $debugcaller = if $DebugChance2 == 100 then this else null]                   ]"/>
              </do_if>
              <do_else>
                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                   table[                   $requestercue = namespace,                   $location = $Reen_Office_Room,                   $priority = 100,                   $position = position.[-0.85m, 0.05m, -6.5m],                   $rotation = rotation.[130deg, 0deg, 0deg],                   $debugchance = $DebugChance2,                   $debugcaller = if $DebugChance2 == 100 then this else null]                   ]"/>
              </do_else>
            </do_if>
          </actions>
          <cues>
            <cue name="Pt3_Going_Offensive_Intro_Conv">
              <delay exact="5s"/>
              <actions>
                <!--ware.weapon_gen_spacesuit_demolition_01_mk1-->
                <!--ware.bomb_player_limpet_mine_01_mk1-->
                <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Harass_ScalePlate_Comm', $actors = table[ $Reen = $Reen, $Dal = $Dal ], $debugchance = $DebugChance ]"/>
              </actions>
            </cue>
            <cue name="Pt3_Check_Mines" version="2">
              <conditions>
                <event_speak_finished actor="$Dal"/>
                <check_value value="event.param2 == 30202062"/>
              </conditions>
              <actions>
                <update_mission cue="Start" name="{30202,1041}" description="{30202,1042}" difficulty="level.medium">
                  <!--Clear previous briefing steps-->
                  <briefing replace="true">
                    <objective step="1" action="objective.scan" text="{30202,2002}"/>
                  </briefing>
                </update_mission>
                <set_value name="$CollectInventoryStartStep" exact="2"/>
                <set_value name="$InventoryTable" exact="table[{ware.weapon_gen_spacesuit_demolition_01_mk1} = 1, {ware.bomb_player_limpet_mine_01_mk1} = 2]"/>
                <set_value name="$SabotageStep" exact="$CollectInventoryStartStep + $InventoryTable.keys.count"/>
              </actions>
              <patch sinceversion="2" state="waiting">
                <do_if value="Pt3_Going_Offensive_Intro_Conv.state == cuestate.complete">
                  <speak actor="$Dal" line="30202062"/>
                </do_if>
              </patch>
              <cues>
                <cue name="Pt3_Get_Mines_Ref" ref="md.RML_Collect_Inventory.CollectInventory">
                  <param name="EndSignalCue" value="Pt3_Get_Mines_End"/>
                  <param name="MissionCue" value="Start"/>
                  <param name="StartStep" value="$CollectInventoryStartStep"/>
                  <param name="Objective" value="objective.acquire_ware"/>
                  <param name="WaresParam" value="$InventoryTable"/>
                  <param name="DebugChance" value="$DebugChance"/>
                </cue>
                <cue name="Pt3_Get_Mines_Speak">
                  <delay exact="2s"/>
                  <actions>
                    <speak actor="$Dal" line="if player.entity.isfemale then 30202064 else 30202063" comment="I'll send you information on the materials you'll need."/>
                    <substitute_text text="$BombHintText" source="{30202,1044}">
                      <replace string="'$WARE$'" with="ware.bomb_player_limpet_mine_01_mk1.name"/>
                    </substitute_text>
                    <do_for_each name="$BombResource" in="ware.bomb_player_limpet_mine_01_mk1.resources.list">
                      <set_value name="$BombHintText" operation="add" exact="'\n' + $BombResource.name"/>
                    </do_for_each>
                    <update_mission cue="Start" description="{30202,1042} + '\n' + $BombHintText"/>
                  </actions>
                  <delay exact="3s"/>
                  <actions>
                    <show_help custom="$BombHintText" position="1" duration="10s"/>
                  </actions>
                </cue>
                <cue name="Pt3_Cheat_Wares" instantiate="true">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <do_for_each name="$CheatWare" valuename="$CheatAmount" in="$InventoryTable">
                      <add_inventory entity="player.entity" ware="$CheatWare" exact="$CheatAmount"/>
                    </do_for_each>
                  </actions>
                </cue>
                <cue name="Pt3_Add_Sabotage_Objective">
                  <delay exact="1s"/>
                  <actions>
                    <!--Update the briefing with the sabotage step after the RML has had time to set up-->
                    <update_mission cue="Start">
                      <briefing>
                        <objective step="$SabotageStep" action="objective.sabotage" text="{30202,2004}" comment="Sabotage: Delivery"/>
                      </briefing>
                    </update_mission>
                  </actions>
                </cue>
                <cue name="Pt3_Get_Mines_End">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <do_if value="Pt3_Get_Mines_Speak.state == cuestate.active">
                      <cancel_cue cue="Pt3_Get_Mines_Speak"/>
                    </do_if>
                  </actions>
                  <cues>
                    <cue name="Pt3_Get_Mines_End_Speak" checkinterval="1s">
                      <conditions>
                        <check_value value="not player.isinconversation"/>
                      </conditions>
                      <delay exact="2s"/>
                      <actions>
                        <set_value name="Pt3_Get_Mines_End_Speak.$SabotageTriggered" exact="false"/>
                        <do_if value="Pt3_Get_Mines_End.$EndFeedbackValue == 1">
                          <speak actor="$Dal" line="1000401" comment="Great work."/>
                        </do_if>
                        <do_elseif value="Pt3_Get_Mines_End.$EndFeedbackValue == 2">
                          <debug_text text="'Player already had all needed wares'" chance="$DebugChance"/>
                          <speak actor="$Dal" line="if player.entity.isfemale then 30202068 else 30202067" comment="It appears that you already have the materials."/>
                          <substitute_text text="$MineNotification" source="{30202,1043}">
                            <replace string="'$WARE$'" with="ware.bomb_player_limpet_mine_01_mk1.name"/>
                            <replace string="'$AMOUNT$'" with="player.entity.inventory.{ware.bomb_player_limpet_mine_01_mk1}.count"/>
                          </substitute_text>
                          <show_notification text="$MineNotification" sound="ui_notification_player_alert_01"/>
                        </do_elseif>
                      </actions>
                    </cue>
                    <cue name="Pt3_Sabotage_Recheck" instantiate="true">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <delay exact="45s"/>
                      <actions>
                        <signal_cue cue="Pt3_Sabotage"/>
                      </actions>
                    </cue>
                    <cue name="Pt3_Sabotage" version="2">
                      <conditions>
                        <check_any>
                          <check_all>
                            <event_speak_finished actor="$Dal"/>
                            <check_value value="not Pt3_Get_Mines_End_Speak.$SabotageTriggered"/>
                          </check_all>
                          <event_cue_signalled/>
                        </check_any>
                      </conditions>
                      <actions>
                        <set_value name="Pt3_Get_Mines_End_Speak.$SabotageTriggered" exact="true"/>
                        <set_value name="$SabotageStation" exact="null"/>
                        <find_station_by_true_owner name="this.$Stations" faction="faction.scaleplate" sortbygatedistanceto="player.sector" multiple="true" space="player.galaxy">
                          <match_content class="class.pier"/>
                          <!--We have to add a class check for dockingbay as counting contents with match_dock could include the same dock twice.
                          Once when querying its walkable module, and again when querying the dockingbay itself-->
                          <match_content min="2" class="class.dockingbay">
                            <match_dock size="tag.dock_l"/>
                          </match_content>
                        </find_station_by_true_owner>
                        <!--Don't use the same station that the player scanned unless we have to-->
                        <do_if value="@$ScannedScalePlateStation.exists and this.$Stations.indexof.{$ScannedScalePlateStation}">
                          <remove_from_list name="this.$Stations" exact="$ScannedScalePlateStation"/>
                          <append_to_list name="this.$Stations" exact="$ScannedScalePlateStation"/>
                        </do_if>
                        <do_if value="this.$Stations.count">
                          <set_value name="$SabotageStation" exact="null"/>
                          <do_for_each name="this.$Station" in="this.$Stations">
                            <find_dockingbay name="this.$Docks" multiple="true" object="this.$Station" chance="$DebugChance">
                              <match_dock size="tag.dock_l"/>
                            </find_dockingbay>
                            <find_buy_offer result="$Offers" multiple="true" buyer="this.$Station"/>
                            <debug_text text="this.$Station + ' ' + this.$Station.knownname + ' in ' + this.$Station.sector.knownname + ' docks: ' + this.$Docks.count + ' offers: ' + $Offers.count" chance="$DebugChance"/>
                            <do_if value="$Offers.count">
                              <do_for_each in="$Offers" name="$Offer">
                                <do_if value="$Offer.ware.waretransport == waretransport.container">
                                  <set_value name="$SabotageStation" exact="this.$Station"/>
                                  <break/>
                                </do_if>
                              </do_for_each>
                              <do_if value="$SabotageStation">
                                <break/>
                              </do_if>
                            </do_if>
                          </do_for_each>
                        </do_if>
                        <do_if value="$SabotageStation">
                          <set_value name="$OfferWares" exact="[]"/>
                          <sort_list list="$Offers" sortbyvalue="loop.element.amount" sortdescending="true"/>
                          <do_for_each in="$Offers" name="$Offer">
                            <do_if value="$Offer.ware.waretransport == waretransport.container">
                              <append_to_list name="$OfferWares" exact="$Offer.ware"/>
                            </do_if>
                          </do_for_each>
                          <set_objective cue="Start" step="$SabotageStep" action="objective.sabotage" object="$SabotageStation" updatebriefing="true"/>
                          <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                            <param name="Object" value="$SabotageStation"/>
                            <param name="RequesterCue" value="Start"/>
                            <param name="DebugChance" value="$DebugChance"/>
                          </run_actions>
                        </do_if>
                        <do_else>
                          <signal_cue cue="Pt3_Sabotage_Recheck"/>
                          <reset_cue cue="this"/>
                        </do_else>
                      </actions>
                      <patch sinceversion="2">
                        <check_object result="$patch_result" object="$SabotageStation">
                          <match_content class="class.pier"/>
                          <match_content min="2" class="class.dockingbay">
                            <match_dock size="tag.dock_l"/>
                          </match_content>
                        </check_object>
                        <do_if value="$patch_result">
                          <debug_text text="'Setting sabotage target ' + $SabotageStation + ' ' + $SabotageStation.knownname + ' to indestructible'" filter="savegame"/>
                          <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                            <param name="Object" value="$SabotageStation"/>
                            <param name="RequesterCue" value="Start"/>
                            <param name="DebugChance" value="$DebugChance"/>
                          </run_actions>
                        </do_if>
                        <do_else>
                          <debug_text text="'Sabotage target ' + @$SabotageStation + ' ' + @$SabotageStation.knownname + ' is no longer suitable. Resetting mission.'" filter="savegame"/>
                          <do_if value="@$SabotageShip.exists">
                            <destroy_object object="$SabotageShip"/>
                          </do_if>
                          <!--Await: New Target-->
                          <set_objective cue="Start" step="$SabotageStep" action="objective.await" text="{30202,2007}" updatebriefing="true"/>
                          <signal_cue cue="Pt3_Sabotage_Recheck"/>
                          <reset_cue cue="Pt3_Sabotage"/>
                        </do_else>
                      </patch>
                      <cues>
                        <!--If the player hasn't approached the station and the ship hasn't spawned, find another station. Otherwise, just end this section.-->
                        <cue name="Pt3_Station_Lost__Reset">
                          <conditions>
                            <event_object_destroyed object="$SabotageStation"/>
                            <check_value value="Pt3_Sabotage_SpawnShip.state == cuestate.waiting"/>
                          </conditions>
                          <actions>
                            <!--Await: New Target-->
                            <set_objective cue="Start" step="$SabotageStep" action="objective.await" text="{30202,2007}" updatebriefing="true"/>
                            <signal_cue cue="Pt3_Sabotage_Recheck"/>
                            <reset_cue cue="Pt3_Sabotage"/>
                          </actions>
                        </cue>
                        <cue name="Pt3_Station_Lost__EndPart">
                          <conditions>
                            <event_object_destroyed object="$SabotageStation"/>
                            <check_value value="Pt3_Sabotage_SpawnShip.state == cuestate.complete"/>
                          </conditions>
                          <delay exact="2s"/>
                          <actions>
                            <!--That's certainly going to send a message.-->
                            <speak actor="$Dal" line="30202077"/>
                            <signal_cue_instantly cue="Pt3_End" param="10s"/>
                          </actions>
                        </cue>
                        <cue name="Pt3_Sabotage_SpawnShip" checkinterval="1s" version="2">
                          <conditions>
                            <check_value value="$SabotageStation.isoperational and player.sector == $SabotageStation.sector and player.entity.distanceto.{$SabotageStation} lt 10km"/>
                          </conditions>
                          <actions>
                            <cancel_cue cue="Pt3_Station_Lost__Reset"/>
                            <set_value name="$TradeSabotageSuccessful" exact="false"/>
                            <!--This teladi has a full page but will speak one line from page 10551.-->
                            <create_cue_actor name="$SabotageShipPilot" cue="Start">
                              <select faction="faction.scaleplate" tags="tag.pilot" race="race.teladi"/>
                              <owner exact="faction.scaleplate"/>
                            </create_cue_actor>
                            <!--Can board-->
                            <create_ship name="$SabotageShip" macro="macro.ship_tel_l_trans_container_01_b_macro" sector="$SabotageStation.sector">
                              <drop ref="ship_large_civilian"/>
                              <pilot actor="$SabotageShipPilot"/>
                              <owner exact="faction.scaleplate" overridenpc="true"/>
                              <people ref="teladi_freighter_crew"/>
                              <!--TODO @Owen better position-->
                              <position object="$SabotageStation" z="50km"/>
                            </create_ship>
                            <add_units object="$SabotageShip" category="unitcategory.transport" mk="1" exact="5"/>
                            <debug_text text="'spawned ship ' + $SabotageShip + ' ' + $SabotageShip.knownname + ' in ' + $SabotageShip.zone + ' at ' + $SabotageShip.position" chance="$DebugChance"/>
                            <do_for_each in="$OfferWares" name="$Ware" counter="$i">
                              <do_if value="$i == 1">
                                <add_cargo object="$SabotageShip" ware="$Ware" min="$SabotageShip.cargo.{$Ware}.free / 2" max="$SabotageShip.cargo.{$Ware}.free"/>
                              </do_if>
                              <do_elseif value="$i == $OfferWares.count">
                                <add_cargo object="$SabotageShip" ware="$Ware" exact="$SabotageShip.cargo.{$Ware}.free"/>
                              </do_elseif>
                              <do_else>
                                <add_cargo object="$SabotageShip" ware="$Ware" min="1" max="[$SabotageShip.cargo.{$Ware}.free / $OfferWares.count, 1].max"/>
                              </do_else>
                              <debug_text text="'Added ' + $SabotageShip.cargo.{$Ware}.count + ' of ' + $Ware" chance="$DebugChance"/>
                            </do_for_each>
                            <set_value name="$PlacedBombCount" exact="0"/>
                          </actions>
                          <patch sinceversion="2" state="complete">
                            <do_if value="$SabotageShip.exists">
                              <add_units object="$SabotageShip" category="unitcategory.transport" mk="1" exact="5"/>
                            </do_if>
                          </patch>
                          <cues>
                            <cue name="Pt3_Sabotage_Ship_Destroyed">
                              <conditions>
                                <check_any>
                                  <event_object_destroyed object="$SabotageShip"/>
                                  <event_object_changed_true_owner object="$SabotageShip"/>
                                </check_any>
                              </conditions>
                              <actions>
                                <!--We don't actually care too much if something else killed it-->
                                <cancel_cue cue="Pt3_Sabotage_Dock_Assigned"/>
                              </actions>
                              <delay exact="2s"/>
                              <actions>
                                <!--That's certainly going to send a message.-->
                                <speak actor="$Dal" line="30202077"/>
                                <signal_cue_instantly cue="Pt3_End" param="10s"/>
                              </actions>
                            </cue>
                            <cue name="Pt3_Mine_Reminder" checkinterval="1s">
                              <conditions>
                                <check_value value="$SabotageStation.isoperational and (player.age gt Pt3_Sabotage_SpawnShip.time + 3min or player.sector != $SabotageStation.sector or player.entity.distanceto.{$SabotageStation} gt 15km)"/>
                              </conditions>
                              <actions>
                                <do_if value="$PlacedBombCount le 2">
                                  <!--We don't have too much time to place those mines.-->
                                  <speak actor="$Dal" line="30202078"/>
                                </do_if>
                              </actions>
                            </cue>
                            <cue name="Pt3_Sabotage_Assign_Dock">
                              <actions>
                                <request_docking ship="$SabotageShip" container="$SabotageStation" grantedresult="$Granted" queuedresult="$Queued" requiretrading="true"/>
                                <do_if value="$Granted">
                                  <debug_text text="'Docking was granted at ' + $SabotageShip.assigneddock + ' ' + $SabotageShip.assigneddock.macro.id" chance="$DebugChance"/>
                                </do_if>
                                <do_elseif value="$Queued">
                                  <debug_text text="'Docking was queued'" chance="$DebugChance"/>
                                </do_elseif>
                                <do_else>
                                  <assert value="$Granted or $Queued" text="'Docking was neither granted or queued [Owen]'" chance="$DebugChance"/>
                                </do_else>
                              </actions>
                            </cue>
                            <cue name="Pt3_Sabotage_Dock_Assigned">
                              <conditions>
                                <event_object_dock_assigned object="$SabotageShip"/>
                              </conditions>
                              <actions>
                                <set_value name="$TargetDock" exact="$SabotageShip.assigneddock"/>
                                <set_value name="$TargetPier" exact="$TargetDock.pier"/>
                                <assert value="$TargetPier" text="'Dock ' + $TargetDock + ' ' + $TargetDock.knownname + ' does not have a pier [Owen]'"/>
                                <!--Deploy: Bombs at location-->
                                <set_objective cue="Start" step="$SabotageStep" action="objective.deploy" text="{30202,2014}" object="$TargetDock" offset="position.[0m, 0m, 100m]" updatebriefing="true"/>
                                <create_group groupname="$PlacedBombs"/>
                                <create_order object="$SabotageShip" name="$DockOrder" id="'DockAndWait'" immediate="true">
                                  <param name="destination" value="$SabotageStation"/>
                                </create_order>
                                <do_if value="player.entity.isfemale">
                                  <speak actor="$Dal" line="[30202070, 0.5s, 30202072, 0.5s, 30202074]"/>
                                </do_if>
                                <do_else>
                                  <speak actor="$Dal" line="[30202070, 0.5s, 30202071, 0.5s, 30202073]"/>
                                </do_else>
                              </actions>
                              <cues>
                                <cue name="Pt3_Sabotage_Dock_Destroyed">
                                  <conditions>
                                    <event_object_destroyed object="$TargetDock"/>
                                  </conditions>
                                  <actions>
                                    <assert value="false" text="'Pier should be indestructible so this should not happen [Owen]'"/>
                                    <!--That's certainly going to send a message.-->
                                    <speak actor="$Dal" line="30202077"/>
                                    <signal_cue_instantly cue="Pt3_End" param="10s"/>
                                  </actions>
                                </cue>
                                <cue name="Pt3_Sabotage_Bomb_Deployed" instantiate="true">
                                  <conditions>
                                    <event_player_bomb_attached/>
                                    <check_value value="event.param.hascontext.{$TargetPier}"/>
                                    <check_object object="event.param">
                                      <match_distance object="$TargetDock" z="100m" max="100m"/>
                                    </check_object>
                                  </conditions>
                                  <actions>
                                    <debug_text text="'Bomb placed: ' + event.param" chance="$DebugChance"/>
                                    <add_to_group groupname="$PlacedBombs" object="event.param"/>
                                    <set_value name="$PlacedBombCount" operation="add"/>
                                    <do_if value="Pt3_Await_Ship.state == cuestate.waiting and ($PlacedBombCount ge $InventoryTable.{ware.bomb_player_limpet_mine_01_mk1} or player.entity.inventory.{ware.bomb_player_limpet_mine_01_mk1}.count == 0)">
                                      <cancel_cue cue="Pt3_Mine_Reminder"/>
                                      <signal_cue cue="Pt3_Await_Ship"/>
                                    </do_if>
                                  </actions>
                                </cue>
                                <cue name="Pt3_Await_Ship">
                                  <conditions>
                                    <event_cue_signalled/>
                                  </conditions>
                                  <actions>
                                    <set_objective cue="Start" step="$SabotageStep + 1" action="objective.await" text="{30202,2006}" object="$SabotageShip" updatebriefing="true"/>
                                  </actions>
                                  <delay exact="1s"/>
                                  <actions>
                                    <speak actor="$Dal" line="30202075" comment="You better get out of there. We'll handle the detonation."/>
                                  </actions>
                                  <cues>
                                    <cue name="Pt3_Await_Ship_Docking_Started">
                                      <conditions>
                                        <event_object_docking_started object="$SabotageShip"/>
                                      </conditions>
                                      <actions>
                                        <!--Clear the ship from the objective-->
                                        <set_objective cue="Start" step="$SabotageStep + 1" action="objective.await" text="{30202,2006}" updatebriefing="true" silent="true"/>
                                      </actions>
                                    </cue>
                                  </cues>
                                </cue>
                                <cue name="Pt3_Sabotage_Ship_Docked">
                                  <conditions>
                                    <event_object_docked object="$SabotageShip"/>
                                    <check_value value="event.param == $SabotageStation and $PlacedBombs.count ge 1"/>
                                  </conditions>
                                  <actions>
                                    <cancel_cue cue="Pt3_Sabotage_Ship_Docked_No_Bombs"/>
                                    <debug_text text="'docked at station and bombs are placed'" chance="$DebugChance"/>
                                    <speak actor="$Dal" line="30202084" comment="Now, let's sit back and watch."/>
                                  </actions>
                                  <delay exact="2s"/>
                                  <actions>
                                    <signal_cue cue="Pt3_Sabotage_Cutscene_Start"/>
                                  </actions>
                                  <delay exact="7s"/>
                                  <actions>
                                    <signal_cue cue="Pt3_Sabotage_Trigger_Trade"/>
                                  </actions>
                                </cue>
                                <cue name="Pt3_Sabotage_Ship_Docked_No_Bombs">
                                  <conditions>
                                    <event_object_docked object="$SabotageShip"/>
                                    <check_value value="event.param == $SabotageStation and $PlacedBombs.count == 0"/>
                                  </conditions>
                                  <actions>
                                    <cancel_cue cue="Pt3_Sabotage_Ship_Docked"/>
                                    <debug_text text="'docked at station and bombs are placed'" chance="$DebugChance"/>
                                    <speak actor="$Dal" line="30202078" comment="We don't have too much time to place those mines."/>
                                  </actions>
                                  <delay exact="12s"/>
                                  <actions>
                                    <do_if value="$PlacedBombs.count">
                                      <signal_cue cue="Pt3_Sabotage_Cutscene_Start"/>
                                    </do_if>
                                    <do_else>
                                      <find_buy_offer result="$PotentialOffers" buyer="$SabotageStation" tradepartner="$SabotageShip" wares="$SabotageShip.cargo.list" multiple="true"/>
                                      <do_if value="$PotentialOffers.count">
                                        <sort_list list="$PotentialOffers" sortbyvalue="[loop.element.amount, $SabotageShip.cargo.{loop.element.ware}.count].min" sortdescending="true"/>
                                        <set_value name="$Offer" exact="$PotentialOffers.{1}"/>
                                        <debug_text text="$Offer + ' ' + $Offer.ware +  $Offer.amount"/>
                                        <create_trade_order name="$Order" object="$SabotageShip" tradeoffer="$Offer" amount="[$Offer.amount, $SabotageShip.cargo.{$Offer.ware}.count].min" immediate="true" internal="true"/>
                                      </do_if>
                                      <speak actor="$Dal" line="30202079" comment="We missed the delivery."/>
                                      <set_value name="$SabotageFailCount" operation="add"/>
                                      <do_if value="$SabotageFailCount ge 2">
                                        <signal_cue_instantly cue="Pt3_End" param="8s"/>
                                      </do_if>
                                      <do_else>
                                        <set_objective cue="Start" step="$SabotageStep" action="objective.await" text="{30202,2007}" updatebriefing="true"/>
                                        <signal_cue cue="Pt3_Sabotage_Recheck"/>
                                        <reset_cue cue="Pt3_Sabotage"/>
                                      </do_else>
                                    </do_else>
                                  </actions>
                                  <!--only if $PlacedBombs.count-->
                                  <delay exact="7s"/>
                                  <actions>
                                    <signal_cue cue="Pt3_Sabotage_Trigger_Trade"/>
                                  </actions>
                                </cue>
                                <cue name="Pt3_Sabotage_Cutscene_Start" version="2">
                                  <conditions>
                                    <event_cue_signalled/>
                                  </conditions>
                                  <actions>
                                    <set_value name="$TradeSabotageSuccessful" exact="true"/>
                                    <debug_text text="'Starting cutscene'"/>
                                    <set_value name="$LastCutsceneKey" exact="'Story_Diplomacy_Intro_3'"/>
                                    <play_cutscene result="$LastCutscene" key="$LastCutsceneKey">
                                      <param name="capship" object="$SabotageShip"/>
                                      <param name="limpetmine" object="$PlacedBombs.{1}"/>
                                      <param name="bridge" object="$SabotageShip.controlroom"/>
                                    </play_cutscene>
                                    <!--TODO @Owen #important check that this stops and the proper music starts again-->
                                    <play_music music="'music_story_diplomacy_sabotage_cutscene'"/>
                                    <set_value name="$LimpetSceneState" exact="null"/>
                                  </actions>
                                  <patch sinceversion="2" state="complete">
                                    <do_if value="Pt3_Sabotage_Trigger_Trade.state == cuestate.cancelled">
                                      <stop_cutscene cutscene="$LastCutscene"/>
                                      <signal_cue_instantly cue="Pt3_End" param="5s"/>
                                    </do_if>
                                  </patch>
                                  <cues>
                                    <cue name="Pt3_Sabotage_Cutscene_DockingEnd">
                                      <delay exact="3s"/>
                                      <actions>
                                        <set_value name="$CutsceneEvent" exact="'CapshipDockingEnd'"/>
                                        <debug_text text="'Fallback signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$CutsceneEvent" exact="'LimpetStart'"/>
                                        <debug_text text="'Fallback signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$LimpetSceneState" exact="'running'"/>
                                      </actions>
                                      <delay exact="5s"/>
                                      <actions>
                                        <set_entity_traits entity="$Kat" subtitlename="true"/>
                                        <speak actor="$Kat" line="30202051" comment="Sending remote detonation signal."/>
                                      </actions>
                                      <!--Fallback signal-->
                                      <delay exact="15s"/>
                                      <actions>
                                        <do_if value="$LimpetSceneState == 'running'">
                                          <set_value name="$LimpetSceneState" exact="'finished'"/>
                                          <set_value name="$CutsceneEvent" exact="'LimpetEnd'"/>
                                          <debug_text text="'Fallback signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                          <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                          <set_value name="$CutsceneEvent" exact="'TrafficLeavingStart'"/>
                                          <debug_text text="'Fallback signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                          <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        </do_if>
                                      </actions>
                                      <!--The following is a fallback if no trade started. Shouldn't happen anymore.-->
                                      <delay exact="4s"/>
                                      <actions>
                                        <do_if value="Pt3_Sabotage_Trigger_Trade.state == cuestate.cancelled">
                                          <set_value name="$CutsceneEvent" exact="'TrafficLeavingEnd'"/>
                                          <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                          <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                          <set_value name="$CutsceneEvent" exact="'TrafficEnteringStart'"/>
                                          <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                          <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        </do_if>
                                      </actions>
                                      <delay exact="2s"/>
                                      <actions>
                                        <do_if value="Pt3_Sabotage_Trigger_Trade.state == cuestate.cancelled">
                                          <destroy_group group="$PlacedBombs" explosion="true"/>
                                        </do_if>
                                      </actions>
                                      <delay exact="3s"/>
                                      <actions>
                                        <do_if value="Pt3_Sabotage_Trigger_Trade.state == cuestate.cancelled">
                                          <stop_cutscene cutscene="$LastCutscene"/>
                                          <signal_cue_instantly cue="Pt3_End" param="5s"/>
                                        </do_if>
                                      </actions>
                                    </cue>
                                  </cues>
                                </cue>
                                <cue name="Pt3_Sabotage_Trigger_Trade">
                                  <conditions>
                                    <event_cue_signalled/>
                                  </conditions>
                                  <actions>
                                    <create_group groupname="$MassTraffic"/>
                                    <!--Remove some wares so that a trade is very likely-->
                                    <do_for_each name="$ShipWare" in="$SabotageShip.cargo.list">
                                      <remove_cargo object="$SabotageStation" ware="$ShipWare" exact="100"/>
                                    </do_for_each>
                                    <!--Kind of hacky. This will force an offer update-->
                                    <store_trade_offer_snapshot object="$SabotageStation"/>
                                    <find_buy_offer result="$PotentialOffers" buyer="$SabotageStation" tradepartner="$SabotageShip" wares="$SabotageShip.cargo.list" multiple="true"/>
                                    <do_if value="$PotentialOffers.count">
                                      <sort_list list="$PotentialOffers" sortbyvalue="[loop.element.amount, $SabotageShip.cargo.{loop.element.ware}.count].min" sortdescending="true"/>
                                      <set_value name="$Offer" exact="$PotentialOffers.{1}"/>
                                      <debug_text text="$Offer + ' ' + $Offer.ware + ' ' + $Offer.amount"/>
                                      <create_trade_order name="$Order" object="$SabotageShip" tradeoffer="$Offer" amount="[$Offer.amount, $SabotageShip.cargo.{$Offer.ware}.count].min" immediate="true" internal="true"/>
                                    </do_if>
                                    <do_else>
                                      <cancel_cue cue="this"/>
                                    </do_else>
                                  </actions>
                                  <cues>
                                    <cue name="Pt3_Sabotage_Masstraffic_Timeout">
                                      <delay exact="15s"/>
                                      <actions>
                                        <do_if value="Pt3_Sabotage_Cutscene_Masstraffic_Left.state == cuestate.waiting">
                                          <debug_text text="'Mass traffic failed to be detected. Force the next part of the cutscene.'" filter="error"/>
                                          <signal_cue cue="Pt3_Sabotage_Cutscene_Masstraffic_Left"/>
                                        </do_if>
                                      </actions>
                                    </cue>
                                    <cue name="Pt3_Sabotage_Track_Masstraffic" checkinterval="50ms" instantiate="true">
                                      <conditions>
                                        <!--TODO @Owen count_xxx_by_true_owner-->
                                        <count_ships result="$Potential_MassTraffic" excluded="$MassTraffic" space="$SabotageShip.zone" masstraffic="true"/>
                                      </conditions>
                                      <actions>
                                        <do_for_each in="$Potential_MassTraffic" name="$TrafficShip">
                                          <do_if value="$TrafficShip.masstrafficstartobject == $SabotageShip or $TrafficShip.masstrafficendobject == $SabotageShip">
                                            <debug_text text="'found new ' + $TrafficShip + ' ' + $TrafficShip.knownname"/>
                                            <add_to_group groupname="$MassTraffic" object="$TrafficShip"/>
                                            <!--Cutscene has started and mass traffic have launched. Switch shots. Cancel the fallback trigger.-->
                                            <do_if value="Pt3_Sabotage_Cutscene_Start.state == cuestate.complete and Pt3_Sabotage_Cutscene_Masstraffic_Left.state == cuestate.waiting">
                                              <signal_cue cue="Pt3_Sabotage_Cutscene_Masstraffic_Left"/>
                                              <cancel_cue cue="Pt3_Sabotage_Cutscene_Start"/>
                                            </do_if>
                                          </do_if>
                                        </do_for_each>
                                        <!--<debug_text text="'Tracking ' + $MassTraffic.count + ' masstraffic'"/>-->
                                        <do_if value="Pt3_Sabotage_Destroy_Masstraffic.state == cuestate.waiting">
                                          <do_for_each in="$MassTraffic" name="$TrafficShip">
                                            <do_if value="$TrafficShip.masstrafficstartobject == $SabotageShip and $TrafficShip.distanceto.{$SabotageShip} ge 465m">
                                              <signal_cue cue="Pt3_Sabotage_Destroy_Masstraffic"/>
                                              <break/>
                                            </do_if>
                                          </do_for_each>
                                        </do_if>
                                      </actions>
                                    </cue>
                                    <cue name="Pt3_Sabotage_Cutscene_Masstraffic_Left" version="3">
                                      <conditions>
                                        <event_cue_signalled/>
                                      </conditions>
                                      <delay exact="50ms"/>
                                      <actions>
                                        <do_if value="$LimpetSceneState == 'running'">
                                          <set_value name="$LimpetSceneState" exact="'finished'"/>
                                          <set_value name="$CutsceneEvent" exact="'LimpetEnd'"/>
                                          <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                          <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        </do_if>
                                        <do_else>
                                          <set_value name="$CutsceneEvent" exact="'CapshipDockingEnd'"/>
                                          <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                          <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        </do_else>
                                        <set_value name="$CutsceneEvent" exact="'TrafficLeavingStart'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                      </actions>
                                      <delay exact="4s"/>
                                      <actions>
                                        <set_value name="$CutsceneEvent" exact="'TrafficLeavingEnd'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$CutsceneEvent" exact="'TrafficEnteringStart'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                      </actions>
                                      <delay exact="15s"/>
                                      <actions>
                                        <!--Fallback in case Pt3_Sabotage_Destroy_Masstraffic did not trigger due to some mass traffic issue-->
                                        <do_if value="Pt3_Sabotage_Destroy_Masstraffic.state == cuestate.waiting">
                                          <signal_cue cue="Pt3_Sabotage_Destroy_Masstraffic"/>
                                        </do_if>
                                      </actions>
                                      <patch sinceversion="3" state="waiting">
                                        <do_if value="Pt3_Sabotage_Cutscene_Start.state == cuestate.complete">
                                          <!--This just gets the plot unstuck. Source was likely fixed in 394033 and 394036. Another case was fixed in 394518.
                                          If the player aborts the cutscene in 3.10 and saves at the right moment, they too will have this scene cut short.-->
                                          <destroy_group group="$PlacedBombs" explosion="true"/>
                                          <signal_cue_instantly cue="Pt3_End" param="5s"/>
                                        </do_if>
                                      </patch>
                                      <patch sinceversion="3" state="complete">
                                        <do_if value="Pt3_Sabotage_Destroy_Masstraffic.state == cuestate.waiting">
                                          <!--This just gets the plot unstuck. Source was fixed in 394510.
                                          If the player aborts the cutscene in 3.10 and saves at the right moment, they too will have this scene cut short.-->
                                          <destroy_group group="$PlacedBombs" explosion="true"/>
                                          <signal_cue_instantly cue="Pt3_End" param="5s"/>
                                        </do_if>
                                      </patch>
                                    </cue>
                                    <cue name="Pt3_Sabotage_Destroy_Masstraffic">
                                      <conditions>
                                        <event_cue_signalled/>
                                      </conditions>
                                      <actions>
                                        <signal_cue cue="Pt3_Sabotage_Detonate"/>
                                      </actions>
                                      <delay exact="100ms"/>
                                      <actions>
                                        <set_value name="$MassTrafficWrecks" exact="[]"/>
                                        <do_all exact="$MassTraffic.count" counter="$i">
                                          <!--TODO @Owen check that the kill delay doesn't become too large or too short-->
                                          <!--TODO @Owen break from network?-->
                                          <do_if value="$i == 1">
                                            <set_value name="$KillDelay" exact="0s"/>
                                          </do_if>
                                          <do_elseif value="$i lt 3">
                                            <set_value name="$KillDelay" operation="add" min="150ms" max="450ms"/>
                                          </do_elseif>
                                          <do_else>
                                            <set_value name="$KillDelay" operation="add" min="350ms" max="750ms"/>
                                          </do_else>
                                          <signal_cue_instantly cue="Pt3_Sabotage_Queue_Destroy_Masstraffic" param="$KillDelay"/>
                                          <do_if value="$KillDelay gt 4s">
                                            <break/>
                                          </do_if>
                                        </do_all>
                                      </actions>
                                      <delay exact="$KillDelay"/>
                                      <!--Stop tracking new mass traffic at the end of the explosions-->
                                      <actions>
                                        <debug_text text="'stop Pt3_Sabotage_Track_Masstraffic'"/>
                                        <cancel_cue cue="Pt3_Sabotage_Track_Masstraffic"/>
                                        <set_value name="$CutsceneEvent" exact="'TrafficEnteringEnd'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$CutsceneEvent" exact="'BridgeStart'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <!--Signal alert on bridge-->
                                        <signal_cue cue="Pt3_Sabotage_Bridge_Alert"/>
                                        <!--Cue follow up explosions to be seen from the bridge-->
                                        <signal_cue_instantly cue="Pt3_Sabotage_Queue_Wreck_Explosions" param="1s"/>
                                        <signal_cue_instantly cue="Pt3_Sabotage_Queue_Wreck_Explosions" param="3.5s"/>
                                        <signal_cue_instantly cue="Pt3_Sabotage_Queue_Wreck_Explosions" param="5.0s"/>
                                      </actions>
                                      <delay exact="3s"/>
                                      <actions>
                                        <find_object_component name="$OtherNPC" class="class.npc" controlentity="false" object="$SabotageShip.pilot.room"/>
                                        <speak actor="$SabotageShip.pilot" line="10601" recipient="$OtherNPC" voiceover="true" comment="{10501,10601}"/>
                                      </actions>
                                      <delay exact="7s"/>
                                      <actions>
                                        <set_value name="$CutsceneEvent" exact="'BridgeEnd'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <signal_cue_instantly cue="Pt3_End" param="10s"/>
                                        <!--TODO @Owen have the ship go somewhere-->
                                      </actions>
                                    </cue>
                                    <cue name="Pt3_Sabotage_Detonate">
                                      <conditions>
                                        <event_cue_signalled/>
                                      </conditions>
                                      <actions>
                                        <!--Set MTs to invincible temporarily so we have better control on when they blow up-->
                                        <set_value name="$InvincibleMTShips" exact="[]"/>
                                        <do_for_each in="$MassTraffic" name="$MTShip">
                                          <set_object_min_hull object="$MTShip" exact="100"/>
                                          <append_to_list name="$InvincibleMTShips" exact="$MTShip"/>
                                        </do_for_each>
                                        <destroy_group group="$PlacedBombs" explosion="true"/>
                                      </actions>
                                      <delay exact="10ms"/>
                                      <actions>
                                        <do_for_each in="$InvincibleMTShips" name="$MTShip">
                                          <set_object_min_hull object="$MTShip" exact="0"/>
                                        </do_for_each>
                                      </actions>
                                    </cue>
                                    <cue name="Pt3_Sabotage_Queue_Destroy_Masstraffic" instantiate="true">
                                      <conditions>
                                        <event_cue_signalled/>
                                      </conditions>
                                      <delay exact="event.param"/>
                                      <actions>
                                        <do_if value="$MassTraffic.count">
                                          <sort_group group="$MassTraffic" sortbydistanceto="$SabotageShip" sortdescending="true"/>
                                          <add_effect object="$MassTraffic.{1}" effect="'explosion_flak'">
                                            <position object="$MassTraffic.{1}" max="5m"/>
                                          </add_effect>
                                          <destroy_object object="$MassTraffic.{1}" explosion="true"/>
                                          <append_to_list name="$MassTrafficWrecks" exact="$MassTraffic.{1}"/>
                                        </do_if>
                                      </actions>
                                    </cue>
                                    <cue name="Pt3_Sabotage_Queue_Wreck_Explosions" instantiate="true">
                                      <conditions>
                                        <event_cue_signalled/>
                                      </conditions>
                                      <delay exact="event.param"/>
                                      <actions>
                                        <do_if value="$MassTrafficWrecks.count">
                                          <shuffle_list list="$MassTrafficWrecks"/>
                                          <do_for_each in="$MassTrafficWrecks" name="$SelectedWreck">
                                            <do_if value="$SelectedWreck.exists and $SelectedWreck.iswreck">
                                              <add_effect object="$SelectedWreck" effect="'explosion_flak'">
                                                <position object="$SelectedWreck" max="3m"/>
                                              </add_effect>
                                              <remove_from_list name="$MassTrafficWrecks" exact="$SelectedWreck"/>
                                              <break/>
                                            </do_if>
                                          </do_for_each>
                                        </do_if>
                                      </actions>
                                    </cue>
                                    <cue name="Pt3_Sabotage_Bridge_Alert">
                                      <conditions>
                                        <event_cue_signalled/>
                                      </conditions>
                                      <actions>
                                        <!--HACK @Owen - we want to play this in the bridge, not the player cockpit-->
                                        <!--$SabotageShip.controlroom"-->
                                        <debug_text text="'start playing sound on bridge'"/>
                                        <play_sound object="player.entity.room" sound="'cockpit_ambient_alert'" type="ambient"/>
                                      </actions>
                                      <delay exact="4s"/>
                                      <actions>
                                        <play_sound object="player.entity.room" sound="'cockpit_ambient_alert'" type="ambient"/>
                                      </actions>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                        <!--event.param = time until signalling part 4-->
                        <cue name="Pt3_End">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <actions>
                            <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                              <param name="Object" value="$SabotageStation"/>
                              <param name="RequesterCue" value="Start"/>
                              <param name="DebugChance" value="$DebugChance"/>
                            </run_actions>
                            <!--End of part 3-->
                            <cancel_cue cue="Pt3_Station_Lost__Reset"/>
                            <cancel_cue cue="Pt3_Station_Lost__EndPart"/>
                            <cancel_cue cue="Pt3_Sabotage_SpawnShip"/>
                          </actions>
                          <delay exact="event.param"/>
                          <actions>
                            <signal_cue cue="Pt4_Follow_Ship"/>
                            <cancel_cue cue="Pt3_Going_Offensive"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Part 4 - Follow Ship-->
        <cue name="Pt4_Force">
          <force name="Plot_Diplomat_Pt4">
            <signal_cue_instantly cue="Force_Part" param="Pt4_Follow_Ship"/>
          </force>
        </cue>
        <cue name="Pt4_Follow_Ship">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <include_actions ref="Create_Reen_Office"/>
              <set_entity_traits entity="$Reen" subtitlename="true"/>
              <set_entity_traits entity="$Dal" subtitlename="true"/>
              <set_entity_traits entity="$Kat" subtitlename="true"/>
              <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                  table[                 $requestercue = namespace,                 $location = $Reen_Office_Room,                 $priority = 100,                 $slottags = [tag.sit],                 $debugchance = $DebugChance2,                 $debugcaller = if $DebugChance2 == 100 then this else null]                 ]"/>
              <do_if value="@$DalShip.exists">
                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                   table[                   $requestercue = namespace,                   $location = $DalShip.controlroom,                   $priority = 100,                   $position = position.[1.62m, 0.05m, -1.8m],                   $rotation = rotation.[95deg, 0deg, 0deg],                   $debugchance = $DebugChance2,                   $debugcaller = if $DebugChance2 == 100 then this else null]                   ]"/>
              </do_if>
              <do_else>
                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                   table[                   $requestercue = namespace,                   $location = $Reen_Office_Room,                   $priority = 100,                   $position = position.[-0.85m, 0.05m, -6.5m],                   $rotation = rotation.[130deg, 0deg, 0deg],                   $debugchance = $DebugChance2,                   $debugcaller = if $DebugChance2 == 100 then this else null]                   ]"/>
              </do_else>
            </do_if>
          </actions>
          <cues>
            <cue name="Pt4_Intro">
              <delay exact="5s"/>
              <actions>
                <!--
                Now that the fun's over, let's get back to the task at hand.
                We're looking to gather intel on the Scale Plate higher-ups. These are the people we're going to have to negotiate with.
                Now that we've shown our teeth, maybe they're more willing to listen.
                We're about to chase down a lead. You and the other ships will have to be on standby for any opportunity which arises.
                We're assigning you a sector to patrol. If something comes up, we'll let you know.-->
                <do_if value="player.entity.isfemale">
                  <speak actor="$Dal" line="[30202085, 30202086, 30202087, 1s, 30202089, 30202091]" caninterrupt="false"/>
                </do_if>
                <do_else>
                  <speak actor="$Dal" line="[30202085, 30202086, 30202087, 1s, 30202088, 30202090]" caninterrupt="false"/>
                </do_else>
              </actions>
            </cue>
            <cue name="Pt4_Setup_Sector_Patrol">
              <conditions>
                <event_speak_finished actor="$Dal"/>
                <check_value value="event.param2 == 30202085"/>
              </conditions>
              <actions>
                <do_if value="$Forced">
                  <create_mission cue="Start" abortable="false" type="missiontype.plot" name="{30202,1051}" description="{30202,1052} + '\n' + if player.entity.isfemale then {30202,1054} else {30202,1053}" difficulty="level.medium" faction="faction.hatikvah"/>
                </do_if>
                <do_else>
                  <update_mission cue="Start" abortable="false" type="missiontype.plot" name="{30202,1051}" description="{30202,1052} + '\n' + if player.entity.isfemale then {30202,1054} else {30202,1053}" difficulty="level.medium" faction="faction.hatikvah">
                    <!--Clear previous briefing steps-->
                    <briefing replace="true"/>
                  </update_mission>
                </do_else>
                <!--Follow ship mission-->
                <!--We select two sectors, one for the ship to appear in and one for it to fly to.-->
                <set_value name="$AnchorSector" exact="$Hat_Station.sector"/>
                <!--
                Entry gates: Gates in the follow ship sector you can use to leave
                Exit gates: Gates in the follow ship sector which ships exit from
                -->
                <!--Initialisation-->
                <set_value name="$ShipExitGate" exact="null"/>
                <set_value name="$ShipDestinationGate" exact="null"/>
                <set_value name="$FollowSector" exact="null"/>
                <set_value name="$EntryGates" exact="[]"/>
                <set_value name="$ExitGates" exact="[]"/>
                <!--Preferences-->
                <set_value name="$MinJumpDist" exact="0"/>
                <set_value name="$MaxJumpDist" exact="4"/>
                <set_value name="$BestGateDist" exact="100km"/>
                <set_value name="$WorstGateDist" exact="500km"/>
                <find_sector_in_range object="$AnchorSector" mindistance="$MinJumpDist" maxdistance="$MaxJumpDist" distances="$SectorDistances" multiple="true"/>
                <set_value name="$SortedSectors" exact="$SectorDistances.keys.sorted"/>
                <do_all exact="$SortedSectors.count" counter="$i">
                  <clear_list list="$EntryGates"/>
                  <clear_list list="$ExitGates"/>
                  <set_value name="$PotentialFollowShipSector" exact="$SortedSectors.{$i}"/>
                  <debug_text text="'checking ' + $PotentialFollowShipSector.knownname + ' ' + $SectorDistances.{$PotentialFollowShipSector}" chance="$DebugChance"/>
                  <debug_text text="'Find one active entry gate into this sector, and a different active exit gate'" chance="$DebugChance"/>
                  <find_object name="$Gates" class="[class.gate, class.highwayentrygate, class.highwayexitgate]" multiple="true" active="true" space="$PotentialFollowShipSector"/>
                  <do_all exact="$Gates.count" counter="$g">
                    <do_if value="$Gates.{$g}.isclass.highwayexitgate">
                      <do_if value="$Gates.{$g}.highway.issuperhighway">
                        <append_to_list name="$ExitGates" exact="$Gates.{$g}"/>
                      </do_if>
                    </do_if>
                    <do_elseif value="$Gates.{$g}.isclass.highwayentrygate">
                      <do_if value="$Gates.{$g}.highway.issuperhighway">
                        <append_to_list name="$EntryGates" exact="$Gates.{$g}"/>
                      </do_if>
                    </do_elseif>
                    <do_elseif value="$Gates.{$g}.isclass.gate">
                      <append_to_list name="$EntryGates" exact="$Gates.{$g}"/>
                      <append_to_list name="$ExitGates" exact="$Gates.{$g}"/>
                    </do_elseif>
                  </do_all>
                  <do_if value="$EntryGates.count and $ExitGates.count">
                    <!--Score pairs of entry/exit gates by where they lead and how close they are-->
                    <set_value name="$BestScore" exact="0"/>
                    <set_value name="$BestEntryGate" exact="null"/>
                    <set_value name="$BestExitGate" exact="null"/>
                    <do_all exact="$ExitGates.count" counter="$k">
                      <set_value name="$EntryGate" exact="null"/>
                      <set_value name="$ExitGate" exact="$ExitGates.{$k}"/>
                      <do_all exact="$EntryGates.count" counter="$g">
                        <do_if value="$EntryGates.{$g} != $ExitGate and (not $ExitGate.isclass.gate or @$ExitGate.exithighway.exitjumpgate != $EntryGates.{$g})">
                          <set_value name="$EntryGate" exact="$EntryGates.{$g}"/>
                          <set_value name="$GateDist" exact="$EntryGate.distanceto.{$ExitGate}"/>
                          <do_if value="$GateDist le $BestGateDist">
                            <set_value name="$Score" exact="(1.0f / $BestGateDist) * $GateDist"/>
                          </do_if>
                          <do_else>
                            <set_value name="$Score" exact="1.0f - (1.0f / ($WorstGateDist - $BestGateDist)) * ([$GateDist, $WorstGateDist].min - $BestGateDist)"/>
                          </do_else>
                          <do_if value="$Score gt $BestScore">
                            <set_value name="$BestEntryGate" exact="$EntryGate"/>
                            <set_value name="$BestExitGate" exact="$ExitGate"/>
                          </do_if>
                          <debug_text text="'Checking pair exit gate:' + $ExitGate.knownname + ' ' + (if $ExitGate.isclass.gate then $ExitGate.destination.sector.knownname else $ExitGate.highway.origin.sector.knownname) + ' Entry gate: ' + $EntryGate.destination.sector.knownname + ' using ' + $EntryGate + ' ' + $EntryGate.knownname" chance="$DebugChance"/>
                          <debug_text text="'Score: ' + $Score" chance="$DebugChance"/>
                        </do_if>
                      </do_all>
                    </do_all>
                  </do_if>
                  <do_if value="$BestEntryGate and $BestExitGate">
                    <set_value name="$ShipDestinationGate" exact="$BestEntryGate"/>
                    <set_value name="$ShipExitGate" exact="$BestExitGate"/>
                    <set_value name="$FollowSector" exact="$ShipExitGate.sector"/>
                    <set_value name="$FollowDestSector" exact="$ShipDestinationGate.exit.sector"/>
                    <break/>
                  </do_if>
                </do_all>
                <remove_value name="$EntryGate"/>
                <remove_value name="$ExitGate"/>
                <do_if value="$FollowSector and $ShipDestinationGate and $ShipExitGate">
                  <debug_text text="'Selected follow sector ' + $FollowSector.knownname" chance="$DebugChance"/>
                  <debug_text text="'Ship will exit from ' + $ShipExitGate.knownname + ' ' + (if $ShipExitGate.isclass.gate then $ShipExitGate.destination.sector.knownname else $ShipExitGate.highway.origin.sector.knownname) + ' and head to ' + $ShipDestinationGate.destination.sector.knownname + ' using ' + $ShipDestinationGate + ' ' + $ShipDestinationGate.knownname" chance="$DebugChance"/>
                </do_if>
                <do_else>
                  <assert value="$FollowSector and $ShipDestinationGate and $ShipExitGate" text="'Unable to find a suitable sector for the follow ship mission. Falling back onto dumb values. [Owen]'"/>
                  <set_value name="$FollowSector" exact="$AnchorSector"/>
                  <find_gate name="$SectorGates" space="$FollowSector" multiple="true"/>
                  <assert value="$SectorGates.count ge 2" text="'not enough gates in sector [Owen]'"/>
                  <set_value name="$ShipDestinationGate" exact="$SectorGates.{1}"/>
                  <do_if value="$SectorGates.count ge 2">
                    <set_value name="$ShipExitGate" exact="$SectorGates.{2}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$ShipExitGate" exact="$SectorGates.{1}"/>
                  </do_else>
                  <set_value name="$FollowDestSector" exact="$ShipDestinationGate.exit.sector"/>
                </do_else>
                <!--Get several positions from the exit gate to the destination gate, low on the y axis-->
                <set_value name="$DistanceBetweenGates" exact="$ShipExitGate.distanceto.{$ShipDestinationGate}"/>
                <create_position name="$ExitGatePos" object="$ShipExitGate" space="$FollowSector"/>
                <create_position name="$DestinationGatePos" object="$ShipDestinationGate" space="$FollowSector"/>
                <create_orientation name="$FollowPosOrientation" refposition="$DestinationGatePos" orientation="look_at">
                  <position value="$ExitGatePos" space="$FollowSector"/>
                </create_orientation>
                <set_value name="$NextPointDistance" exact="$DistanceBetweenGates * 0.3"/>
                <set_value name="$Yaw" min="$FollowPosOrientation.yaw - 5deg" max="$FollowPosOrientation.yaw + 5deg"/>
                <set_value name="$Y" min="-15km" max="-13km"/>
                <create_position name="$FirstPosition" x="$ExitGatePos.x + sin($Yaw) * $NextPointDistance" y="$Y" z="$ExitGatePos.z + cos($Yaw) * $NextPointDistance"/>
                <set_value name="$NextPointDistance" exact="$DistanceBetweenGates * 0.4"/>
                <set_value name="$Yaw" min="$FollowPosOrientation.yaw - 4deg" max="$FollowPosOrientation.yaw + 4deg"/>
                <set_value name="$Y" min="-15km" max="-13km"/>
                <create_position name="$LockboxDropPosition" x="$ExitGatePos.x + sin($Yaw) * $NextPointDistance" y="$Y" z="$ExitGatePos.z + cos($Yaw) * $NextPointDistance"/>
                <!--Spawn 5km further from where the lockbox is dropped-->
                <set_value name="$NextPointDistance" exact="$NextPointDistance + 5km"/>
                <set_value name="$Yaw" min="$Yaw - 1deg" max="$Yaw + 1deg"/>
                <set_value name="$Y" operation="subtract" min="0km" max="2km"/>
                <create_position name="$LockboxShipsSpawnPosition" x="$ExitGatePos.x + sin($Yaw) * $NextPointDistance" y="$Y" z="$ExitGatePos.z + cos($Yaw) * $NextPointDistance"/>
                <set_value name="$NextPointDistance" exact="$DistanceBetweenGates * 0.7"/>
                <set_value name="$Yaw" min="$FollowPosOrientation.yaw - 3deg" max="$FollowPosOrientation.yaw + 3deg"/>
                <set_value name="$Y" min="-7km" max="-5km"/>
                <create_position name="$PoliceEncounterPosition" x="$ExitGatePos.x + sin($Yaw) * $NextPointDistance" y="$Y" z="$ExitGatePos.z + cos($Yaw) * $NextPointDistance"/>
                <get_safe_pos result="$FollowShipDestPos" object="$ShipDestinationGate.exit" y="-5km" z="15km" max="1km" sector="$FollowDestSector"/>
                <remove_value name="$NextPointDistance"/>
                <remove_value name="$Yaw"/>
                <remove_value name="$Y"/>
              </actions>
              <delay exact="1s"/>
              <actions>
                <!--Empty actions node but used so we can have the delay for the below conditions-->
              </actions>
              <cues>
                <cue name="Pt4_Sector_Patrol">
                  <conditions>
                    <event_cue_completed cue="parent"/>
                  </conditions>
                  <actions>
                    <update_mission cue="Start">
                      <briefing>
                        <objective step="1" action="objective.sabotage" text="{30202,2004}" comment="Sabotage: Delivery"/>
                      </briefing>
                    </update_mission>
                    <set_value name="$PatrolStep" exact="2"/>
                    <!--Get patrol points in the sector-->
                    <set_value name="$PatrolDefinitionsMax" exact="4"/>
                    <set_value name="$PatrolDefinitions" exact="[]"/>
                    <find_station name="$PatrolStations" space="$FollowSector" sortbydistanceto="$ShipExitGate" multiple="true">
                      <match_relation_to faction="faction.hatikvah" comparison="ge" relation="neutral"/>
                      <match owner="faction.scaleplate" negate="true"/>
                    </find_station>
                    <do_all exact="[$PatrolStations.count, $PatrolDefinitionsMax].min" counter="$i" reverse="true">
                      <create_position name="$PatrolOffset" object="$PatrolStations.{$i}" space="$FollowSector" min="4km" max="6km"/>
                      <append_to_list name="$PatrolDefinitions" exact="[$FollowSector, $PatrolOffset, 15km, $FollowSector.knownname, objective.patrol, 15s, 10min, null]"/>
                    </do_all>
                    <do_if value="$PatrolDefinitions.count lt $PatrolDefinitionsMax">
                      <do_all exact="3 - $PatrolDefinitions.count">
                        <create_position name="$PatrolOffset" value="$FollowSector.coreposition" max="$FollowSector.coresize * 0.4" space="$FollowSector"/>
                        <append_to_list name="$PatrolDefinitions" exact="[$FollowSector, $PatrolOffset, 15km, $FollowSector.knownname, objective.patrol, 15s, 10min, null]"/>
                      </do_all>
                    </do_if>
                    <remove_value name="$PatrolOffset"/>
                    <set_value name="$PatrolAreaCount" exact="0"/>
                  </actions>
                  <cues>
                    <cue name="Pt4_Sector_Patrol_Ref" ref="md.RML_Patrol.Patrol">
                      <param name="EndSignalCue" value="Pt4_Patrol_Ended"/>
                      <param name="MissionCue" value="Start"/>
                      <param name="StartStep" value="$PatrolStep" comment="Briefing step to start the mission on"/>
                      <param name="UpdateBriefing" value="true" comment="Update the briefing objective step when the objective is updated"/>
                      <param name="DebugChance" value="$DebugChance"/>
                      <!-- mission-related parameters -->
                      <param name="Faction" value="faction.hatikvah"/>
                      <param name="EnemyFactions" value="[faction.scaleplate, faction.xenon, faction.xenon1, faction.xenon2, faction.xenon3, faction.xenon4, faction.xenon5, faction.xenon6, faction.khaak]"/>
                      <param name="Destinations" value="$PatrolDefinitions"/>
                      <param name="PatrolStartedSignalCue" value="Pt4_Patrol_Area_Started"/>
                    </cue>
                    <cue name="Pt4_Patrol_Area_Started" instantiate="true">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <set_value name="$PatrolAreaCount" operation="add"/>
                      </actions>
                      <delay exact="20s"/>
                      <actions>
                        <do_if value="$PatrolAreaCount ge 3">
                          <signal_cue cue="Pt4_Follow_Ship_Trigger"/>
                        </do_if>
                      </actions>
                    </cue>
                    <cue name="Pt4_Patrol_Timeout" checkinterval="1s">
                      <conditions>
                        <check_value value="player.age gt Pt4_Sector_Patrol.time + 10min and $PatrolAreaCount gt 2"/>
                      </conditions>
                      <actions>
                        <signal_cue cue="Pt4_Follow_Ship_Trigger"/>
                      </actions>
                    </cue>
                    <cue name="Pt4_Patrol_Ended">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <delay exact="4s"/>
                      <actions>
                        <debug_text text="'Patrol mission ended normally.'" chance="$DebugChance"/>
                        <signal_cue cue="Pt4_Follow_Ship_Trigger"/>
                      </actions>
                    </cue>
                  </cues>
                </cue>
                <cue name="Pt4_Follow_Ship_Trigger">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <cancel_cue cue="Pt4_Sector_Patrol"/>
                  </actions>
                  <delay exact="1s"/>
                  <actions>
                    <set_value name="$FollowStep" exact="$PatrolStep + 1"/>
                    <set_entity_traits entity="$Cline" subtitlename="true"/>
                    <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Follow_Ship_Intro', $actors = table[ $Dal = $Dal, $Cline = $Cline ], $callbackcue = Pt4_Follow_Ship_Go_To_Gate, $abortcallbackcue = Pt4_Follow_Ship_Go_To_Gate, $debugchance = $DebugChance ]"/>
                  </actions>
                  <cues>
                    <cue name="Pt4_Follow_Ship_Go_To_Gate" version="2">
                      <conditions>
                        <check_any>
                          <check_all>
                            <event_speak_finished actor="$Dal"/>
                            <check_value value="event.param2 == 30202098 or event.param2 == 30202099"/>
                          </check_all>
                          <event_cue_signalled/>
                        </check_any>
                      </conditions>
                      <actions>
                        <create_group groupname="$LockboxCollectShips"/>
                        <create_position name="$ExitGatePos" object="$ShipExitGate" x="2km" y="1km" z="6km" space="$ShipExitGate.sector"/>
                        <set_objective cue="Start" step="$FollowStep" action="objective.flyto" object="$ShipExitGate.sector" offset="$ExitGatePos" updatebriefing="true"/>
                        <!--Some flags to set during the follow mission-->
                        <set_value name="$FollowShip_TargetAttacked" exact="false"/>
                        <set_value name="$FollowShip_TargetLost" exact="false"/>
                        <set_value name="$FollowShip_TargetKilled" exact="false"/>
                        <set_value name="$FollowShip_TargetKilledByPlayer" exact="false"/>
                        <set_value name="$FollowShip_DropWitnessed" exact="false"/>
                        <set_value name="$FollowShip_DropInspected" exact="false"/>
                        <set_value name="$FollowShip_DropDestroyed" exact="false"/>
                        <set_value name="$FollowShip_DropCollected" exact="false"/>
                        <set_value name="$FollowShip_DropCollectorKilled" exact="false"/>
                        <set_value name="$FollowShip_WitnessedPolice" exact="false"/>
                        <set_value name="$FollowShip_PlayerEncounter" exact="false"/>
                        <set_value name="$FollowShip_AdmitHatikvah" exact="false"/>
                        <set_value name="$FollowShip_TakeMeToYourLeader" exact="false"/>
                      </actions>
                      <patch sinceversion="2" state="waiting">
                        <do_if value="Pt4_Follow_Ship_Trigger.state == cuestate.complete">
                          <speak actor="$Dal" line="30202062"/>
                        </do_if>
                      </patch>
                      <cues>
                        <!--TODO @Owen other Dal lines when approaching the gate-->
                        <cue name="Pt4_Spawn_Follow_Mission_Ship" checkinterval="1s">
                          <conditions>
                            <check_value value="player.sector == $ShipExitGate.sector and player.entity.distanceto.{$ShipExitGate} lt 15km"/>
                          </conditions>
                          <actions>
                            <speak actor="$Dal" line="30202100" comment="It'll be exiting the gate shortly."/>
                            <!--Teladi pilot to follow-->
                            <create_cue_actor name="$TargetTeladiPilot" cue="namespace" macro="character_teladi_male_plot_followed_pilot_macro">
                              <page exact="10503"/>
                              <!--TODO @Owen - cover as Teladi instead?-->
                              <owner exact="faction.teladi"/>
                              <skills>
                                <skill type="management" exact="4"/>
                                <skill type="morale" exact="7"/>
                                <skill type="piloting" exact="9"/>
                                <skill type="engineering" exact="4"/>
                                <skill type="boarding" exact="5"/>
                              </skills>
                            </create_cue_actor>
                            <set_entity_traits entity="$TargetTeladiPilot" missionactor="true"/>
                            <do_if value="$ShipExitGate.isclass.highwayexitgate">
                              <!--Spawn in super highway-->
                              <create_ship name="$FollowShip" macro="macro.ship_tel_s_scout_01_b_macro" capturable="false" zone="$ShipExitGate.highway">
                                <owner exact="faction.teladi"/>
                                <pilot actor="$TargetTeladiPilot"/>
                                <loadout>
                                  <level exact="0.9"/>
                                </loadout>
                                <position z="0.2" comment="Z axis of a highway is from 0 to 1.0"/>
                              </create_ship>
                            </do_if>
                            <do_else>
                              <!--Spawn the other side of the gate-->
                              <!--TODO @Owen - spawn in the gate with effect?-->
                              <create_ship name="$FollowShip" macro="macro.ship_tel_s_scout_01_b_macro" capturable="false" sector="$ShipExitGate.exit.sector">
                                <owner exact="faction.teladi"/>
                                <pilot actor="$TargetTeladiPilot"/>
                                <loadout>
                                  <level exact="0.9"/>
                                </loadout>
                                <position object="$ShipExitGate.exit" z="-100m" space="$ShipExitGate.exit.sector"/>
                              </create_ship>
                            </do_else>
                            <update_mission cue="Start" name="{30202,1051}" description="{30202,1055}"/>
                            <set_value name="$LockboxWareTable" exact="table[{ware.inv_hallucinogenics} = 8, {ware.inv_harddrug_01} = 2]"/>
                            <set_value name="$LockboxWares" exact="$LockboxWareTable.keys.list"/>
                            <do_for_each name="$Ware" valuename="$Amount" in="$LockboxWareTable">
                              <add_inventory entity="$TargetTeladiPilot" ware="$Ware" exact="$Amount"/>
                            </do_for_each>
                            <create_order name="$FollowShip_Order" object="$FollowShip" id="'MoveGeneric'">
                              <param name="destination" value="$FollowSector"/>
                              <param name="position" value="$FirstPosition"/>
                              <param name="noboost" value="false"/>
                              <param name="uselocalhighways" value="false"/>
                              <param name="debugchance" value="$DebugChance"/>
                            </create_order>
                          </actions>
                          <cues>
                            <library name="Pt4_Target_Killed_Actions">
                              <actions>
                                <do_if value="$FollowShip_TargetKilledByPlayer">
                                  <!--
                                  We've lost telemetry on the target.
                                  Apparently, she was shot down.-->
                                  <speak actor="$Dal" line="[30202131, 3s, 30202132]" caninterrupt="false" priority="100"/>
                                </do_if>
                                <do_else>
                                  <assert value="$FollowShip_TargetKilled" text="'This value should be set as $FollowShip_TargetKilledByPlayer was not [Owen]'"/>
                                  <!--
                                  We've lost telemetry on the target.
                                  Apparently, she was shot down.-->
                                  <speak actor="$Dal" line="[30202131, 3s, 30202132]" caninterrupt="false" priority="100"/>
                                </do_else>
                                <signal_cue cue="Pt4_Follow_Ended"/>
                              </actions>
                            </library>
                            <!--This cue will be waiting until the follow RML activates, which will take over-->
                            <cue name="Pt4_Follow_Ship_Destroyed">
                              <conditions>
                                <event_object_destroyed object="$FollowShip"/>
                              </conditions>
                              <actions>
                                <do_if value="event.param.isplayerowned">
                                  <set_value name="$FollowShip_TargetKilledByPlayer" exact="true"/>
                                </do_if>
                                <do_else>
                                  <set_value name="$FollowShip_TargetKilled" exact="false"/>
                                </do_else>
                                <include_actions ref="Pt4_Target_Killed_Actions"/>
                              </actions>
                            </cue>
                            <cue name="Pt4_Follow_Ship_Attacked">
                              <conditions>
                                <event_object_attacked object="$FollowShip"/>
                              </conditions>
                              <actions>
                                <set_value name="$FollowShip_TargetAttacked" exact="true"/>
                              </actions>
                            </cue>
                            <cue name="Pt4_Start_Follow_Mission" checkinterval="1s">
                              <conditions>
                                <check_value value="$FollowShip.exists and $FollowShip.sector == $FollowSector"/>
                              </conditions>
                              <actions>
                                <!--Create the ships beyond the lockbox drop location-->
                                <create_ship groupname="$LockboxCollectShips" capturable="false" sector="$FollowSector">
                                  <select faction="faction.argon" tags="tag.fighter" size="class.ship_s"/>
                                  <owner exact="faction.scaleplate" overridenpc="true"/>
                                  <loadout>
                                    <level exact="0.2"/>
                                  </loadout>
                                  <safepos value="$LockboxShipsSpawnPosition" max="100m" space="$FollowSector"/>
                                </create_ship>
                                <create_ship groupname="$LockboxCollectShips" capturable="false" sector="$FollowSector">
                                  <select faction="faction.argon" tags="tag.fighter" size="class.ship_s"/>
                                  <owner exact="faction.scaleplate" overridenpc="true"/>
                                  <loadout>
                                    <level exact="0.2"/>
                                  </loadout>
                                  <safepos value="$LockboxShipsSpawnPosition" max="100m" space="$FollowSector"/>
                                </create_ship>
                                <do_for_each name="$LockboxCollectShip" in="$LockboxCollectShips">
                                  <set_object_hull object="$LockboxCollectShip" min="70" max="80"/>
                                  <signal_objects object="player.galaxy" param="'Cover'" param2="[$LockboxCollectShip, faction.argon]"/>
                                  <create_order object="$LockboxCollectShip" id="'Wait'" default="true">
                                    <param name="allowdocked" value="false"/>
                                  </create_order>
                                </do_for_each>
                                <do_if value="not @$Argon_Police_Pilot.isclass.npc">
                                  <create_cue_actor name="$Argon_Police_Pilot" cue="namespace" macro="character_argon_female_plot_cynth_wilems_macro">
                                    <page exact="10107"/>
                                    <owner exact="faction.argon"/>
                                    <skills>
                                      <skill type="management" exact="4"/>
                                      <skill type="morale" exact="8"/>
                                      <skill type="piloting" exact="9"/>
                                      <skill type="engineering" exact="3"/>
                                      <skill type="boarding" exact="5"/>
                                    </skills>
                                  </create_cue_actor>
                                  <!--TODO @Owen #important review if they should all be missoin actors as this adds icons on the map-->
                                  <set_entity_traits entity="$Argon_Police_Pilot" missionactor="true"/>
                                </do_if>
                                <!--TODO @Owen spawn the ship a little away from the police encounter position and move them when ready-->
                                <request_job_ship name="$PoliceShip" job="'argon_police_patrol_s'" requester="$FollowSector"/>
                                <do_if value="$PoliceShip">
                                  <spawn_waiting_job_ship ship="$PoliceShip" sector="$FollowSector">
                                    <safepos value="$PoliceEncounterPosition" max="1km" space="$FollowSector"/>
                                  </spawn_waiting_job_ship>
                                  <set_object_capturable object="$PoliceShip" capturable="false"/>
                                  <set_value name="this.$OldPolicePilot" exact="$PoliceShip.pilot"/>
                                  <dismiss_control_entity actor="this.$OldPolicePilot" object="$PoliceShip"/>
                                  <remove_actor_from_room actor="this.$OldPolicePilot"/>
                                  <debug_text text="'Created police ship ' + $PoliceShip + ' and removed old pilot'" chance="$DebugChance"/>
                                  <do_if value="$Argon_Police_Pilot.controlled">
                                    <!--TODO @Owen #important aborting running scripts should not be necessary if assigning and initialising on a different object-->
                                    <abort_scripts entity="$Argon_Police_Pilot"/>
                                    <dismiss_control_entity actor="$Argon_Police_Pilot" object="$Argon_Police_Pilot.controlled"/>
                                  </do_if>
                                  <assign_control_entity actor="$Argon_Police_Pilot" post="controlpost.aipilot" object="$PoliceShip" transfer="true"/>
                                </do_if>
                                <do_else>
                                  <create_ship groupname="$PoliceShip" capturable="false" sector="$FollowSector">
                                    <select faction="faction.argon" tags="[fighter, light]" size="class.ship_s"/>
                                    <loadout>
                                      <level exact="0.7"/>
                                    </loadout>
                                    <owner exact="argon"/>
                                    <pilot actor="$Argon_Police_Pilot"/>
                                    <safepos value="$LockboxShipsSpawnPosition" max="100m" space="$FollowSector"/>
                                  </create_ship>
                                </do_else>
                                <assert value="$Argon_Police_Pilot.hascontext.{$PoliceShip} and $PoliceShip.pilot == $Argon_Police_Pilot" text="'Plot police pilot actor ' + $Argon_Police_Pilot + ' is not in control of the police ship ' + $PoliceShip + ' ' + $PoliceShip.knownname + ' [Owen]'"/>
                                <create_order object="$PoliceShip" id="'Wait'" default="true">
                                  <param name="allowdocked" value="false"/>
                                </create_order>
                                <set_value name="$LastFollowReminder" exact="player.age"/>
                                <set_value name="$FollowRangeMin" exact="5km"/>
                                <set_value name="$FollowRangeMax" exact="15km"/>
                              </actions>
                              <delay exact="1s"/>
                              <actions>
                                <!--
                                Remember, do not get too close. We don't want to arouse suspicion just yet.
                                If you lose the ship, we should be able to track it down, but we may miss something crucial.-->
                                <speak actor="$Dal" line="[30202102, if player.entity.isfemale then 30202104 else 30202103]"/>
                              </actions>
                              <cues>
                                <cue name="Pt4_Follow_Ship_Ref" ref="md.RML_Follow_Object.FollowObject">
                                  <param name="EndSignalCue" value="Pt4_Follow_Ship_RML_End"/>
                                  <param name="MissionCue" value="Start"/>
                                  <param name="StartStep" value="$FollowStep" comment="Briefing step to start the mission on"/>
                                  <param name="Target" value="$FollowShip"/>
                                  <param name="Range_Min" value="$FollowRangeMin"/>
                                  <param name="Range_Max" value="$FollowRangeMax"/>
                                  <param name="RangeChangeSignalCue" value="Pt4_Follow_Ship_Range_Changed"/>
                                  <param name="DebugChance" value="$DebugChance"/>
                                </cue>
                                <cue name="Pt4_Follow_Ship_RML_End">
                                  <conditions>
                                    <event_cue_signalled/>
                                  </conditions>
                                  <actions>
                                    <debug_text text="'Follow RML ended with feedback value: ' + Pt4_Follow_Ship_RML_End.$EndFeedbackValue" chance="$DebugChance"/>
                                    <do_if value="Pt4_Follow_Ship_RML_End.$EndFeedbackValue == -2">
                                      <!--Player killed target-->
                                      <set_value name="$FollowShip_TargetKilledByPlayer" exact="true"/>
                                      <include_actions ref="Pt4_Target_Killed_Actions"/>
                                    </do_if>
                                    <do_elseif value="Pt4_Follow_Ship_RML_End.$EndFeedbackValue == -1">
                                      <!--Something killed target-->
                                      <set_value name="$FollowShip_TargetKilled" exact="false"/>
                                      <include_actions ref="Pt4_Target_Killed_Actions"/>
                                    </do_elseif>
                                  </actions>
                                  <delay exact="1s"/>
                                  <actions>
                                    <assert value="false" text="'Follow RML ended with no proper handling. Falling back to end this part.'"/>
                                    <signal_cue cue="Pt4_Follow_Ended"/>
                                  </actions>
                                </cue>
                                <cue name="Pt4_Follow_Ship_Range_Changed" instantiate="true">
                                  <conditions>
                                    <event_cue_signalled/>
                                  </conditions>
                                  <actions>
                                    <debug_text text="event.param.{1} + ' ' + event.param.{2}" chance="$DebugChance"/>
                                  </actions>
                                </cue>
                                <cue name="Pt4_Follow_Ship_Reminder" checkinterval="1s">
                                  <conditions>
                                    <check_value value="player.age gt $LastFollowReminder + 60s"/>
                                    <check_value value="player.sector and (player.sector != $FollowShip.sector or player.entity.distanceto.{$FollowShip} ge $FollowRangeMax)"/>
                                  </conditions>
                                  <delay exact="3s"/>
                                  <actions>
                                    <do_if value="player.sector and (player.sector != $FollowShip.sector or player.entity.distanceto.{$FollowShip} ge $FollowRangeMax)">
                                      <do_any>
                                        <speak actor="$Dal" line="30202141" priority="90" comment="We won't be able to get much data at this distance."/>
                                        <speak actor="$Dal" line="if player.entity.isfemale then 30202143 else 30202142" priority="90" comment="You may need to pick up the pace."/>
                                        <speak actor="$Dal" line="30202144" priority="90" comment="She's getting away."/>
                                      </do_any>
                                      <set_value name="$LastFollowReminder" exact="player.age"/>
                                    </do_if>
                                    <reset_cue cue="Pt4_Follow_Ship_Reminder"/>
                                  </actions>
                                </cue>
                                <cue name="Pt4_Ship_Approaching_First_Point" checkinterval="1s">
                                  <conditions>
                                    <check_value value="$FollowShip.sector == $FollowSector"/>
                                    <check_object object="$FollowShip">
                                      <match_distance value="$FirstPosition" space="$FollowSector" max="2km"/>
                                    </check_object>
                                  </conditions>
                                  <actions>
                                    <debug_text text="'Ship approaching first position'" chance="$DebugChance"/>
                                    <cancel_order order="$FollowShip_Order"/>
                                    <create_order name="$FollowShip_Order" object="$FollowShip" id="'MoveGeneric'">
                                      <param name="destination" value="$FollowSector"/>
                                      <param name="position" value="$LockboxDropPosition"/>
                                      <param name="noboost" value="true"/>
                                      <param name="uselocalhighways" value="false"/>
                                      <param name="debugchance" value="$DebugChance"/>
                                    </create_order>
                                    <!--#newline Dal:
                                    "The ship has a new heading."-->
                                  </actions>
                                  <cues>
                                    <cue name="Pt4_Ship_Approaching_Lockbox_Position" checkinterval="1s">
                                      <conditions>
                                        <check_value value="$FollowShip.sector == $FollowSector"/>
                                        <check_object object="$FollowShip">
                                          <match_distance value="$LockboxDropPosition" space="$FollowSector" max="2km"/>
                                        </check_object>
                                      </conditions>
                                      <actions>
                                        <debug_text text="'Ship approaching lockbox position'" chance="$DebugChance"/>
                                        <cancel_order order="$FollowShip_Order"/>
                                        <create_order name="$FollowShip_Order" object="$FollowShip" id="'MoveGeneric'">
                                          <param name="destination" value="$FollowSector"/>
                                          <param name="position" value="$PoliceEncounterPosition"/>
                                          <param name="noboost" value="true"/>
                                          <param name="uselocalhighways" value="false"/>
                                          <param name="debugchance" value="$DebugChance"/>
                                        </create_order>
                                        <create_group groupname="$DroppedLockboxContainers"/>
                                        <drop_inventory object="$TargetTeladiPilot" ware="$LockboxWareTable" groupname="$DroppedLockboxes" macro="macro.sm_gen_lockbox_common_01_macro"/>
                                        <!--#newline Dal:
                                        "Looks like he ejected something."
                                        "Looks like she ejected something."
                                        "Go take a look."
                                        "Just don't forget our primary task."-->
                                        <set_value name="$FollowShip_DropWitnessed" exact="true"/>
                                        <!--TODO @Owen #important have the collecting ships actually collect-->
                                      </actions>
                                      <cues>
                                        <cue name="Pt4_Approached_Drop" checkinterval="2s">
                                          <conditions>
                                            <!--Check if the player has targeted any drop or has a ship close to them-->
                                            <check_any>
                                              <check_value value="$DroppedLockboxes.indexof.{player.target}"/>
                                              <check_value value="$DroppedLockboxContainers.indexof.{player.target}"/>
                                              <check_any exact="$DroppedLockboxes.count" counter="$i">
                                                <count_ships min="1" owner="faction.player" space="$DroppedLockboxes.{$i}.sector">
                                                  <match_distance object="$DroppedLockboxes.{$i}" max="5km"/>
                                                </count_ships>
                                              </check_any>
                                              <check_any exact="$DroppedLockboxContainers.count" counter="$i">
                                                <count_ships min="1" owner="faction.player" space="$DroppedLockboxContainers.{$i}.sector">
                                                  <match_distance object="$DroppedLockboxContainers.{$i}" max="5km"/>
                                                </count_ships>
                                              </check_any>
                                            </check_any>
                                          </conditions>
                                          <actions>
                                            <set_value name="$FollowShip_DropInspected" exact="true"/>
                                          </actions>
                                        </cue>
                                        <!--We're probably only dealing with one lockbox but we have to assume it's a group of multiple-->
                                        <cue name="Pt4_Lockboxes_Opened" instantiate="true">
                                          <conditions>
                                            <event_object_dropped_objects group="$DroppedLockboxes"/>
                                          </conditions>
                                          <actions>
                                            <debug_text text="'Lockbox ' + event.object + ' was opened and dropped ' + event.param.count + ' drops'" chance="$DebugChance"/>
                                            <add_to_group groupname="$DroppedLockboxContainers" list="event.param"/>
                                            <remove_from_group group="$DroppedLockboxes" object="event.object"/>
                                          </actions>
                                        </cue>
                                        <!--Drops destroyed or collected-->
                                        <cue name="Pt4_Player_Drop_Interfered">
                                          <conditions>
                                            <check_any>
                                              <check_all>
                                                <!--We only care about lockboxes with things still inside-->
                                                <event_object_destroyed group="$DroppedLockboxes"/>
                                                <check_value value="event.object.wares.count and @event.param.isplayerowned"/>
                                              </check_all>
                                              <check_all>
                                                <event_object_destroyed group="$DroppedLockboxContainers"/>
                                                <check_value value="@event.param.isplayerowned"/>
                                              </check_all>
                                            </check_any>
                                          </conditions>
                                          <actions>
                                            <do_if value="$DroppedLockboxContainers.indexof.{event.object} and event.param2 == killmethod.collected">
                                              <debug_text text="'Drop ' + event.object + ' was collected by player owned object ' + event.param.knownname" chance="$DebugChance"/>
                                              <set_value name="$FollowShip_DropCollected" exact="true"/>
                                            </do_if>
                                            <do_else>
                                              <debug_text text="'Lockbox or drop ' + event.object + ' was destroyed by player owned object ' + event.param.knownname" chance="$DebugChance"/>
                                              <set_value name="$FollowShip_DropDestroyed" exact="true"/>
                                            </do_else>
                                          </actions>
                                          <delay exact="3s"/>
                                          <actions>
                                            <!--Dal: That's surely going to tick someone off. Good.-->
                                            <speak actor="$Dal" line="30202105" caninterrupt="false" priority="100"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt4_Player_Destroyed_Drop_Attack">
                                              <conditions>
                                                <event_speak_finished actor="$Dal" line="30202105"/>
                                              </conditions>
                                              <actions>
                                                <signal_cue cue="Pt4_Lockbox_Ships_Attack" check="false"/>
                                              </actions>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="Pt4_Lockbox_Ships_Attack">
                                          <conditions>
                                            <event_cue_signalled/>
                                          </conditions>
                                          <actions>
                                            <do_if value="$LockboxCollectShips.count">
                                              <set_value name="this.$Target" exact="player.ship"/>
                                              <do_if value="not this.$Target">
                                                <find_ship_by_true_owner name="this.$Target" faction="faction.player" space="$LockboxCollectShips.{1}.sector">
                                                  <match_distance object="$LockboxCollectShips.{1}" max="50km"/>
                                                </find_ship_by_true_owner>
                                              </do_if>
                                              <do_if value="this.$Target">
                                                <do_for_each name="$LockboxCollectShip" in="$LockboxCollectShips">
                                                  <set_relation_boost object="$LockboxCollectShip" faction="faction.player" silent="true" decay="0.00000001" value="-0.7"/>
                                                  <set_relation_boost object="$LockboxCollectShip" faction="faction.hatikvah" silent="true" decay="0.00000001" value="-0.7"/>
                                                  <create_order object="$LockboxCollectShip" id="'Attack'">
                                                    <param name="primarytarget" value="this.$Target"/>
                                                    <param name="pursuetargets" value="true"/>
                                                  </create_order>
                                                </do_for_each>
                                              </do_if>
                                            </do_if>
                                            <do_if value="not $LockboxCollectShips.count or not @this.$Target.exists">
                                              <cancel_cue cue="Pt4_Lockbox_Ships_Attack"/>
                                            </do_if>
                                            <do_else>
                                              <set_value name="$LockboxCollectLeader" exact="$LockboxCollectShips.{1}.pilot"/>
                                              <set_value name="$LockboxCollectWingman" exact="$LockboxCollectShips.{2}.pilot"/>
                                            </do_else>
                                          </actions>
                                          <delay exact="1s"/>
                                          <actions>
                                            <speak actor="$LockboxCollectLeader" line="10529" broadcast="true" comment="Let's get them!"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt4_Lockbox_Ships_Attack_Speak_2">
                                              <conditions>
                                                <event_speak_finished actor="$LockboxCollectLeader"/>
                                              </conditions>
                                              <delay exact="0.3s"/>
                                              <actions>
                                                <do_if value="$LockboxCollectWingman.exists">
                                                  <speak actor="$LockboxCollectWingman" line="2105" broadcast="true" comment="Acknowledged."/>
                                                </do_if>
                                              </actions>
                                              <delay exact="4s"/>
                                              <actions>
                                                <!--
                                                Looks like that lockbox was left for these guys.
                                                So, fight or flight? I leave that up to you.-->
                                                <speak actor="$Dal" line="[30202106, 0.2s, if player.entity.isfemale then 30202108 else 30202107]" caninterrupt="false" priority="100"/>
                                              </actions>
                                              <cues>
                                                <cue name="Pt4_Lockbox_Ships_Attack_Speak_2_Ended">
                                                  <conditions>
                                                    <event_speak_finished actor="$Dal" line="30202106"/>
                                                  </conditions>
                                                </cue>
                                                <cue name="Pt4_Lockbox_Ships_Attack_Drop_Speak" checkinterval="1s">
                                                  <conditions>
                                                    <cue_is_complete cue="Pt4_Lockbox_Ships_Attack_Speak_2_Ended"/>
                                                    <check_value value="$FollowShip_DropCollected and Pt4_Lockbox_Ships_Attack.$Target.exists and player.entity.hascontext.{Pt4_Lockbox_Ships_Attack.$Target}"/>
                                                    <check_any exact="$LockboxCollectShips.count" counter="$i">
                                                      <check_value value="$LockboxCollectShips.{$i}.distanceto.{Pt4_Lockbox_Ships_Attack.$Target} lt 3km"/>
                                                    </check_any>
                                                  </conditions>
                                                  <actions>
                                                    <set_value name="$LockboxCollectLeader" exact="@$LockboxCollectShips.{1}.pilot"/>
                                                    <do_if value="$LockboxCollectLeader">
                                                      <speak actor="$LockboxCollectLeader" line="9003" comment="Jettison the cargo."/>
                                                    </do_if>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                            <cue name="Pt4_Lockbox_Ship_Destroyed">
                                              <conditions>
                                                <event_object_destroyed group="$LockboxCollectShips"/>
                                                <check_value value="@event.param.isplayerowned"/>
                                              </conditions>
                                              <actions>
                                                <debug_text text="'Player killed a lockbox related ship.'" chance="$DebugChance"/>
                                                <cancel_cue cue="Pt4_Ignored_Lockbox_Attakers"/>
                                                <set_value name="$FollowShip_DropCollectorKilled" exact="false"/>
                                              </actions>
                                              <delay exact="1s"/>
                                              <actions>
                                                <speak actor="$Dal" line="if player.entity.isfemale then 30202110 else 30202109" priority="100"/>
                                              </actions>
                                            </cue>
                                            <cue name="Pt4_Dropped_Lockbox_Content">
                                              <conditions>
                                                <check_any>
                                                  <!--Just add the destroy event here too so the cue is no longer waiting if it's killed-->
                                                  <event_object_destroyed object="Pt4_Lockbox_Ships_Attack.$Target"/>
                                                  <check_all>
                                                    <event_object_dropped_objects object="Pt4_Lockbox_Ships_Attack.$Target"/>
                                                    <check_value value="$FollowShip_DropCollected"/>
                                                    <check_any exact="event.param.count" counter="$i">
                                                      <check_any exact="$LockboxWares.count" counter="$k">
                                                        <check_value value="event.param.{$i}.wares.{$LockboxWares.{$k}}.exists"/>
                                                      </check_any>
                                                    </check_any>
                                                  </check_all>
                                                </check_any>
                                              </conditions>
                                              <actions>
                                                <do_if value="event.name == 'event_object_dropped_objects'">
                                                  <cancel_cue cue="Pt4_Ignored_Lockbox_Attakers"/>
                                                  <set_value name="$LockboxCollectLeader" exact="@$LockboxCollectShips.{1}.pilot"/>
                                                  <do_if value="not $LockboxCollectLeader">
                                                    <cancel_cue cue="Pt4_Dropped_Lockbox_Content"/>
                                                  </do_if>
                                                </do_if>
                                                <do_else>
                                                  <cancel_cue cue="Pt4_Dropped_Lockbox_Content"/>
                                                </do_else>
                                              </actions>
                                              <delay exact="2s"/>
                                              <actions>
                                                <!--
                                                Well, that was easy!
                                                You better watch your back.-->
                                                <speak actor="$LockboxCollectLeader" line="[9006, 0.4s, 5034]" priority="100" comment="Jettison the cargo."/>
                                              </actions>
                                              <cues>
                                                <cue name="Pt4_Dropped_Lockbox_Content_End">
                                                  <conditions>
                                                    <event_speak_finished actor="$LockboxCollectLeader"/>
                                                  </conditions>
                                                  <delay exact="2s"/>
                                                  <actions>
                                                    <!--Ah, appealing to their better judgement. How noble.-->
                                                    <speak actor="$Dal" line="30202111" priority="100"/>
                                                    <signal_cue cue="Pt4_Break_Off_Lockbox_Attack"/>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                            <cue name="Pt4_Ignored_Lockbox_Attakers">
                                              <!--TODO @Owen check that the player moved on to follow the ship. Attackers should break off?-->
                                              <conditions>
                                                <event_cue_signalled/>
                                              </conditions>
                                            </cue>
                                            <cue name="Pt4_Break_Off_Lockbox_Attack">
                                              <conditions>
                                                <event_cue_signalled/>
                                              </conditions>
                                              <actions>
                                                <cancel_cue cue="Pt4_Lockbox_Ships_Attack"/>
                                              </actions>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="Pt4_Ship_Approaching_Police_Position" checkinterval="1s">
                                          <conditions>
                                            <check_value value="$FollowShip.sector == $FollowSector"/>
                                            <check_object object="$FollowShip">
                                              <match_distance value="$PoliceEncounterPosition" space="$FollowSector" max="2km"/>
                                            </check_object>
                                          </conditions>
                                          <actions>
                                            <debug_text text="'Ship approaching police position'" chance="$DebugChance"/>
                                            <cancel_order order="$FollowShip_Order"/>
                                            <do_if value="$PoliceShip.isoperational and $PoliceShip.sector == $FollowSector and $PoliceShip.distanceto.[$FollowSector, $PoliceEncounterPosition] lt 10km">
                                              <!--Wait for the encounter to happen-->
                                              <create_order name="$FollowShip_Order" object="$FollowShip" id="'MoveWait'">
                                                <param name="destination" value="[$FollowSector, $PoliceEncounterPosition]"/>
                                                <param name="debugchance" value="$DebugChance"/>
                                              </create_order>
                                            </do_if>
                                            <do_else>
                                              <!--Continue to the next sector-->
                                              <create_order name="$FollowShip_Order" object="$FollowShip" id="'MoveGeneric'">
                                                <param name="destination" value="$FollowDestSector"/>
                                                <param name="position" value="$FollowShipDestPos"/>
                                                <param name="noboost" value="false"/>
                                                <param name="uselocalhighways" value="false"/>
                                                <param name="debugchance" value="$DebugChance"/>
                                              </create_order>
                                            </do_else>
                                          </actions>
                                          <cues>
                                            <cue name="Pt4_Police_Encounter" checkinterval="1s">
                                              <conditions>
                                                <check_value value="player.sector == $FollowSector and $PoliceShip.sector == $FollowSector and $FollowShip.sector == $FollowSector"/>
                                                <check_value value="$FollowShip.distanceto.{$PoliceShip} lt 5km"/>
                                                <check_any>
                                                  <check_value value="player.entity.distanceto.{$PoliceShip} lt 5km"/>
                                                  <check_value value="player.entity.distanceto.{$FollowShip} lt 8km"/>
                                                </check_any>
                                              </conditions>
                                              <actions>
                                                <set_value name="$FollowShip_WitnessedPolice" exact="true"/>
                                                <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_Follow_Ship_Police_Encounter', $actors = table[ $Dal = $Dal, $Teladi = $TargetTeladiPilot, $Police = $Argon_Police_Pilot ], $callbackcue = Pt4_Police_Encounter_Move_On, $abortcallbackcue = Pt4_Police_Encounter_Move_On, $debugchance = $DebugChance ]"/>
                                              </actions>
                                              <cues>
                                                <cue name="Patch_Pt4_Police_Encounter_Move_On_V2" checktime="Pt4_Police_Encounter.time + 120s" onfail="cancel">
                                                  <conditions>
                                                    <check_value value="Pt4_Police_Encounter_Move_On.state == cuestate.waiting"/>
                                                  </conditions>
                                                  <actions>
                                                    <!--One user had this cue not complete after the usecase was triggered. The below event is to fix their savegame.
                                                    The likely cause was found in 4.10. This could potentially happen if a conversation aborts the usecase, leading to the speak not happening.
                                                    Pt4_Police_Encounter_Move_On will now be signalled in that case.-->
                                                    <do_if value="player.age gt Pt4_Police_Encounter.time + 121s">
                                                      <debug_text text="'Expected speak did not occur. Signalling the waiting cue to activate'" filter="savegame"/>
                                                    </do_if>
                                                    <do_else>
                                                      <debug_text text="'Expected speak did not occur. Signalling the waiting cue to activate'" filter="error"/>
                                                    </do_else>
                                                    <signal_cue cue="Pt4_Police_Encounter_Move_On" check="false"/>
                                                  </actions>
                                                </cue>
                                                <cue name="Pt4_Police_Encounter_Move_On">
                                                  <conditions>
                                                    <check_any>
                                                      <event_speak_finished actor="$TargetTeladiPilot" line="30202004"/>
                                                      <event_cue_signalled/>
                                                    </check_any>
                                                  </conditions>
                                                  <actions>
                                                    <!--Continue to the next sector-->
                                                    <create_order name="$FollowShip_Order" object="$FollowShip" id="'MoveGeneric'">
                                                      <param name="destination" value="$FollowDestSector"/>
                                                      <param name="position" value="$FollowShipDestPos"/>
                                                      <param name="noboost" value="false"/>
                                                      <param name="uselocalhighways" value="false"/>
                                                      <param name="debugchance" value="$DebugChance"/>
                                                    </create_order>
                                                    <!--Police ship moves to die. Release the existing police pilot as a mission actor. They will be recreated later for a dialog.-->
                                                    <set_entity_traits entity="$Argon_Police_Pilot" missionactor="false"/>
                                                    <set_value name="$DespawningPolicePilot" exact="$Argon_Police_Pilot"/>
                                                    <remove_cue_actor actor="$Argon_Police_Pilot" cue="namespace"/>
                                                    <remove_value name="$Argon_Police_Pilot"/>
                                                    <create_order object="$PoliceShip" id="'MoveDie'" immediate="true">
                                                      <param name="mintime" value="120s" comment="stay alive for specified time, after it docks"/>
                                                    </create_order>
                                                  </actions>
                                                  <cues>
                                                    <cue name="Pt4_Player_Moves_Ahead">
                                                      <conditions>
                                                        <event_object_changed_sector object="player.entity" sector="$FollowDestSector"/>
                                                      </conditions>
                                                      <actions>
                                                        <do_if value="Pt4_Followed_Ship_Enters_Destination_Sector.state == cuestate.waiting">
                                                          <speak actor="$Dal" line="30202140" priority="100" comment="Ah, trying to get ahead of them? Interesting tactic."/>
                                                        </do_if>
                                                      </actions>
                                                    </cue>
                                                  </cues>
                                                </cue>
                                              </cues>
                                            </cue>
                                            <cue name="Pt4_Followed_Ship_Enters_Destination_Sector">
                                              <conditions>
                                                <event_object_changed_sector object="$FollowShip" sector="$FollowDestSector"/>
                                              </conditions>
                                              <delay exact="1s"/>
                                              <actions>
                                                <cancel_order order="$FollowShip_Order"/>
                                                <create_order name="$FollowShip_Order" object="$FollowShip" id="'MoveWait'">
                                                  <param name="destination" value="[$FollowDestSector, $FollowShipDestPos]"/>
                                                  <param name="debugchance" value="$DebugChance"/>
                                                </create_order>
                                                <do_if value="player.sector != $FollowDestSector">
                                                  <speak actor="$Dal" line="30202133"/>
                                                </do_if>
                                              </actions>
                                            </cue>
                                            <!--TODO @Owen #important make sure that the follow objective isn't confusing at this point-->
                                            <cue name="Pt4_Player_Encounter" checkinterval="1s">
                                              <conditions>
                                                <check_value value="player.sector == $FollowDestSector and $FollowShip.sector == $FollowDestSector"/>
                                                <check_value value="player.entity.distanceto.{$FollowShip} lt 12km"/>
                                                <check_value value="player.age gt Pt4_Followed_Ship_Enters_Destination_Sector.time + 30s or $FollowShip.distanceto.[$FollowDestSector, $FollowShipDestPos] lt 2km"/>
                                              </conditions>
                                              <actions>
                                                <set_value name="$FollowShip_PlayerEncounter" exact="true"/>
                                                <speak actor="$Dal" line="30202134" priority="100" comment="Uh oh. Heads up."/>
                                                <cancel_cue cue="Pt4_Follow_Ship_Reminder"/>
                                              </actions>
                                              <cues>
                                                <cue name="Pt4_Player_Encounter_Wait">
                                                  <conditions>
                                                    <event_speak_finished actor="$Dal"/>
                                                  </conditions>
                                                  <cues>
                                                    <cue name="Pt4_Player_Encounter_Trigger_Conv" checkinterval="2s">
                                                      <conditions>
                                                        <check_value value="not player.isinconversation"/>
                                                      </conditions>
                                                      <actions>
                                                        <start_conversation actor="$TargetTeladiPilot" conversation="followship_encounter" priority="100"/>
                                                      </actions>
                                                    </cue>
                                                    <cue name="Pt4_Player_Encounter_Start_Conv">
                                                      <conditions>
                                                        <event_conversation_started actor="$TargetTeladiPilot"/>
                                                      </conditions>
                                                      <actions>
                                                        <!--
                                                        Teladi: So. Are you police? Or perhaps Hatikvah scum?
                                                        Teladi: That's close enough!
                                                        Dal: Oh. They're calling us 'Hatikvah scum' now. That's good info. Keep them talking.-->
                                                        <allow_conversation_escape enabled="false"/>
                                                        <set_value name="$Conv_Phase" exact="1"/>
                                                        <add_npc_line speaker="$TargetTeladiPilot" line="30202008" hidechoices="true"/>
                                                        <add_npc_line speaker="$TargetTeladiPilot" line="if player.entity.isfemale then 30202010 else 30202009" hidechoices="true"/>
                                                        <add_npc_line speaker="$Dal" line="30202135" delay="0.5s" hidechoices="true"/>
                                                        <do_if value="$TargetTeladiPilot.isfemale">
                                                          <add_player_choice text="{30202,713}" section="encounter_arrest"/>
                                                          <add_player_choice text="{30202,717}" section="encounter_who"/>
                                                        </do_if>
                                                        <do_else>
                                                          <add_player_choice text="{30202,712}" section="encounter_arrest"/>
                                                          <add_player_choice text="{30202,716}" section="encounter_who"/>
                                                        </do_else>
                                                        <add_player_choice text="{30202,714}" section="encounter_hatikvah"/>
                                                      </actions>
                                                    </cue>
                                                    <library name="Pt4_Player_Encounter_Phase_2_Options">
                                                      <actions>
                                                        <do_if value="$TargetTeladiPilot.isfemale">
                                                          <add_player_choice text="{30202,719}" section="encounter_leader"/>
                                                          <add_player_choice text="{30202,723}" section="encounter_insult"/>
                                                        </do_if>
                                                        <do_else>
                                                          <add_player_choice text="{30202,718}" section="encounter_leader"/>
                                                          <add_player_choice text="{30202,722}" section="encounter_insult"/>
                                                        </do_else>
                                                        <add_player_choice text="{30202,720}" section="encounter_leave"/>
                                                      </actions>
                                                    </library>
                                                    <cue name="Pt4_Player_Encounter_Next_Section" instantiate="true">
                                                      <conditions>
                                                        <event_conversation_next_section actor="$TargetTeladiPilot"/>
                                                      </conditions>
                                                      <actions>
                                                        <!--Phase 1-->
                                                        <do_if value="event.param == 'encounter_arrest'">
                                                          <!--
                                                          Teladi: Hah. I respect your humour but I have no time for it.
                                                          Teladi: We do not appreciate people prying into our business.
                                                          Dal: That seems to have ticked her off.-->
                                                          <add_npc_line speaker="$TargetTeladiPilot" line="if player.entity.isfemale then 30202012 else 30202011" hidechoices="true"/>
                                                          <add_npc_line speaker="$TargetTeladiPilot" line="30202013" hidechoices="true"/>
                                                          <add_npc_line speaker="$Dal" line="30202136" delay="0.3s" hidechoices="true"/>
                                                          <include_actions ref="Pt4_Player_Encounter_Phase_2_Options"/>
                                                        </do_if>
                                                        <do_elseif value="event.param == 'encounter_hatikvah'">
                                                          <!--
                                                          Teladi: (aggravated)If that's true, then I have nothing to say to you.
                                                          Teladi: Perhaps spend less time following me and more time crying to the Argon for aid.
                                                          Dal: Oof. Sounds like the Hatikvah situation is a sensitive subject.-->
                                                          <add_npc_line speaker="$TargetTeladiPilot" line="if player.entity.isfemale then 30202015 else 30202014" hidechoices="true"/>
                                                          <add_npc_line speaker="$TargetTeladiPilot" line="30202016" hidechoices="true"/>
                                                          <add_npc_line speaker="$Dal" line="30202137" delay="0.3s" hidechoices="true"/>
                                                          <include_actions ref="Pt4_Player_Encounter_Phase_2_Options"/>
                                                        </do_elseif>
                                                        <do_elseif value="event.param == 'encounter_who'">
                                                          <!--
                                                          Teladi: Do not insult my intelligence. I know you have been following me.
                                                          Teladi: I am a proud member of the Scale Plate Pact. Do not interfere.
                                                          Dal: Always nice to see someone take pride in their work.-->
                                                          <add_npc_line speaker="$TargetTeladiPilot" line="if player.entity.isfemale then 30202018 else 30202017" hidechoices="true"/>
                                                          <add_npc_line speaker="$TargetTeladiPilot" line="30202019" hidechoices="true"/>
                                                          <add_npc_line speaker="$Dal" line="30202138" delay="0.3s" hidechoices="true"/>
                                                          <include_actions ref="Pt4_Player_Encounter_Phase_2_Options"/>
                                                        </do_elseif>
                                                        <!--Phase 2-->
                                                        <do_elseif value="event.param == 'encounter_insult'">
                                                          <!--TODO @Owen - there are lines to have her be aggressive at this point and fight. Passive for now.-->
                                                          <do_if value="true">
                                                            <!--Teladi: If you wish to provoke me into a fight, you are a fool. I will take my leave.-->
                                                            <add_npc_line speaker="$TargetTeladiPilot" line="if player.entity.isfemale then 30202021 else 30202020" hidechoices="true"/>
                                                          </do_if>
                                                          <do_else>
                                                            <!--Teladi: (aggressive)We shall see.-->
                                                            <add_npc_line speaker="$TargetTeladiPilot" line="30202022" hidechoices="true"/>
                                                          </do_else>
                                                        </do_elseif>
                                                        <do_elseif value="event.param == 'encounter_leader'">
                                                          <!--
                                                          Teladi: Our lieutenant has better things to do than entertain you. He will bend you all to his will.
                                                          Dal: That confirms that the lieutenant is a male Teladi.-->
                                                          <add_npc_line speaker="$TargetTeladiPilot" line="if player.entity.isfemale then 30202024 else 30202023" hidechoices="true"/>
                                                          <add_npc_line speaker="$Dal" line="30202139" delay="0.5s" hidechoices="true"/>
                                                        </do_elseif>
                                                        <do_elseif value="event.param == 'encounter_leave'">
                                                          <!--Teladi: Perhaps that is for the best. We will be watching.-->
                                                          <add_npc_line speaker="$TargetTeladiPilot" line="30202025" hidechoices="true"/>
                                                        </do_elseif>
                                                      </actions>
                                                    </cue>
                                                    <cue name="Pt4_Player_Encounter_Finished">
                                                      <conditions>
                                                        <event_conversation_finished actor="$TargetTeladiPilot"/>
                                                      </conditions>
                                                      <actions>
                                                        <create_order object="$FollowShip" id="'MoveDie'" immediate="true">
                                                          <param name="mintime" value="120s" comment="stay alive for specified time, after it docks"/>
                                                        </create_order>
                                                        <signal_cue cue="Pt4_Follow_Ended"/>
                                                      </actions>
                                                    </cue>
                                                  </cues>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                        <cue name="Pt4_Follow_Ended">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <!--TODO @Owen #important clean up $LockboxCollectShips-->
                          <actions>
                            <!--End of part 4-->
                            <signal_cue cue="Pt5_The_Meeting"/>
                            <cancel_cue cue="Pt4_Follow_Ship"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Part 5 - The meeting-->
        <cue name="Pt5_Force">
          <force name="Plot_Diplomat_Pt5">
            <signal_cue_instantly cue="Force_Part" param="Pt5_The_Meeting"/>
          </force>
        </cue>
        <cue name="Pt5_The_Meeting">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <create_mission cue="Start" abortable="false" type="missiontype.plot" name="{30202,1061}" description="{30202,1062}" difficulty="level.easy" faction="faction.hatikvah"/>
              <include_actions ref="Create_Reen_Office"/>
              <set_entity_traits entity="$Reen" subtitlename="true"/>
              <set_entity_traits entity="$Dal" subtitlename="true"/>
              <set_entity_traits entity="$Kat" subtitlename="true"/>
              <set_entity_traits entity="$Cline" subtitlename="true"/>
              <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                  table[                 $requestercue = namespace,                 $location = $Reen_Office_Room,                 $priority = 100,                 $slottags = [tag.sit],                 $debugchance = $DebugChance2,                 $debugcaller = if $DebugChance2 == 100 then this else null]                 ]"/>
              <!--TODO @Owen better positioning-->
              <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                  table[                 $requestercue = namespace,                 $location = $Reen_Office_Room,                 $priority = 100,                 $position = position.[-0.85m, 0.05m, -6.5m],                 $rotation = rotation.[130deg, 0deg, 0deg],                 $debugchance = $DebugChance2,                 $debugcaller = if $DebugChance2 == 100 then this else null]                 ]"/>
              <!--Set some flags which should have been set during Part 4-->
              <set_value name="$FollowShip_TargetAttacked" exact="false"/>
              <set_value name="$FollowShip_TargetLost" exact="false"/>
              <set_value name="$FollowShip_TargetKilled" exact="false"/>
              <set_value name="$FollowShip_TargetKilledByPlayer" exact="false"/>
              <set_value name="$FollowShip_DropWitnessed" exact="true"/>
              <set_value name="$FollowShip_DropInspected" exact="false"/>
              <set_value name="$FollowShip_DropDestroyed" exact="false"/>
              <set_value name="$FollowShip_DropCollected" exact="false"/>
              <set_value name="$FollowShip_DropCollectorKilled" exact="false"/>
              <set_value name="$FollowShip_WitnessedPolice" exact="true"/>
              <set_value name="$FollowShip_PlayerEncounter" exact="true"/>
              <set_value name="$FollowShip_AdmitHatikvah" exact="true"/>
              <set_value name="$FollowShip_TakeMeToYourLeader" exact="false"/>
            </do_if>
            <update_mission cue="Start">
              <briefing replace="true">
                <objective step="1" action="objective.follow" text="{30202,2008}" comment="Follow: Scale Plate ship"/>
              </briefing>
            </update_mission>
          </actions>
          <cues>
            <cue name="Pt5_Return_To_Hatikvah_Speak">
              <delay exact="2s"/>
              <actions>
                <speak actor="$Dal" line="30202145"/>
              </actions>
            </cue>
            <cue name="Pt5_Return_To_Hatikvah">
              <conditions>
                <event_speak_finished actor="$Dal" line="30202145"/>
              </conditions>
              <actions>
                <set_objective cue="Start" step="2" action="objective.talkto" object="$Reen" updatebriefing="true"/>
              </actions>
            </cue>
            <cue name="Pt5_Reen_Conv_Start">
              <conditions>
                <event_conversation_started actor="$Reen"/>
              </conditions>
              <actions>
                <set_objective cue="Start" action="objective.none"/>
                <!--Reen: Good to have you back in one piece.-->
                <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202057 else 30202056" delay="1.5s" lookat="player.entity"/>
                <!--Dal: This certainly has been a busy day-->
                <add_npc_line speaker="$Dal" line="30202146" delay="1s" lookat="player.entity"/>
                <!--Reen: So, what have we learned?-->
                <add_npc_line speaker="$Reen" line="30202058" delay="2s" lookat="$Dal"/>
                <do_if value="$FollowShip_TargetAttacked or $FollowShip_TargetKilledByPlayer">
                  <!--Dal: Our new friend here has the innate ability to shake up a situation. I don't hate that.-->
                  <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202148 else 30202147" delay="1s" lookat="player.entity"/>
                </do_if>
                <do_elseif value="$FollowShip_TargetLost">
                  <!--Dal: Espionage may not be our new friend's strong suit.-->
                  <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202150 else 30202149" delay="1s" lookat="player.entity"/>
                </do_elseif>
                <do_elseif value="$FollowShip_TargetKilled and not $FollowShip_PlayerEncounter">
                  <!--Dal: That didn't go well, but we might still be able to salvage this.-->
                  <add_npc_line speaker="$Dal" line="1000405" delay="1s" lookat="player.entity"/>
                </do_elseif>
                <do_else>
                  <!--Dal: Our new friend here is worth every credit you're paying him/her.-->
                  <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202152 else 30202151" delay="1s" lookat="player.entity"/>
                </do_else>
                <set_value name="$FollowShip_KnowledgeGained" exact="0"/>
                <set_value name="$LastDalIntelLine" exact="0"/>
                <do_if value="not $FollowShip_DropWitnessed and not $FollowShip_WitnessedPolice">
                  <!--Dal: The target was likely a Scale Plate smuggler.-->
                  <set_value name="$LastDalIntelLine" exact="30202153" comment="Use: add_npc_line speaker = $Dal"/>
                  <add_npc_line speaker="$Dal" line="$LastDalIntelLine" delay="1s" lookat="$Reen"/>
                </do_if>
                <do_else>
                  <do_if value="$FollowShip_DropInspected">
                    <!--Dal: Our target was involved in making drops of illicit goods.-->
                    <set_value name="$LastDalIntelLine" exact="30202154" comment="Use: add_npc_line speaker = $Dal"/>
                    <add_npc_line speaker="$Dal" line="$LastDalIntelLine" delay="1s" lookat="$Reen"/>
                    <set_value name="$FollowShip_KnowledgeGained" operation="add"/>
                    <do_if value="$FollowShip_DropDestroyed or $FollowShip_DropCollected or $FollowShip_DropCollectorKilled">
                      <!--Dal: Hopefully, your actions will send a message that we're not playing around.-->
                      <set_value name="$LastDalIntelLine" exact="if player.entity.isfemale then 30202156 else 30202155" comment="Use: add_npc_line speaker = $Dal"/>
                      <add_npc_line speaker="$Dal" line="$LastDalIntelLine" delay="1s" lookat="player.entity"/>
                      <set_value name="$FollowShip_KnowledgeGained" operation="add"/>
                    </do_if>
                  </do_if>
                  <do_if value="$FollowShip_WitnessedPolice">
                    <!--Dal: Our quarry is also known to the police, who may be a valuable source of information.-->
                    <set_value name="$LastDalIntelLine" exact="30202157" comment="Use: add_npc_line speaker = $Dal"/>
                    <add_npc_line speaker="$Dal" line="$LastDalIntelLine" delay="1s" lookat="$Reen"/>
                    <set_value name="$FollowShip_KnowledgeGained" operation="add"/>
                  </do_if>
                </do_else>
                <do_if value="$FollowShip_AdmitHatikvah">
                  <do_if value="not $FollowShip_TakeMeToYourLeader">
                    <!--Dal: And last but not least.-->
                    <add_npc_line speaker="$Dal" line="30202159" delay="1s" lookat="$Reen"/>
                  </do_if>
                  <!--Dal: They are very agitated about the Hatikvah situation. Perhaps it hurts them harder than we thought.-->
                  <set_value name="$LastDalIntelLine" exact="30202158" comment="Use: add_npc_line speaker = $Dal"/>
                  <add_npc_line speaker="$Dal" line="$LastDalIntelLine" delay="1s" lookat="$Reen"/>
                  <set_value name="$FollowShip_KnowledgeGained" operation="add"/>
                </do_if>
                <do_if value="$FollowShip_TakeMeToYourLeader">
                  <!--Dal: And last but not least.-->
                  <add_npc_line speaker="$Dal" line="30202159" delay="1s" lookat="$Reen"/>
                  <!--Dal: The lieutenant is indeed a male Teladi. I suggest we approach him soon.-->
                  <set_value name="$LastDalIntelLine" exact="30202160" comment="Use: add_npc_line speaker = $Dal"/>
                  <add_npc_line speaker="$Dal" line="$LastDalIntelLine" delay="1s" lookat="$Reen"/>
                  <set_value name="$FollowShip_KnowledgeGained" operation="add"/>
                </do_if>
                <do_if value="$FollowShip_KnowledgeGained lt 2">
                  <!--Reen: (slightly annoyed)That's not much more to go on.-->
                  <add_npc_line speaker="$Reen" line="30202059" delay="1s" lookat="$Dal"/>
                  <!--Dal: I, for one, welcome any outcome.-->
                  <add_npc_line speaker="$Dal" line="30202161" delay="1.5s" lookat="$Reen"/>
                  <!--Dal: Even through failure, we gather crucial data.-->
                  <add_npc_line speaker="$Dal" line="30202162" delay="0.5s" lookat="player.entity"/>
                </do_if>
                <do_else>
                  <!--Reen: (slightly relieved)That's at least something to go on.-->
                  <add_npc_line speaker="$Reen" line="30202060" delay="1s" lookat="$Dal"/>
                  <!--Dal: I'm rather content with the data we managed to gather.-->
                  <add_npc_line speaker="$Dal" line="30202163" delay="1.5s" lookat="$Reen"/>
                </do_else>
                <!--Reen: (sigh)What do you suggest we do now?-->
                <add_npc_line speaker="$Reen" line="30202061" delay="1s" lookat="$Dal"/>
                <!--Dal: The time has come to approach Scale Plate.-->
                <add_npc_line speaker="$Dal" line="30202164" delay="0.5s" lookat="$Reen"/>
                <!--Dal: (confident)We'll have a few words, learn what they desire and then leave.-->
                <add_npc_line speaker="$Dal" line="30202165" delay="0.5s" lookat="$Reen"/>
                <!--Reen: And then what?-->
                <add_npc_line speaker="$Reen" line="30202062" delay="1s" lookat="$Dal"/>
                <!--Dal: It will be up to you to achieve your goal. I can only suggest how to do it.-->
                <add_npc_line speaker="$Dal" line="30202166" delay="0.5s" lookat="$Reen"/>
                <!--Reen: I have a feeling this is going to cost me.-->
                <add_npc_line speaker="$Reen" line="30202063" delay="1s" lookat="$Dal"/>
                <!--Dal: (emphasis on IF)Everything will work out fine, if you follow my instructions.-->
                <add_npc_line speaker="$Dal" line="30202167" delay="0.5s" lookat="$Reen"/>
                <!--Dal: (upbeat)Let's go see the bad guys!-->
                <add_npc_line speaker="$Dal" line="30202168" delay="1.5s" lookat="player.entity"/>
              </actions>
              <delay exact="50ms"/>
              <actions>
                <!--Because of the line delays above, the cutscene will start before the lines are spoken, but the conversation remains active-->
                <set_value name="$LastCutsceneKey" exact="'Story_Diplomacy_Intro_5'"/>
                <set_value name="$ShotMaxDuration" exact="7s"/>
                <set_value name="$CutsceneRoom" exact="$Reen.room"/>
                <play_cutscene result="$LastCutscene" key="$LastCutsceneKey">
                  <param name="room" object="$CutsceneRoom"/>
                </play_cutscene>
              </actions>
              <cues>
                <!--TODO @Owen #important some combinations seem to break the cutscene shots-->
                <cue name="Pt5_Cutscene_Shot_Dal_Zoom">
                  <conditions>
                    <event_speak_finished actor="$Dal"/>
                    <check_value value="[30202147, 30202148, 30202149, 30202150, 30202151, 30202152].indexof.{event.param2}"/>
                  </conditions>
                  <actions>
                    <set_value name="$CutsceneEvent" exact="'ReenDal1End'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                    <set_value name="$CutsceneEvent" exact="'DalSlowZoomStart'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                  </actions>
                </cue>
                <!--After a few second, switch shot if Dal is still talking-->
                <cue name="Pt5_Cutscene_Shot_Reen_Left">
                  <conditions>
                    <event_speak_finished actor="$Dal"/>
                    <cue_is_complete cue="Pt5_Cutscene_Shot_Dal_Zoom"/>
                    <check_value value="player.age ge Pt5_Cutscene_Shot_Dal_Zoom.time + 15s and event.param2 != $LastDalIntelLine"/>
                  </conditions>
                  <actions>
                    <set_value name="$CutsceneEvent" exact="'DalSlowZoomEnd'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                    <set_value name="$CutsceneEvent" exact="'ReenLeftStart'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                  </actions>
                </cue>
                <!--Dal finishes listing of the findings. Show Reen's face.-->
                <cue name="Pt5_Cutscene_Shot_Reen_Face">
                  <conditions>
                    <event_speak_finished actor="$Dal"/>
                    <check_value value="not $LastDalIntelLine or event.param2 == $LastDalIntelLine"/>
                  </conditions>
                  <actions>
                    <set_value name="$LeftShotWaiting" exact="Pt5_Cutscene_Shot_Reen_Left.state == cuestate.waiting"/>
                    <do_if value="$LeftShotWaiting">
                      <!--If there wasn't much to say, the Reen_Left shot would not have started. Cancel the cue and signal the first shot to end.-->
                      <cancel_cue cue="Pt5_Cutscene_Shot_Reen_Left"/>
                    </do_if>
                  </actions>
                  <delay exact="0.7s"/>
                  <actions>
                    <do_if value="$LeftShotWaiting">
                      <set_value name="$CutsceneEvent" exact="'DalSlowZoomEnd'"/>
                      <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                      <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                    </do_if>
                    <do_else>
                      <set_value name="$CutsceneEvent" exact="'ReenLeftEnd'"/>
                      <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                      <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                    </do_else>
                    <set_value name="$CutsceneEvent" exact="'ReenCloseStart'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                  </actions>
                </cue>
                <cue name="Pt5_Cutscene_Shot_Dal_Face">
                  <conditions>
                    <event_speak_finished actor="$Reen"/>
                    <check_value value="event.param2 == 30202059 or event.param2 == 30202060"/>
                  </conditions>
                  <actions>
                    <set_value name="$CutsceneEvent" exact="'ReenCloseEnd'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                    <set_value name="$CutsceneEvent" exact="'DalCloseStart'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                  </actions>
                </cue>
                <cue name="Pt5_Cutscene_Shot_Reen_Right">
                  <conditions>
                    <event_speak_finished actor="$Dal"/>
                    <check_value value="event.param2 == 30202164"/>
                  </conditions>
                  <actions>
                    <set_value name="$CutsceneEvent" exact="'DalCloseEnd'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                    <set_value name="$CutsceneEvent" exact="'ReenRightStart'"/>
                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                  </actions>
                </cue>
                <cue name="Pt5_Cutscene_Dal_Leaves">
                  <conditions>
                    <check_any>
                      <event_cutscene_stopped cutscene="$LastCutscene"/>
                      <check_all>
                        <event_speak_finished actor="$Dal"/>
                        <check_value value="event.param2 == 30202167"/>
                      </check_all>
                    </check_any>
                  </conditions>
                  <delay exact="0.2s"/>
                  <actions>
                    <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                  table[                                 $requestercue = namespace,                                 $location = 'disconnect',                                 $priority = 100,                                 $debugchance = $DebugChance2,                                 $debugcaller = if $DebugChance2 == 100 then this else null]                                 ]"/>
                  </actions>
                </cue>
                <!--TODO @Owen is there a better way of resetting the lookat controller?-->
                <!--TODO @Owen clear_actor_lookat does not work-->
                <!--<cue name="Pt5_Cutscene_Reset_Actor_Lookat">
                  <conditions>
                    <event_speak_finished actor="$Dal"/>
                    <check_value value="event.param2 == 30202168"/>
                  </conditions>
                  <delay exact="1s"/>
                  <actions>
                    <clear_actor_lookat actor="$Dal"/>
                    <clear_actor_lookat actor="$Reen"/>
                  </actions>
                </cue>-->
                <cue name="Pt5_Cutscene_End">
                  <conditions>
                    <check_any>
                      <event_cutscene_stopped cutscene="$LastCutscene"/>
                      <check_all>
                        <event_speak_finished actor="$Dal"/>
                        <check_value value="event.param2 == 30202168"/>
                      </check_all>
                    </check_any>
                  </conditions>
                  <delay exact="3s"/>
                  <actions>
                    <debug_text text="player.age + ' forcing cutscene to end'" chance="$DebugChance"/>
                    <do_if value="event.name == 'event_speak_finished'">
                      <stop_cutscene cutscene="$LastCutscene"/>
                    </do_if>
                    <do_else>
                      <cancel_conversation actor="$Reen"/>
                    </do_else>
                    <set_value name="$Pt5_DalInterrupted" exact="false"/>
                  </actions>
                  <delay exact="1s"/>
                  <actions>
                    <set_objective cue="Start" step="2" action="objective.undock" updatebriefing="true"/>
                  </actions>
                  <cues>
                    <cue name="Pt5_Reen_Conversation" instantiate="true">
                      <conditions>
                        <event_conversation_started actor="$Reen"/>
                      </conditions>
                      <actions>
                        <add_npc_line speaker="$Reen" line="30202091" comment="We're counting on you."/>
                      </actions>
                    </cue>
                    <cue name="Pt5_Interrupt_Dal" instantiate="true">
                      <conditions>
                        <event_conversation_started actor="$Dal"/>
                      </conditions>
                      <actions>
                        <do_if value="$Pt5_DalInterrupted">
                          <add_npc_line speaker="$Dal" line="[30202168, 30200001].random"/>
                        </do_if>
                        <do_else>
                          <!--Dal: We're going to meet a Scale Plate lieutenant. I've been building a profile on him for a while now.-->
                          <add_npc_line speaker="$Dal" line="30202169"/>
                          <set_value name="$Pt5_DalInterrupted" exact="true"/>
                        </do_else>
                      </actions>
                    </cue>
                    <cue name="Pt5_Gather_Items_Intro" checkinterval="1s">
                      <conditions>
                        <check_value value="not player.entity.hascontext.{$Hat_Station}"/>
                      </conditions>
                      <delay exact="2s"/>
                      <actions>
                        <do_if value="$Pt5_DalInterrupted">
                          <speak actor="$Dal">
                            <text line="30202170"/>
                            <text line="30202171"/>
                            <text line="if player.entity.isfemale then 30202173 else 30202172"/>
                            <text line="if player.entity.isfemale then 30202175 else 30202174"/>
                          </speak>
                        </do_if>
                        <do_else>
                          <speak actor="$Dal">
                            <text line="30202169"/>
                            <text line="30202170"/>
                            <text line="30202171"/>
                            <text line="if player.entity.isfemale then 30202173 else 30202172"/>
                            <text line="if player.entity.isfemale then 30202175 else 30202174"/>
                          </speak>
                        </do_else>
                        <cancel_cue cue="Pt5_Interrupt_Dal"/>
                      </actions>
                      <cues>
                        <cue name="Pt5_Gather_Items">
                          <conditions>
                            <event_speak_finished actor="$Dal"/>
                            <check_value value="event.param2 == 30202169 or event.param2 == 30202170"/>
                          </conditions>
                          <actions>
                            <set_value name="$CollectInventoryStartStep" exact="2"/>
                            <!--TODO @Owen #important-->
                            <set_value name="$InventoryTable" exact="table[{ware.inv_magneticmaterial} = 1,]"/>
                            <update_mission cue="Start" name="{30202,1061}" description="{30202,1063}"/>
                          </actions>
                          <cues>
                            <cue name="Pt5_Gather_Items_Lodestone_DEBUG">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <add_inventory entity="player.entity" ware="ware.inv_magneticmaterial" exact="1"/>
                              </actions>
                            </cue>
                            <cue name="Pt5_Gather_Items_Ref" ref="md.RML_Collect_Inventory.CollectInventory">
                              <param name="EndSignalCue" value="Pt5_Gather_Items_End"/>
                              <param name="MissionCue" value="Start"/>
                              <param name="StartStep" value="$CollectInventoryStartStep"/>
                              <param name="Objective" value="objective.acquire_ware"/>
                              <param name="WaresParam" value="$InventoryTable"/>
                              <param name="DebugChance" value="$DebugChance"/>
                            </cue>
                            <cue name="PATCH_Pt5_Retrigger_Gather_Items_End" onfail="cancel">
                              <conditions>
                                <check_value value="Pt5_Gather_Items_End.state == cuestate.complete and Pt5_Meeting_Cutscene.state == cuestate.waiting and not $DockArea"/>
                              </conditions>
                              <actions>
                                <debug_text text="'Reattempt to find suitable station'" filter="savegame"/>
                                <!--Remove the invincibility request for scale plate station-->
                                <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                                  <param name="Object" value="$ScalePlateStation"/>
                                  <param name="RequesterCue" value="Pt5_The_Meeting"/>
                                  <param name="DebugChance" value="$DebugChance"/>
                                </run_actions>
                                <reset_cue cue="Pt5_Gather_Items_End"/>
                                <reset_cue cue="Pt5_Dock_At_Scale_Plate"/>
                              </actions>
                              <delay exact="1s"/>
                              <actions>
                                <!--Have Pt5_Gather_Items_End retrigger to find a suitable station again-->
                                <signal_cue cue="Pt5_Gather_Items_End"/>
                              </actions>
                            </cue>
                            <cue name="Pt5_Gather_Items_End" version="3">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <delay exact="2s"/>
                              <actions>
                                <!--TODO @Owen #important dockarea_arg_m_station_01_lowtech_macro has baked in 'props' that get in the way of the cutscene-->
                                <set_value name="$ScalePlateStation" exact="null"/>
                                <find_station_by_true_owner name="$ScalePlateStations" faction="faction.scaleplate" sortbygatedistanceto="$Hat_Station" space="player.galaxy" multiple="true">
                                  <match_content macro="[macro.dockarea_arg_m_station_01_lowtech_macro, macro.dockarea_arg_m_station_01_macro, macro.dockarea_arg_m_station_02_macro]" checkoperational="true"/>
                                </find_station_by_true_owner>
                                <do_for_each name="$PotentialScalePlateStation" in="$ScalePlateStations" counter="$i">
                                  <!--Don't pick one too close unless it's the last choice-->
                                  <do_if value="$PotentialScalePlateStation.attention lt attention.nearby or $i == $ScalePlateStations.count">
                                    <set_value name="$ScalePlateStation" exact="$PotentialScalePlateStation"/>
                                    <break/>
                                  </do_if>
                                </do_for_each>
                                <do_if value="not $ScalePlateStation">
                                  <!--TODO @Owen #important make sure the player can't trigger this too often. Maybe just select another random non-scalesplate station e.g. Teladi-->
                                  <find_sector name="$FallbackScalePlateSector" macro="macro.cluster_44_sector001_macro"/>
                                  <create_station name="$ScalePlateStation" macro="macro.station_gen_piratebase_base_01_macro" owner="faction.scaleplate" sector="$FallbackScalePlateSector" state="componentstate.operational" constructionplan="'gen_piratedock'">
                                    <safepos x="200km" z="-145km" space="$FallbackScalePlateSector"/>
                                  </create_station>
                                  <do_if value="$ScalePlateStation">
                                    <signal_objects object="player.galaxy" param="'init station'" param2="$ScalePlateStation" param3="false"/>
                                  </do_if>
                                </do_if>
                                <assert value="$ScalePlateStation.exists" text="'Scale Plate Station does not exist [Owen]'"/>
                                <do_if value="$ScalePlateStation">
                                  <!--Set scale plate station to invincible-->
                                  <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                                    <param name="Object" value="$ScalePlateStation"/>
                                    <param name="RequesterCue" value="Pt5_The_Meeting"/>
                                    <param name="DebugChance" value="$DebugChance"/>
                                  </run_actions>
                                  <find_object_component name="$DockArea" macro="[macro.dockarea_arg_m_station_01_lowtech_macro, macro.dockarea_arg_m_station_01_macro, macro.dockarea_arg_m_station_02_macro]" object="$ScalePlateStation"/>
                                  <set_value name="$IsLargeDockArea" exact="$DockArea.macro.ismacro.{macro.dockarea_arg_m_station_02_macro}"/>
                                  <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                               table[                                               $requestercue = namespace,                                               $location = $DockArea,                                               $priority = 100,                                               $position = if $IsLargeDockArea then position.[-93.2m, 69.7m, 39.8m] else position.[-46.4m, 59.7m, 90.7m],                                               $rotation = if $IsLargeDockArea then rotation.[70deg, 0deg, 0deg] else rotation.[-26deg, 0deg, 0deg],                                               $debugchance = $DebugChance2,                                               $debugcaller = if $DebugChance2 == 100 then this else null]                                               ]"/>
                                  <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Kat,                                               table[                                               $requestercue = namespace,                                               $location = $DockArea,                                               $priority = 100,                                               $position = if $IsLargeDockArea then position.[-90.77m, 69.7m, 39.6m] else position.[-47.3m, 59.7m, 92.5m],                                               $rotation = if $IsLargeDockArea then rotation.[5deg, 0deg, 0deg] else rotation.[161deg, 0deg, 0deg],                                               $debugchance = $DebugChance2,                                               $debugcaller = if $DebugChance2 == 100 then this else null]                                               ]"/>
                                  <signal_cue cue="Pt5_Dock_At_Scale_Plate"/>
                                </do_if>
                                <do_else>
                                  <!--TODO @Owen #important fallback for station not existing-->
                                </do_else>
                              </actions>
                              <patch sinceversion="3" state="complete">
                                <do_if value="Pt5_Meeting_Cutscene.state == cuestate.waiting and not $ScalePlateStation.exists">
                                  <debug_text text="'Scale plate station no longer exists. Resetting to find again'" filter="savegame"/>
                                  <reset_cue cue="Pt5_Dock_At_Scale_Plate"/>
                                  <reset_cue cue="Pt5_Gather_Items_End"/>
                                  <signal_cue cue="Pt5_Gather_Items_End" check="false"/>
                                </do_if>
                              </patch>
                            </cue>
                            <cue name="Pt5_Dock_At_Scale_Plate">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <speak actor="$Dal">
                                  <text line="30202176" comment="We're almost ready to meet the Scale Plate lieutenant."/>
                                  <text line="30202177" comment="Come speak to me on the station."/>
                                </speak>
                              </actions>
                              <cues>
                                <cue name="Pt5_Dock_At_Scale_Plate_Objective">
                                  <conditions>
                                    <event_speak_finished actor="$Dal" line="30202176"/>
                                  </conditions>
                                  <actions>
                                    <set_objective cue="Start" step="3" action="objective.talkto" object="$Dal" updatebriefing="true"/>
                                  </actions>
                                </cue>
                                <cue name="Pt5_Clear_Cutscene_Props" instantiate="true">
                                  <conditions>
                                    <event_object_changed_attention object="$DockArea"/>
                                    <check_value value="event.param ge attention.visible"/>
                                  </conditions>
                                  <delay exact="1ms"/>
                                  <actions>
                                    <find_object_component name="$Props" object="$DockArea" macro="[macro.props_01_dockarea_arg_m_station_01_macro, macro.props_02_dockarea_arg_m_station_01_lowtech_macro]" multiple="true"/>
                                    <do_for_each name="$Prop" in="$Props">
                                      <debug_text text="'Removing prop ' + $Prop + ' ' + $Prop.knownname + ' which can get in the way of the cutscene on ' + $DockArea + ' ' + $DockArea.knownname" chance="$DebugChance"/>
                                      <destroy_object object="$Prop"/>
                                    </do_for_each>
                                  </actions>
                                </cue>
                                <cue name="Pt5_Meeting_Cutscene">
                                  <conditions>
                                    <event_conversation_started actor="$Dal"/>
                                    <check_value value="player.entity.distanceto.{$Dal} lt 5m"/>
                                  </conditions>
                                  <!--Actions which NEED to be instant-->
                                  <actions>
                                    <set_value name="$FirstShotMaxTime" exact="player.age + 10s"/>
                                    <cancel_cue cue="Pt5_Clear_Cutscene_Props"/>
                                    <add_npc_line speaker="$Dal" line="30220103" comment="You made it." delay="0.2s"/>
                                  </actions>
                                  <delay exact="2.2s"/>
                                  <actions>
                                    <set_value name="$LastCutsceneKey" exact="'Story_Diplomacy_Intro_5b'"/>
                                    <!--TODO @Owen HACK - Just find the M dockingbay instead of by macro?-->
                                    <find_object_component name="$CutsceneRoom" object="$DockArea" macro="[macro.room_arg_m_station_01_macro, macro.room_arg_m_station_01_lowtech_macro]"/>
                                    <play_cutscene result="$LastCutscene" key="$LastCutsceneKey">
                                      <param name="room" object="$CutsceneRoom"/>
                                      <param name="teladi" object="$ScalePlateBoss"/>
                                    </play_cutscene>
                                  </actions>
                                  <delay exact="50ms"/>
                                  <actions>
                                    <set_value name="$DebugChance" exact="100"/>
                                    <cancel_cue cue="Pt5_Interrupt_Dal"/>
                                    <!--make sure that the actors are positioned for the cutscene-->
                                    <signal_objects object="$Kat" param="'placement_definitions_updated'" delay="1s"/>
                                    <signal_objects object="$Dal" param="'placement_definitions_updated'"/>
                                    <get_floor_position object="$DockArea">
                                      <position value="position.[-45.46m, 59.761097m, 92.2m]" object="$DockArea"/>
                                      <result position="$FloorPos" context="$FloorContext" room="$PlacementRoom" tags="$FloorTags"/>
                                    </get_floor_position>
                                    <debug_text text="$FloorPos"/>
                                    <debug_text text="$PlacementRoom + ' ' + $PlacementRoom.macro"/>
                                    <do_if value="$FloorPos and $FloorContext and $PlacementRoom">
                                      <add_actor_to_room actor="player.entity" object="$PlacementRoom">
                                        <position object="$FloorContext" x="$FloorPos.x" y="$FloorPos.y + 1.8m" z="$FloorPos.z" space="$PlacementRoom"/>
                                        <rotation value="rotation.[-112.620186deg, -3.597732deg, -0.000000deg]"/>
                                      </add_actor_to_room>
                                    </do_if>
                                  </actions>
                                  <cues>
                                    <cue name="Pt5_Meeting_Cutscene_Dal_Conv_End">
                                      <conditions>
                                        <event_conversation_finished actor="$Dal"/>
                                      </conditions>
                                      <actions>
                                        <set_value name="$HasInventory" exact="true"/>
                                        <do_for_each name="$InvWare" valuename="$InvAmount" in="$InventoryTable">
                                          <do_if value="player.entity.inventory.{$InvWare}.count lt $InvAmount">
                                            <set_value name="$HasInventory" exact="false"/>
                                            <break/>
                                          </do_if>
                                        </do_for_each>
                                        <do_if value="$HasInventory">
                                          <speak actor="$Dal" line="30202180" delay="0.7s" comment="Good work. Let's hope my intuition was on the money."/>
                                        </do_if>
                                        <do_else>
                                          <speak actor="$Dal" delay="0.7s" line="if player.entity.isfemale then 30202179 else 30202178" comment="Hmm. I see you couldn't gather everything. No matter."/>
                                        </do_else>
                                      </actions>
                                    </cue>
                                    <cue name="Pt5_Meeting_Cutscene_Dal_Intro_End">
                                      <conditions>
                                        <event_speak_finished actor="$Dal"/>
                                        <check_value value="event.param2 == 30202178 or event.param2 == 30202179 or event.param2 == 30202180"/>
                                      </conditions>
                                      <actions>
                                        <speak actor="$Dal" line="30202176" comment="We're almost ready to meet the Scale Plate lieutenant."/>
                                      </actions>
                                    </cue>
                                    <cue name="Pt5_Meeting_Cutscene_Second_Shot" checkinterval="50ms">
                                      <conditions>
                                        <check_age min="$FirstShotMaxTime"/>
                                      </conditions>
                                      <actions>
                                        <set_value name="$CutsceneEvent" exact="'PanDownEnd'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$CutsceneEvent" exact="'TheTriforceStart'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                      </actions>
                                    </cue>
                                    <cue name="Pt5_Meeting_Cutscene_Teladi_Spotted">
                                      <conditions>
                                        <event_speak_finished actor="$Dal"/>
                                        <check_value value="event.param2 == 30202176"/>
                                      </conditions>
                                      <actions>
                                        <set_value name="$FirstShotMaxTime" exact="player.age"/>
                                        <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $ScalePlateBoss,                                               table[                                               $requestercue = namespace,                                               $location = $DockArea,                                               $priority = 100,                                               $position = if $IsLargeDockArea then position.[-90.77m, 69.7m, 39.6m] else position.[-24.6m, 59.7m, 91.5m],                                               $rotation = if $IsLargeDockArea then rotation.[5deg, 0deg, 0deg] else rotation.[-83.4deg, 0deg, 0.deg],                                               $debugchance = $DebugChance2,                                               $debugcaller = if $DebugChance2 == 100 then this else null]                                               ]"/>
                                        <start_actor_sequence actor="$Kat" type="'turnleft90'" transition="false" behavior="'generic'"/>
                                      </actions>
                                      <delay exact="1.5s"/>
                                      <actions>
                                        <speak actor="$Kat" line="3003" comment="Captain."/>
                                      </actions>
                                      <delay exact="1.5s"/>
                                      <actions>
                                        <start_actor_sequence actor="$Dal" type="'turnright90'" transition="false" behavior="'generic'"/>
                                      </actions>
                                      <delay exact="0.1s"/>
                                      <actions>
                                        <!--TODO @Owen add turn animations to player character templates and trigger-->
                                        <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $ScalePlateBoss,                                               table[                                               $requestercue = namespace,                                               $location = $DockArea,                                               $priority = 100,                                               $position = if $IsLargeDockArea then position.[-90.77m, 69.7m, 39.6m] else position.[-42.5m, 59.7m, 91.3m],                                               $rotation = if $IsLargeDockArea then rotation.[5deg, 0deg, 0deg] else rotation.[-88deg, 0deg, 0.deg],                                               $debugchance = $DebugChance2,                                               $debugcaller = if $DebugChance2 == 100 then this else null]                                               ]"/>
                                      </actions>
                                      <delay exact="1s"/>
                                      <actions>
                                        <set_value name="$CutsceneEvent" exact="'TheTriforceEnd'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$CutsceneEvent" exact="'TeladiFollowStart'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <speak actor="$Dal" line="30202181" delay="0.2s" comment="This is him. Be on your best behaviour."/>
                                      </actions>
                                      <delay exact="3s"/>
                                      <actions>
                                        <set_value name="$CutsceneEvent" exact="'TeladiFollowEnd'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$CutsceneEvent" exact="'PanDown2Start'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                      </actions>
                                      <cues>
                                        <cue name="Pt5_Cutscene_Stop_Turn_Dal" instantiate="true">
                                          <conditions>
                                            <event_character_animation_finished object="$Dal" id="'anim_turnright90_01'"/>
                                          </conditions>
                                          <actions>
                                            <start_actor_sequence actor="$Dal" type="'idle'" transition="false" behavior="'generic'"/>
                                            <set_actor_lookat actor="$Dal" component="$ScalePlateBoss"/>
                                          </actions>
                                        </cue>
                                        <cue name="Pt5_Cutscene_Stop_Turn_Kat">
                                          <conditions>
                                            <event_character_animation_finished object="$Kat" id="'anim_turnleft90_01'"/>
                                          </conditions>
                                          <actions>
                                            <start_actor_sequence actor="$Kat" type="'idle'" transition="false" behavior="'generic'"/>
                                            <set_actor_lookat actor="$Kat" component="$ScalePlateBoss"/>
                                          </actions>
                                        </cue>
                                        <cue name="Pt5_Cutscene_Final_Conv">
                                          <conditions>
                                            <event_speak_finished actor="$Dal" line="30202181"/>
                                          </conditions>
                                          <cues>
                                            <cue name="Pt5_Cutscene_Final_Conv_Check" checkinterval="50ms">
                                              <conditions>
                                                <check_value value="not $ScalePlateBoss.iswalking or player.age gt Pt5_Cutscene_Final_Conv.time + 5s"/>
                                              </conditions>
                                              <actions>
                                                <set_value name="$CutsceneEvent" exact="'PanDown2End'"/>
                                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                                <set_value name="$CutsceneEvent" exact="'SideTalkStart'"/>
                                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                              </actions>
                                              <delay exact="1s"/>
                                              <actions>
                                                <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[ $name = '$Diplomacy_Intro_ScalePlate_Meeting', $actors = table[$Dal = $Dal, $Teladi = $ScalePlateBoss ], $abortcallbackcue = Pt5_Cutscene_Walk_Away, $debugchance = $DebugChance ]"/>
                                              </actions>
                                            </cue>
                                            <cue name="Pt5_Cutscene_Walk_Away" version="2">
                                              <conditions>
                                                <check_any>
                                                  <event_speak_finished actor="$Dal" line="30202228"/>
                                                  <event_cue_signalled/>
                                                </check_any>
                                              </conditions>
                                              <delay exact="1.5s"/>
                                              <actions>
                                                <!--TODO @Owen ensure that they despawn at the same location-->
                                                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                                          table[                                                         $requestercue = namespace,                                                         $location = 'disconnect',                                                         $priority = 100,                                                         $debugchance = $DebugChance2,                                                         $debugcaller = if $DebugChance2 == 100 then this else null]                                                         ]"/>
                                                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $ScalePlateBoss,                                                          table[                                                         $requestercue = namespace,                                                         $location = 'disconnect',                                                         $priority = 100,                                                         $debugchance = $DebugChance2,                                                         $debugcaller = if $DebugChance2 == 100 then this else null]                                                         ]"/>
                                                <clear_actor_lookat actor="$Dal"/>
                                                <clear_actor_lookat actor="$ScalePlateBoss"/>
                                              </actions>
                                              <delay exact="4s"/>
                                              <actions>
                                                <set_value name="$CutsceneEvent" exact="'SideTalkEnd'"/>
                                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                                <set_actor_lookat actor="$Kat" component="player.entity"/>
                                                <speak actor="$Kat">
                                                  <text line="if player.entity.isfemale then 30202053 else 30202052"/>
                                                  <text line="30202054"/>
                                                </speak>
                                              </actions>
                                              <patch sinceversion="2" state="waiting">
                                                <do_if value="Pt5_Cutscene_Final_Conv_Check.state == cuestate.complete">
                                                  <debug_text text="'Having Dal say his final line during the Teladi meeting'" filter="savegame"/>
                                                  <speak actor="$Dal" line="30202228"/>
                                                </do_if>
                                              </patch>
                                              <cues>
                                                <cue name="Pt5_End">
                                                  <conditions>
                                                    <event_speak_finished actor="$Kat"/>
                                                    <check_value value="event.param2 == 30202052 or event.param2 == 30202053"/>
                                                  </conditions>
                                                  <actions>
                                                    <clear_actor_lookat actor="$Kat"/>
                                                    <!--Remove the invincibility request for scale plate station-->
                                                    <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                                                      <param name="Object" value="$ScalePlateStation"/>
                                                      <param name="RequesterCue" value="Pt5_The_Meeting"/>
                                                      <param name="DebugChance" value="$DebugChance"/>
                                                    </run_actions>
                                                    <!--End of part 5-->
                                                    <signal_cue cue="Pt6_Drone_Cleanup"/>
                                                    <cancel_cue cue="Pt5_The_Meeting"/>
                                                  </actions>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Part 6 - Drone Cleanup-->
        <cue name="Pt6_Force">
          <force name="Plot_Diplomat_Pt6">
            <signal_cue_instantly cue="Force_Part" param="Pt6_Drone_Cleanup"/>
          </force>
        </cue>
        <cue name="Pt6_Drone_Cleanup">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <create_mission cue="Start" abortable="false" type="missiontype.plot" name="{30202,1061}" description="{30202,1064}" difficulty="level.easy" faction="faction.hatikvah"/>
              <include_actions ref="Create_Reen_Office"/>
              <set_entity_traits entity="$Reen" subtitlename="true"/>
              <set_entity_traits entity="$Dal" subtitlename="true"/>
              <set_entity_traits entity="$Kat" subtitlename="true"/>
              <set_entity_traits entity="$Cline" subtitlename="true"/>
              <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                  table[                 $requestercue = namespace,                 $location = $Reen_Office_Room,                 $priority = 100,                 $slottags = [tag.sit],                 $debugchance = $DebugChance2,                 $debugcaller = if $DebugChance2 == 100 then this else null]                 ]"/>
            </do_if>
            <set_value name="$TravelDistance" exact="[player.entity.gatedistance.{$Hat_Station}, 1].max"/>
            <!--Handle Kat's custom conversation while on the Scale Plate station-->
            <set_value name="$SuppressKatConv" exact="true"/>
          </actions>
          <delay exact="2s"/>
          <actions>
            <set_value name="$ReenTalkStep" exact="1"/>
            <!--TODO @Owen this probably should be update_mission. change and verify-->
            <create_mission cue="Start" abortable="false" type="missiontype.plot" name="{30202,1061}" description="{30202,1064}" difficulty="level.easy" faction="faction.hatikvah" icon="'briefing_reen_omara_01'" iconcaption="$Reen.knownname"/>
            <set_objective cue="Start" step="$ReenTalkStep" action="objective.talkto" object="$Reen" updatebriefing="true"/>
          </actions>
          <cues>
            <cue name="Pt6_Kat_Conv_Handler" instantiate="true">
              <conditions>
                <event_conversation_started actor="$Kat"/>
              </conditions>
              <actions>
                <!--TODO @Owen why does she sometimes have a default handler. plotstationprops.xml.gz-->
                <add_npc_line speaker="$Kat" line="if player.entity.isfemale then 30202056 else 30202055"/>
              </actions>
            </cue>
            <cue name="Pt6_ScalePlate_Attack_Entered_Gate">
              <conditions>
                <event_player_entered_gate/>
                <!--Check the player is travelling towards the station-->
                <check_value value="event.param2.gatedistance.{$Hat_Station} lt $TravelDistance"/>
              </conditions>
              <actions>
                <signal_cue_instantly cue="Pt6_ScalePlate_Attack" param="event.param2"/>
              </actions>
            </cue>
            <!--TODO @Owen #important sector highway-->
            <!--event.param exit gate to stage the attack around-->
            <cue name="Pt6_ScalePlate_Attack">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <set_value name="$SuppressKatConv" exact="false"/>
                <create_group groupname="$ScalePlateFighters"/>
                <create_group groupname="$HatikvahShips"/>
                <set_value name="$ExitGate" exact="event.param"/>
                <set_value name="$ExitGateSector" exact="$ExitGate.sector"/>
                <get_safe_pos result="$ResultSafePos" object="$ExitGate" radius="8km" x="5km" y="1km" z="3km" direction="quadrant.left" direction2="quadrant.back" allowyaxis="false" sector="$ExitGateSector"/>
                <do_all exact="2">
                  <create_ship groupname="$HatikvahShips" capturable="false" sector="$ExitGateSector">
                    <select faction="faction.hatikvah" tags="[tag.trader]" size="class.ship_m"/>
                    <loadout>
                      <level min="0.6" max="0.7"/>
                    </loadout>
                    <owner exact="faction.hatikvah" overridenpc="true"/>
                    <safepos value="$ResultSafePos" z="-2km" max="500m"/>
                  </create_ship>
                </do_all>
                <do_all exact="2">
                  <create_ship groupname="$ScalePlateFighters" capturable="true" sector="$ExitGateSector">
                    <select faction="faction.scaleplate" tags="[tag.fighter, tag.light]" size="class.ship_s"/>
                    <loadout>
                      <level min="0.2" max="0.4"/>
                    </loadout>
                    <owner exact="faction.scaleplate" overridenpc="true"/>
                    <safepos value="$ResultSafePos" z="2km" max="500m"/>
                  </create_ship>
                </do_all>
                <do_for_each name="$HatShip" in="$HatikvahShips">
                  <!--<create_order object="$HatShip" name="$DockOrder" id="'DockAndWait'" immediate="true">
                    <param name="destination" value="$Hat_Station"/>
                  </create_order>-->
                  <set_relation_boost object="$HatShip" faction="faction.scaleplate" silent="true" decay="0.00000001" value="-0.7"/>
                  <create_order object="$HatShip" id="'Attack'">
                    <param name="primarytarget" value="$ScalePlateFighters.random"/>
                    <param name="pursuetargets" value="true"/>
                  </create_order>
                </do_for_each>
                <do_for_each name="$ScalePlateShip" in="$ScalePlateFighters">
                  <set_relation_boost object="$ScalePlateShip" faction="faction.player" silent="true" decay="0.00000001" value="-0.7"/>
                  <set_relation_boost object="$ScalePlateShip" faction="faction.hatikvah" silent="true" decay="0.00000001" value="-0.7"/>
                  <create_order object="$ScalePlateShip" id="'Attack'">
                    <param name="primarytarget" value="$HatikvahShips.random"/>
                    <param name="pursuetargets" value="true"/>
                  </create_order>
                </do_for_each>
                <set_value name="$ReenTalkStep" exact="2"/>
                <update_mission cue="Start">
                  <briefing>
                    <objective step="$ReenTalkStep" action="objective.talkto" object="$Reen"/>
                  </briefing>
                </update_mission>
              </actions>
              <delay exact="7s"/>
              <actions>
                <!--
                This is Reen.
                I'll send you data on where we need a hand.-->
                <speak actor="$Reen" line="[30202052, 30202115]" priority="100" caninterrupt="false"/>
              </actions>
              <cues>
                <cue name="Pt6_ScalePlate_Attack_Objective">
                  <conditions>
                    <event_speak_finished actor="$Reen"/>
                  </conditions>
                  <delay exact="0.5s"/>
                  <actions>
                    <set_objective cue="Start" step="1" action="objective.defend" text="{30202,2010}" group="$HatikvahShips" updatebriefing="true"/>
                  </actions>
                  <delay exact="2.5s"/>
                  <actions>
                    <speak actor="$HatikvahShips.random.pilot" line="[10601, 10602].random" broadcast="true"/>
                  </actions>
                </cue>
                <cue name="Pt6_Hatikvah_ChangedOwner" instantiate="true">
                  <conditions>
                    <event_object_changed_true_owner group="$HatikvahShips"/>
                  </conditions>
                  <actions>
                    <remove_from_group group="$HatikvahShips" object="event.object"/>
                    <do_if value="$HatikvahShips.count == 0">
                      <set_objective_from_briefing cue="Start" step="2"/>
                    </do_if>
                  </actions>
                </cue>
                <cue name="Pt6_ScalePlate_ChangedOwner" instantiate="true">
                  <conditions>
                    <event_object_changed_true_owner group="$ScalePlateFighters"/>
                  </conditions>
                  <actions>
                    <remove_from_group group="$ScalePlateFighters" object="event.object"/>
                    <do_if value="$ScalePlateFighters.count == 0">
                      <set_objective_from_briefing cue="Start" step="2"/>
                    </do_if>
                  </actions>
                </cue>
                <!--TODO @Owen have some feedback on the result / relation boost-->
                <cue name="Pt6_ScalePlate_Attack_Hatikvah_Destroyed">
                  <conditions>
                    <event_object_destroyed group="$HatikvahShips"/>
                    <check_value value="$HatikvahShips.count le 1" comment="killed ship still in group"/>
                  </conditions>
                  <actions>
                    <!--TODO @Owen make it look like a mission was failed before moving back to the Talk To objective-->
                    <set_objective_from_briefing cue="Start" step="2"/>
                  </actions>
                </cue>
                <cue name="Pt6_ScalePlate_Attack_ScalePlate_Destroyed">
                  <conditions>
                    <event_object_destroyed group="$ScalePlateFighters"/>
                    <check_value value="$ScalePlateFighters.count le 1" comment="killed ship still in group"/>
                  </conditions>
                  <delay exact="2s"/>
                  <actions>
                    <do_if value="$HatikvahShips.count">
                      <speak actor="$HatikvahShips.random.pilot" line="2111"/>
                    </do_if>
                  </actions>
                  <delay exact="3s"/>
                  <actions>
                    <set_objective_from_briefing cue="Start" step="2"/>
                  </actions>
                </cue>
                <cue name="Pt6_ScalePlate_Attack_Player_Left">
                  <conditions>
                    <event_object_changed_sector object="player.entity"/>
                    <check_value value="event.param != $ExitGateSector"/>
                  </conditions>
                  <delay exact="3s"/>
                  <actions>
                    <set_objective_from_briefing cue="Start" step="2"/>
                  </actions>
                </cue>
              </cues>
            </cue>
            <cue name="Pt6_ReenNear" checkinterval="50ms">
              <conditions>
                <check_value value="player.room == $Reen.room and player.entity.distanceto.{$Reen} lt 6m"/>
              </conditions>
              <actions>
                <speak actor="$Reen" line="if player.entity.isfemale then 30202090 else 30202089"/>
              </actions>
            </cue>
            <cue name="Pt6_ReenConversation">
              <conditions>
                <event_conversation_started actor="$Reen"/>
                <check_value value="player.room == $Reen.room"/>
              </conditions>
              <actions>
                <cancel_cue cue="Pt6_ScalePlate_Attack"/>
                <!--TODO @Owen Something for Reen to look at during Dals comm conversation-->
                <add_npc_line speaker="$Reen" line="30202064"/>
                <add_npc_line speaker="$Dal" line="30202184"/>
                <add_npc_line speaker="$Dal" line="30202185"/>
                <add_npc_line speaker="$Reen" line="30202065"/>
                <add_npc_line speaker="$Dal" line="30202186"/>
                <add_npc_line speaker="$Reen" line="30202066"/>
                <add_npc_line speaker="$Dal" line="30202187"/>
                <add_npc_line speaker="$Dal" line="30202188"/>
              </actions>
              <cues>
                <!--Second conversation to allow Dal to disappear of the monitor-->
                <cue name="Pt6_ReenConversation2">
                  <conditions>
                    <event_conversation_finished actor="$Reen"/>
                  </conditions>
                  <actions>
                    <start_conversation actor="$Reen" conversation="pt6_reen_conv2" priority="100"/>
                    <clear_actor_lookat actor="$Reen"/>
                  </actions>
                </cue>
                <cue name="Pt6_ReenConversation2_Started">
                  <conditions>
                    <event_conversation_started actor="$Reen" conversation="pt6_reen_conv2"/>
                  </conditions>
                  <actions>
                    <add_npc_line speaker="$Reen" line="30202067" lookat="player.entity"/>
                    <add_npc_line speaker="$Reen" line="30202068" delay="1.5s"/>
                    <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202070 else 30202069"/>
                    <add_npc_line speaker="$Reen" line="30202071"/>
                    <add_npc_line speaker="$Reen" line="30202072"/>
                    <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202074 else 30202073" delay="2s"/>
                    <add_npc_line speaker="$Reen" line="30202075" delay="1s"/>
                    <add_npc_line speaker="$Reen" line="30202076" delay="0.5s"/>
                    <add_npc_line speaker="$Reen" line="30202077" delay="0.3s"/>
                  </actions>
                </cue>
                <cue name="Pt6_Create_Drones">
                  <conditions>
                    <event_conversation_finished actor="$Reen"/>
                    <check_value value="Pt6_ReenConversation2_Started.state == cuestate.complete and player.age gt Pt6_ReenConversation2_Started.time + 1s"/>
                  </conditions>
                  <delay exact="1s"/>
                  <actions>
                    <reward_player money="400000Cr"/>
                    <set_value name="$StashSector" exact="$Hat_Station.sector"/>
                    <get_safe_pos result="$StashSafePos" sector="$StashSector" radius="15km" min="130km" max="170km"/>
                    <set_value name="$StashSafePos" exact="position.[$StashSafePos.x, [-5km, -2km, 2km, 5km].random, $StashSafePos.z]"/>
                    <create_group groupname="$DroneGroup"/>
                    <set_value name="$DroneCount" exact="4"/>
                    <set_value name="$LeadDrone" exact="null"/>
                    <do_all exact="$DroneCount" counter="$i">
                      <create_ship name="$Drone" groupname="$DroneGroup" capturable="false" macro="macro.ship_gen_s_fightingdrone_01_a_macro" zone="player.zone">
                        <owner exact="faction.hatikvah" overridenpc="true"/>
                        <pilot ref="drone_entity_generic"/>
                        <safepos value="$StashSafePos" space="$StashSector" max="1km"/>
                      </create_ship>
                      <do_if value="$Drone">
                        <do_if value="$LeadDrone">
                          <set_object_commander object="$Drone" commander="$LeadDrone"/>
                        </do_if>
                        <do_else>
                          <set_value name="$LeadDrone" exact="$Drone"/>
                        </do_else>
                        <create_order object="$Drone" id="'Patrol'" default="true">
                          <param name="space" value="$StashSector"/>
                        </create_order>
                      </do_if>
                    </do_all>
                  </actions>
                  <cues>
                    <cue name="Pt6_Drones_Created">
                      <conditions>
                        <event_cue_completed cue="Pt6_Create_Drones"/>
                      </conditions>
                      <actions>
                        <create_group groupname="$TargetStashGroup"/>
                        <create_group groupname="$DistractedDronesGroup"/>
                        <set_value name="$LastWingDroneDistracted" exact="null"/>
                        <set_value name="$SpawnedStashes" exact="0"/>
                        <set_value name="$DestroyedStashes" exact="0"/>
                        <set_value name="$PlayerAttackedDrone" exact="false"/>
                        <set_value name="$MoveOrders" exact="[]"/>
                        <update_mission cue="Start" name="{30202,1071}" description="{30202,1072}"/>
                      </actions>
                      <cues>
                        <cue name="Pt6_Drone_Behaviour">
                          <actions>
                            <clear_list list="$MoveOrders"/>
                            <clear_group group="$TargetStashGroup"/>
                            <do_if value="$DroneGroup.count and $DroneGroup.count != $DistractedDronesGroup.count">
                              <do_if value="$SpawnedStashes lt 3">
                                <set_value name="$SpawnedStashes" operation="add"/>
                                <!--create a new stash for the drones to go after-->
                                <!--Take the sector position of a drone as the base for the stash position-->
                                <set_value name="$PositionDrone" exact="null"/>
                                <do_all exact="$DroneGroup.count" counter="$i">
                                  <do_if value="not $DistractedDronesGroup.indexof.{$DroneGroup.{$i}}">
                                    <do_if value="$DroneGroup.{$i}.sector == $StashSector">
                                      <set_value name="$PositionDrone" exact="$DroneGroup.{$i}"/>
                                      <break/>
                                    </do_if>
                                  </do_if>
                                </do_all>
                                <do_if value="$PositionDrone">
                                  <create_position name="$StashPosition" object="$PositionDrone" space="$StashSector"/>
                                  <set_value name="$Random_X" min="10km" max="15km"/>
                                  <set_value name="$Random_Z" min="10km" max="15km"/>
                                  <set_value name="$StashPosition" exact="position.[                                              if $StashPosition.x gt 0 then ($StashPosition.x + $Random_X) else ($StashPosition.x - $Random_X),                                              $StashPosition.y + 1km,                                              if $StashPosition.z gt 0 then ($StashPosition.z + $Random_Z) else ($StashPosition.z - $Random_Z)]"/>
                                </do_if>
                                <do_else>
                                  <create_position name="$StashPosition" min="100km" max="120km" space="$StashSector"/>
                                  <set_value name="$StashPosition" exact="position.[$StashPosition.x, [5km, 3km, -3km, -5km].random, $StashPosition.z]"/>
                                </do_else>
                                <remove_value name="$PositionDrone"/>
                                <remove_value name="$Random_X"/>
                                <remove_value name="$Random_Z"/>
                                <!--TODO @Owen #important what wares are in the lockbox. what macro-->
                                <!--TODO @Owen #important some cargo crates too?-->
                                <create_lockbox name="$StashLockbox" groupname="$TargetStashGroup" macro="macro.sm_gen_lockbox_rare_01_macro" sector="$StashSector">
                                  <safepos value="$StashPosition" space="$StashSector"/>
                                </create_lockbox>
                                <add_cargo object="$StashLockbox" ware="ware.inv_hallucinogenics" exact="12"/>
                                <!--TODO @Owen should the drone commander be sent to the target with the others following?-->
                                <do_for_each name="$Drone" in="$DroneGroup">
                                  <do_if value="not $DistractedDronesGroup.indexof.{$Drone}">
                                    <!--Pick a primary target at random and have the others be secondary-->
                                    <set_value name="$PrimaryTarget" exact="$TargetStashGroup.random"/>
                                    <set_value name="$SecondaryTargets" exact="$TargetStashGroup.list"/>
                                    <remove_from_list name="$SecondaryTargets" exact="$PrimaryTarget"/>
                                    <create_order object="$Drone" id="'Attack'">
                                      <param name="primarytarget" value="$PrimaryTarget"/>
                                      <param name="secondarytargets" value="$SecondaryTargets"/>
                                      <param name="checkrelation" value="false"/>
                                      <param name="allowothertargets" value="false"/>
                                      <param name="debugchance" value="$DebugChance"/>
                                    </create_order>
                                  </do_if>
                                </do_for_each>
                              </do_if>
                              <do_else>
                                <!--If no more stashes are to be created, just fly to a random position-->
                                <create_position name="$AnchorPosition" min="100km" max="120km" space="$StashSector"/>
                                <set_value name="$AnchorPosition" exact="position.[$AnchorPosition.x, [5km, 3km, -3km, -5km].random, $AnchorPosition.z]"/>
                                <do_for_each name="$Drone" in="$DroneGroup">
                                  <do_if value="not $DistractedDronesGroup.indexof.{$Drone}">
                                    <get_safe_pos result="$FlyToPosition" value="$AnchorPosition" sector="$StashSector" max="100m" radius="100m"/>
                                    <create_order object="$Drone" id="'MoveWait'" name="$MoveOrder">
                                      <param name="destination" value="[$StashSector, $FlyToPosition]"/>
                                    </create_order>
                                    <append_to_list name="$MoveOrders" exact="$MoveOrder"/>
                                  </do_if>
                                </do_for_each>
                              </do_else>
                            </do_if>
                          </actions>
                          <cues>
                            <cue name="Pt6_Stash_Destroyed">
                              <conditions>
                                <event_object_destroyed group="$TargetStashGroup"/>
                                <check_value value="$TargetStashGroup.count le 1"/>
                              </conditions>
                              <actions>
                                <set_value name="$DestroyedStashes" operation="add"/>
                                <debug_text text="'The stash was destroyed. Resetting drone behaviour.'" chance="$DebugChance"/>
                                <reset_cue cue="Pt6_Drone_Behaviour"/>
                              </actions>
                            </cue>
                            <cue name="Pt6_No_Stash_Timeout" onfail="cancel">
                              <conditions>
                                <check_value value="$TargetStashGroup.count == 0"/>
                              </conditions>
                              <delay min="5min" max="7min"/>
                              <actions>
                                <debug_text text="'Timeout. Find a new position for them all to fly to.'" chance="$DebugChance"/>
                                <reset_cue cue="Pt6_Drone_Behaviour"/>
                              </actions>
                              <cues>
                                <cue name="Pt6_No_Stash_Movement_Finished">
                                  <conditions>
                                    <event_object_order_finished group="$DroneGroup"/>
                                    <check_value value="$MoveOrders.indexof.{event.param}"/>
                                  </conditions>
                                  <delay exact="3s"/>
                                  <actions>
                                    <debug_text text="'One of the drones reached the flyto position. Find new position for them all to fly to.'" chance="$DebugChance"/>
                                    <reset_cue cue="Pt6_Drone_Behaviour"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                        <cue name="Pt6_Destroy_Drones_Ref" ref="md.RML_Destroy_Components.DestroyComponents">
                          <param name="EndSignalCue" value="Pt6_Destroy_Drones_End"/>
                          <param name="MissionCue" value="Start"/>
                          <param name="StartStep" value="3"/>
                          <param name="Targets_Param" value="$DroneGroup"/>
                          <param name="ObjectiveIsGroup" value="true"/>
                          <param name="ObjectiveText" value="{30202,2009}"/>
                          <param name="DebugChance" value="$DebugChance"/>
                        </cue>
                        <cue name="Pt6_Player_Attacks_Drones" instantiate="true">
                          <conditions>
                            <check_any>
                              <check_all>
                                <event_player_attacked_object/>
                                <check_value value="event.param and $DroneGroup.indexof.{event.param} and not $DistractedDronesGroup.indexof.{event.param}"/>
                              </check_all>
                              <check_all>
                                <event_player_owned_attacked_object/>
                                <check_value value="event.param and $DroneGroup.indexof.{event.param2} and not $DistractedDronesGroup.indexof.{event.param2}"/>
                              </check_all>
                            </check_any>
                          </conditions>
                          <actions>
                            <!--distract the attacked drone (and one other after at least 1 minutes)-->
                            <set_value name="$PlayerAttackedDrone" exact="true"/>
                            <do_if value="event.name == 'event_player_attacked_object'">
                              <set_value name="this.$Attacked" exact="event.param"/>
                              <set_value name="this.$Attacker" exact="player.controlled"/>
                            </do_if>
                            <do_else>
                              <set_value name="this.$Attacked" exact="event.param2"/>
                              <set_value name="this.$Attacker" exact="event.param"/>
                            </do_else>
                            <set_value name="this.$DistractedDrones" exact="[this.$Attacked]"/>
                            <do_if value="not $LastWingDroneDistracted or player.age gt $LastWingDroneDistracted + 1min">
                              <do_for_each name="$WingDrone" in="$DroneGroup">
                                <do_if value="$WingDrone != this.$Attacked and not $DistractedDronesGroup.indexof.{$WingDrone}">
                                  <append_to_list name="this.$DistractedDrones" exact="$WingDrone"/>
                                  <set_value name="$LastWingDroneDistracted" exact="player.age"/>
                                  <break/>
                                </do_if>
                              </do_for_each>
                            </do_if>
                            <do_for_each name="$DistractedDrone" in="this.$DistractedDrones">
                              <debug_text text="$DistractedDrone + ' ' + $DistractedDrone.knownname + ' is to attack the player attacker'" chance="$DebugChance"/>
                              <add_to_group groupname="$DistractedDronesGroup" object="$DistractedDrone"/>
                              <set_relation_boost object="$DistractedDrone" decay="0.0000001" faction="faction.player" silent="true" value="-0.7"/>
                              <set_object_relation_behaviour object="$DistractedDrone" disable="true"/>
                              <create_order object="$DistractedDrone" id="'Attack'">
                                <param name="primarytarget" value="this.$Attacker"/>
                              </create_order>
                            </do_for_each>
                          </actions>
                        </cue>
                        <cue name="Pt6_Destroy_Drones_End">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <actions>
                            <debug_text text="'Done. Destroyed stashes: ' + $DestroyedStashes"/>
                            <!--End of part 6-->
                            <signal_cue cue="Pt7_Station_Defences"/>
                            <cancel_cue cue="Pt6_Drone_Cleanup"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--TODO @Owen #important what if this station is destroyed. wait and recreate elsewhere?-->
        <cue name="Create_Gift_Station" version="2">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <!--TODO @Owen #important loadout-->
            <set_value name="$StationSector" exact="player.sector"/>
            <create_station name="$NewStation" macro="macro.station_gen_factory_base_01_macro" owner="faction.hatikvah" sector="$StationSector" state="componentstate.operational">
              <safepos x="160km" y="4km" z="-260km"/>
            </create_station>
            <!-- phase 1 - extend station -->
            <get_module_definition macro="$ViableConnectionModules" faction="[faction.hatikvah, faction.scaleplate]" tags="[tag.connection, tag.module]" set="'factory'" multiple="true"/>
            <create_construction_sequence station="$NewStation" connectors="$ViableConnectionModules" macros="[                                             macro.pier_arg_harbor_01_macro,                                             macro.dockarea_arg_m_station_01_hightech_macro,                                             macro.storage_arg_l_container_01_macro,                                             macro.storage_tel_l_solid_01_macro,                                             macro.prod_arg_spacefuel_macro,                                             macro.hab_tel_l_01_macro]"/>
            <signal_objects object="player.galaxy" param="'init station'" param2="$NewStation" param3="false"/>
          </actions>
          <patch sinceversion="2" state="complete">
            <do_if value="$NewStation.exists">
              <signal_objects object="player.galaxy" param="'replace station controlentities'" param2="$NewStation"/>
            </do_if>
          </patch>
          <cues>
            <cue name="Create_Gift_Station_UnderConstruction">
              <conditions>
                <event_object_construction_sequence_created object="$NewStation"/>
              </conditions>
              <actions>
                <set_value name="$ConstructionSequence" exact="event.param"/>
                <do_if value="$ConstructionSequence">
                  <apply_construction_sequence station="$NewStation" sequence="$ConstructionSequence"/>
                  <!-- phase 2 - under construction / expand station-->
                  <create_construction_sequence macros="[macro.hab_arg_m_01_macro, macro.storage_tel_s_solid_01_macro]" station="$NewStation" base="$NewStation.plannedconstruction.sequence" comment="async calculation"/>
                </do_if>
              </actions>
              <cues>
                <!--TODO @Owen #important Add a construction vessel-->
                <cue name="Create_Gift_Station_UnderConstruction_Wait">
                  <conditions>
                    <event_object_construction_sequence_created object="$NewStation"/>
                  </conditions>
                  <actions>
                    <set_value name="$ConstructionSequence" exact="event.param"/>
                    <do_if value="$ConstructionSequence">
                      <add_build_to_expand_station object="$NewStation.buildstorage" buildobject="$NewStation" constructionplan="$ConstructionSequence" result="$BuildTask"/>
                    </do_if>
                  </actions>
                  <cues>
                    <!--TODO @Owen add some Hatikvah freighters so it looks busy?-->
                    <cue name="Create_Gift_Station_FillStorage">
                      <conditions>
                        <event_build_started object="$NewStation.buildstorage"/>
                      </conditions>
                      <actions>
                        <!-- fill buildstorage with needed wares -->
                        <set_value name="$BuildProcessor" exact="$NewStation.buildstorage.buildprocessor"/>
                        <set_value name="$BuildWareAmounts" exact="$BuildProcessor.neededsequenceresources.table"/>
                        <do_for_each name="$BuildWare" valuename="$BuildWareAmount" in="$BuildWareAmounts">
                          <debug_text text="'Adding ' + $BuildWareAmount + ' of ' + $BuildWare + ' to buildstorage'"/>
                          <add_cargo object="$NewStation.buildstorage" ware="$BuildWare" exact="$BuildWareAmount"/>
                        </do_for_each>
                      </actions>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Part 7 - Station Defences-->
        <cue name="Pt7_Force">
          <force name="Plot_Diplomat_Pt7">
            <signal_cue_instantly cue="Force_Part" param="Pt7_Station_Defences"/>
          </force>
        </cue>
        <cue name="Pt7_Station_Defences">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <include_actions ref="Create_Reen_Office"/>
              <set_entity_traits entity="$Reen" subtitlename="true"/>
              <set_entity_traits entity="$Dal" subtitlename="true"/>
              <set_entity_traits entity="$Kat" subtitlename="true"/>
              <set_entity_traits entity="$Cline" subtitlename="true"/>
              <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                  table[                 $requestercue = namespace,                 $location = $Reen_Office_Room,                 $priority = 100,                 $slottags = [tag.sit],                 $debugchance = $DebugChance2,                 $debugcaller = if $DebugChance2 == 100 then this else null]                 ]"/>
            </do_if>
            <!--TODO @Owen - should this be earlier?-->
            <signal_cue cue="Create_Gift_Station"/>
          </actions>
          <delay exact="4s"/>
          <actions>
            <do_if value="$NewStation.isoperational">
              <set_value name="$DeployStation" exact="$NewStation"/>
              <set_value name="$SpeakList" exact="[]"/>
              <do_if value="@$PlayerAttackedDrone">
                <append_to_list name="$SpeakList" exact="30202078"/>
              </do_if>
              <do_if value="@$DestroyedStashes gt 0">
                <append_to_list name="$SpeakList" exact="30202079"/>
                <append_to_list name="$SpeakList" exact="30202080"/>
              </do_if>
              <append_to_list name="$SpeakList" exact="1s"/>
              <append_to_list name="$SpeakList" exact="30202081"/>
              <append_to_list name="$SpeakList" exact="30202082"/>
              <append_to_list name="$SpeakList" exact="30202083"/>
              <append_to_list name="$SpeakList" exact="if player.entity.isfemale then 30202093 else 30202092"/>
              <speak actor="$Reen" line="$SpeakList" caninterrupt="false" priority="100"/>
            </do_if>
            <do_else>
              <!--TODO @Owen #important trigger the station to be recreated?-->
            </do_else>
          </actions>
          <cues>
            <cue name="Pt7_Deploy_Defences">
              <conditions>
                <event_speak_finished actor="$Reen"/>
                <check_value value="event.param2 == 30202078 or event.param2 == 30202079 or event.param2 == 30202081"/>
              </conditions>
              <delay exact="1s"/>
              <actions>
                <do_if value="$Forced">
                  <create_mission cue="Start" abortable="false" type="missiontype.plot" name="{30202,1081}" difficulty="level.easy" faction="faction.hatikvah"/>
                </do_if>
                <update_mission cue="Start" name="{30202,1081}" description="{30202,1082} + '\n' + (if player.entity.isfemale then {30202,1084} else {30202,1083})">
                  <briefing replace="true">
                    <objective step="1" action="objective.destroy" text="{30202,2009}"/>
                  </briefing>
                </update_mission>
              </actions>
              <cues>
                <cue name="Pt7_Deploy_Defences_Wait">
                  <conditions>
                    <event_cue_completed cue="Pt7_Deploy_Defences"/>
                  </conditions>
                  <actions>
                    <create_position name="$DeployStationSecPos" object="$DeployStation" space="$DeployStation.sector"/>
                  </actions>
                  <cues>
                    <cue name="Pt7_Deploy_Defenses_AddLasertowers_DEBUG">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <add_ammo object="player.ship" macro="macro.ship_gen_xs_lasertower_01_a_macro" amount="5" comment="usable by small ships"/>
                        <add_ammo object="player.ship" macro="macro.ship_gen_s_lasertower_01_a_macro" amount="5"/>
                      </actions>
                    </cue>
                    <!--TODO @Owen allow the laser towers to be passed back so they can later change owner again-->
                    <cue name="Pt7_Deploy_Defences_Ref" ref="md.RML_DeployInPlace.DeployInPlace">
                      <param name="EndSignalCue" value="Pt7_Deploy_Defences_End"/>
                      <param name="MissionCue" value="Start"/>
                      <param name="StartStep" value="2" comment="Briefing step to start the mission on"/>
                      <param name="DebugChance" value="$DebugChance"/>
                      <param name="ObjectiveText" value="{30136,110}"/>
                      <param name="ObjectiveText_InRange" value="{30136,111}"/>
                      <param name="ObjectiveText_Plural" value="{30136,112}"/>
                      <param name="ObjectiveText_InRange_Plural" value="{30136,113}"/>
                      <param name="TargetSector" value="$DeployStation.sector"/>
                      <param name="TargetOffset" value="$DeployStationSecPos"/>
                      <param name="TargetRadius" value="10km"/>
                      <param name="TargetCount" value="5"/>
                      <param name="DeployableCategory" value="deployablecategory.lasertower"/>
                      <param name="Faction" value="faction.hatikvah"/>
                    </cue>
                    <cue name="Pt7_Deploy_Defences_End">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <!--End of part 7-->
                        <signal_cue cue="Pt8_TheAgreement"/>
                        <cancel_cue cue="Pt7_Station_Defences"/>
                      </actions>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Part 8 - The Agreement-->
        <cue name="Pt8_Force">
          <force name="Plot_Diplomat_Pt8">
            <signal_cue_instantly cue="Force_Part" param="Pt8_TheAgreement"/>
          </force>
        </cue>
        <cue name="Pt8_TheAgreement">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <include_actions ref="Create_Reen_Office"/>
              <set_entity_traits entity="$Reen" subtitlename="true"/>
              <set_entity_traits entity="$Dal" subtitlename="true"/>
              <set_entity_traits entity="$Kat" subtitlename="true"/>
              <set_entity_traits entity="$Cline" subtitlename="true"/>
              <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                  table[                 $requestercue = namespace,                 $location = $Reen_Office_Room,                 $priority = 100,                 $slottags = [tag.sit],                 $debugchance = $DebugChance2,                 $debugcaller = if $DebugChance2 == 100 then this else null]                 ]"/>
            </do_if>
          </actions>
          <delay exact="4s"/>
          <actions>
            <speak actor="$Reen" caninterrupt="false">
              <text line="if player.entity.isfemale then 30202085 else 30202084" comment="Do you have a moment to come and see me?"/>
              <text line="30202086" comment="We're getting close to finishing this."/>
            </speak>
          </actions>
          <cues>
            <cue name="Pt8_Talk_To_Reen">
              <conditions>
                <event_speak_finished actor="$Reen"/>
                <check_value value="event.param2 == 30202085 or event.param2 == 30202084"/>
              </conditions>
              <delay exact="1s"/>
              <actions>
                <do_if value="$Forced">
                  <create_mission cue="Start" abortable="false" name="{30202,1091}" type="missiontype.plot" difficulty="level.easy" faction="faction.hatikvah"/>
                </do_if>
                <update_mission cue="Start" name="{30202,1091}" description="{30202,1092}">
                  <briefing replace="true">
                    <objective step="1" action="objective.deploy" text="{1001,1333}"/>
                  </briefing>
                </update_mission>
                <set_objective cue="Start" step="2" action="objective.talkto" object="$Reen" updatebriefing="true"/>
                <set_value name="$FirstConversationDone" exact="false"/>
                <set_value name="$LastReturnRemark" exact="null"/>
                <set_value name="$DatapadWare" exact="ware.inv_encrypted_contract"/>
                <set_value name="$DatapadGivenCount" exact="0" comment="This game is perfectly balanced. Guard against exploits for farming 1Cr inventory ware."/>
                <set_value name="$LastDatapadGiveTime" exact="null"/>
                <set_value name="$PreparingDatapadReplacement" exact="false"/>
              </actions>
              <cues>
                <cue name="Pt8_Reen_Conversation" instantiate="true">
                  <conditions>
                    <event_conversation_started actor="$Reen"/>
                  </conditions>
                  <actions>
                    <allow_conversation_escape enabled="false"/>
                    <set_value name="$GiveDatapad" exact="false"/>
                    <do_if value="$FirstConversationDone">
                      <do_if value="player.entity.inventory.{$DatapadWare}.exists">
                        <do_any>
                          <set_value name="$LastReturnRemark" exact="30202001" weight="if $LastReturnRemark == 30202001 then 0 else 100" comment="That will be all."/>
                          <set_value name="$LastReturnRemark" exact="30202091" weight="if $LastReturnRemark == 30202091 then 0 else 100" comment="We're counting on you."/>
                          <set_value name="$LastReturnRemark" exact="30202101" weight="if $LastReturnRemark == 30202101 then 0 else 100" comment="Just smile, make the exchange and get out of there."/>
                        </do_any>
                        <add_npc_line speaker="$Reen" line="$LastReturnRemark"/>
                      </do_if>
                      <do_elseif value="$PreparingDatapadReplacement">
                        <!--Player lost the item and is waiting for a replacement to be 'finished'-->
                        <do_if value="player.age gt ($LastDatapadGiveTime + [5s * $DatapadGivenCount, 60s].min)">
                          <add_npc_line speaker="$Reen" line="30202106" comment="Here. Don't lose this one." delay="0.2s"/>
                          <set_value name="$GiveDatapad" exact="true"/>
                        </do_if>
                        <do_else>
                          <add_npc_line speaker="$Reen" line="30202105" comment="Give me a moment to prepare another one."/>
                        </do_else>
                      </do_elseif>
                      <do_elseif value="$DatapadGivenCount == 1 or player.age gt ($LastDatapadGiveTime + [10s * $DatapadGivenCount, 60s].min)">
                        <!--Player is back to get a replacement item and enough time has passed to give it instantly-->
                        <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202104 else 30202103" delay="0.2s" comment="You lost it?"/>
                        <add_npc_line speaker="$Reen" line="30202105" comment="Give me a moment to prepare another one." delay="0.6s"/>
                        <add_npc_line speaker="$Reen" line="30202106" comment="Here. Don't lose this one." delay="2.5s"/>
                        <set_value name="$GiveDatapad" exact="true"/>
                      </do_elseif>
                      <do_else>
                        <!--Player has come back after losing the item-->
                        <set_value name="$PreparingDatapadReplacement" exact="true"/>
                        <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202104 else 30202103" delay="0.2s" comment="You lost it?"/>
                        <add_npc_line speaker="$Reen" line="30202105" comment="Give me a moment to prepare another one."/>
                      </do_else>
                    </do_if>
                    <do_else>
                      <set_value name="$FirstConversationDone" exact="true"/>
                      <add_npc_line speaker="$Reen" line="30202094"/>
                      <add_npc_line speaker="$Reen" line="30202095"/>
                      <add_npc_line speaker="$Reen" line="30202096"/>
                      <add_npc_line speaker="$Reen" line="30202097"/>
                      <add_npc_line speaker="$Reen" line="30202098"/>
                      <add_npc_line speaker="$Reen" line="if player.entity.isfemale then 30202100 else 30202099"/>
                      <add_npc_line speaker="$Reen" line="30202101"/>
                      <add_npc_line speaker="$Reen" line="30202102"/>
                      <set_value name="$GiveDatapad" exact="true"/>
                    </do_else>
                  </actions>
                </cue>
                <cue name="Pt8_GiveDatapad" instantiate="true">
                  <conditions>
                    <event_conversation_finished actor="$Reen"/>
                    <check_value value="$GiveDatapad"/>
                  </conditions>
                  <actions>
                    <add_inventory entity="player.entity" ware="$DatapadWare" exact="1"/>
                    <set_value name="$DatapadGivenCount" operation="add"/>
                    <set_value name="$LastDatapadGiveTime" exact="player.age"/>
                    <set_value name="$PreparingDatapadReplacement" exact="false"/>
                  </actions>
                </cue>
                <cue name="Pt8_Reen_Conversation_End">
                  <conditions>
                    <event_conversation_finished actor="$Reen"/>
                  </conditions>
                  <actions>

                  </actions>
                  <cues>
                    <cue name="Pt8_Talk_To_Scaleplate_Init">
                      <actions>
                        <!--Signal the first time and attempt to set up the meeting. If it fails, Pt8_Talk_To_Scaleplate must be reset and something else signals it when the meeting is possible.-->
                        <signal_cue cue="Pt8_Talk_To_Scaleplate"/>
                      </actions>
                    </cue>
                    <cue name="Pt8_Talk_To_Scaleplate_Reset" instantiate="true">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <delay exact="60s"/>
                      <actions>
                        <debug_text text="'Attempting to start the talk to scaleplate meeting setup again'" chance="$DebugChance"/>
                        <signal_cue cue="Pt8_Talk_To_Scaleplate"/>
                      </actions>
                    </cue>
                    <cue name="Pt8_Talk_To_Scaleplate">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <!--Create Scale Plate dynamic interior and place NPCs-->
                        <do_if value="not @$ScalePlateStation.isoperational">
                          <find_station_by_true_owner name="$ScalePlateStation" faction="faction.scaleplate" sortbygatedistanceto="$Hat_Station" space="player.galaxy"/>
                        </do_if>
                        <do_if value="$ScalePlateStation">
                          <!--Set scale plate station to invincible-->
                          <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                            <param name="Object" value="$ScalePlateStation"/>
                            <param name="RequesterCue" value="Pt8_TheAgreement"/>
                            <param name="DebugChance" value="$DebugChance"/>
                          </run_actions>
                          <set_value name="$ScalePlate_OfficeMacro" exact="macro.room_gen_managersoffice_01_macro"/>
                          <get_room_definition macro="$ScalePlate_CorridorMacro" doors="$InteriorDoors" race="race.teladi" tags="tag.corridor"/>
                          <set_value name="$ScalePlate_Door" exact="if $InteriorDoors.count ge 3 then $InteriorDoors.{3} else $InteriorDoors.{1}"/>
                          <remove_value name="$InteriorDoors"/>
                          <create_dynamic_interior interiorname="$ScalePlate_Office_Interior" corridorname="$ScalePlate_Corridor" roomname="$ScalePlate_Office_Room" object="$ScalePlateStation" room="$ScalePlate_OfficeMacro" corridor="$ScalePlate_CorridorMacro" door="$ScalePlate_Door" name="'{30202,502}'" persistent="true" private="true"/>
                          <create_cue_actor name="$Teladi_Goon_1" cue="namespace">
                            <select faction="faction.scaleplate" race="race.teladi" tags="tag.marine"/>
                            <owner exact="faction.scaleplate"/>
                            <skills>
                              <skill type="management" exact="2"/>
                              <skill type="morale" exact="5"/>
                              <skill type="piloting" exact="5"/>
                              <skill type="engineering" exact="2"/>
                              <skill type="boarding" exact="7"/>
                            </skills>
                          </create_cue_actor>
                          <set_entity_traits entity="$Teladi_Goon_1" missionactor="true" customhandler="true"/>
                          <set_entity_overrides entity="$Teladi_Goon_1" icon="'marineofficer'"/>
                          <create_cue_actor name="$Teladi_Goon_2" cue="namespace">
                            <select faction="faction.scaleplate" race="race.teladi" tags="tag.marine"/>
                            <owner exact="faction.scaleplate"/>
                            <skills>
                              <skill type="management" exact="3"/>
                              <skill type="morale" exact="4"/>
                              <skill type="piloting" exact="4"/>
                              <skill type="engineering" exact="3"/>
                              <skill type="boarding" exact="6"/>
                            </skills>
                          </create_cue_actor>
                          <set_entity_traits entity="$Teladi_Goon_2" missionactor="true" customhandler="true"/>
                          <set_entity_overrides entity="$Teladi_Goon_2" icon="'marineofficer'"/>
                          <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $ScalePlateBoss,                              table[                             $requestercue = namespace,                             $location = $ScalePlate_Office_Room,                             $priority = 100,                             $slottags = [tag.sit],                             $debugchance = $DebugChance2,                             $debugcaller = if $DebugChance2 == 100 then this else null]                             ]"/>
                          <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Teladi_Goon_1,                              table[                             $requestercue = namespace,                             $location = $ScalePlate_Office_Room,                             $priority = 100,                             $position = position.[3.1m, 0.09m, -9.0m],                             $rotation = rotation.[-22deg, 0deg, 0deg],                             $debugchance = $DebugChance2,                             $debugcaller = if $DebugChance2 == 100 then this else null]                             ]"/>
                          <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Teladi_Goon_2,                              table[                             $requestercue = namespace,                             $location = $ScalePlate_Office_Room,                             $priority = 100,                             $position = position.[-3m, 0.09m, -8.0m],                             $rotation = rotation.[33deg, 0deg, 0deg],                             $debugchance = $DebugChance2,                             $debugcaller = if $DebugChance2 == 100 then this else null]                             ]"/>
                          <!--Disconnect Dal crew in preparation for ship to be removed-->
                          <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Kat,                              table[                             $requestercue = namespace,                             $location = 'disconnect',                             $priority = 100,                             $debugchance = $DebugChance2,                             $debugcaller = if $DebugChance2 == 100 then this else null]                             ]"/>
                          <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Cline,                              table[                             $requestercue = namespace,                             $location = 'disconnect',                             $priority = 100,                             $debugchance = $DebugChance2,                             $debugcaller = if $DebugChance2 == 100 then this else null]                             ]"/>
                        </do_if>
                        <do_else>
                          <!--TODO @Owen #important fallback? Select a Teladi station? Create a new one?-->
                          <reset_cue cue="Pt8_Talk_To_Scaleplate"/>
                          <signal_cue cue="Pt8_Talk_To_Scaleplate_Reset"/>
                        </do_else>
                      </actions>
                      <delay exact="2s"/>
                      <actions>
                        <!--If here after the delay, the setup was attempted. Check if correct.-->
                        <do_if value="$ScalePlateBoss.hascontext.{$ScalePlateStation}">
                          <update_mission cue="Start">
                            <briefing>
                              <objective step="1" action="objective.talkto" object="$Reen"/>
                            </briefing>
                          </update_mission>
                          <substitute_text text="$DeliverText" source="{1004,1016}">
                            <replace string="'$WARE$'" with="$DatapadWare.name"/>
                            <replace string="'$NPC$'" with="$ScalePlateBoss.knownname"/>
                          </substitute_text>
                          <set_objective cue="Start" step="2" action="objective.deliver" text="$DeliverText" object=" $ScalePlateBoss" updatebriefing="true"/>
                        </do_if>
                        <do_else>
                          <assert value="$ScalePlateBoss.hascontext.{$ScalePlateStation}" text="'Teladi is not on the station he should be on. Object: ' + $ScalePlateBoss.object + ' ' + @$ScalePlateBoss.object.knownname + ' [Owen]'"/>
                          <reset_cue cue="Pt8_Talk_To_Scaleplate"/>
                          <signal_cue cue="Pt8_Talk_To_Scaleplate_Reset"/>
                        </do_else>
                        <set_value name="$DatapadDelivered" exact="false"/>
                      </actions>
                      <cues>
                        <cue name="Pt8_LieutenantNear" checkinterval="50ms">
                          <conditions>
                            <check_value value="player.room == $ScalePlateBoss.room and player.entity.distanceto.{$ScalePlateBoss} lt 6m"/>
                          </conditions>
                          <actions>
                            <speak actor="$ScalePlateBoss" line="30202005" comment="Well now, what have we here?"/>
                          </actions>
                        </cue>
                        <cue name="Pt8_Lieutenant_Conversation_Start" instantiate="true">
                          <conditions>
                            <event_conversation_started actor="$ScalePlateBoss"/>
                            <check_value value="player.room == $ScalePlateBoss.room"/>
                          </conditions>
                          <actions>
                            <allow_conversation_escape enabled="false"/>
                            <add_npc_line speaker="$ScalePlateBoss" line="if player.entity.isfemale then 30202007 else 30202006" hidechoices="true" comment="I suppose you are here to give me something."/>
                            <substitute_text text="$GiveText" source="{30202,710}">
                              <replace string="'$WARE$'" with="$DatapadWare.name"/>
                            </substitute_text>
                            <do_if value="player.entity.inventory.{$DatapadWare}.exists">
                              <add_player_choice text="$GiveText" section="dipl_choice_givepad"/>
                            </do_if>
                            <do_else>
                              <add_player_choice text="{30202,711}" section="dipl_choice_lostpad"/>
                            </do_else>
                          </actions>
                        </cue>
                        <cue name="Pt8_Lieutenant_Conversation_Next" instantiate="true">
                          <conditions>
                            <event_conversation_next_section actor="$ScalePlateBoss"/>
                            <check_value value="event.param == 'dipl_choice_givepad' or event.param == 'dipl_choice_lostpad'"/>
                          </conditions>
                          <actions>
                            <allow_conversation_escape enabled="false"/>
                            <do_if value="event.param == 'dipl_choice_givepad'">
                              <set_value name="$DatapadDelivered" exact="true"/>
                              <add_npc_line speaker="$ScalePlateBoss" line="if player.entity.isfemale then 30202009 else 30202008" comment="Ah, of course. Thank you."/>
                            </do_if>
                            <do_else>
                              <!--TODO @Owen #newvoice transplant a sigh from another Teladi page? Or have a pause where he looks around confused/annoyed. Maybe a goon could say something. Jazz music stops?-->
                            </do_else>
                            <!--This was a fun little exercise?-->
                            <add_npc_line speaker="$ScalePlateBoss" line="30202010" delay="if event.param == 'dipl_choice_givepad' then 1s else 3s"/>
                            <!--I must say, that Dal Busta is a rather interesting man.-->
                            <add_npc_line speaker="$ScalePlateBoss" line="30202011" delay="1s"/>
                            <!--He convinced me to give Hatikvah the chance to repay their debts so that we can all move forward.-->
                            <add_npc_line speaker="$ScalePlateBoss" line="30202012" delay="0.3s"/>
                            <!--But there seems to have been a misunderstanding.-->
                            <add_npc_line speaker="$ScalePlateBoss" line="30202013" delay="0.3s"/>
                            <!--The largest debt was respect.-->
                            <add_npc_line speaker="$ScalePlateBoss" line="30202014" delay="1s"/>
                            <!--Yet, here you stand. You must be a trusted ally of Hatikvah, but hardly the figurehead I expected.-->
                            <add_npc_line speaker="$ScalePlateBoss" line="if player.entity.isfemale then 30202016 else 30202015"/>
                            <!--If Hatikvah will not show me the respect of submitting to me in person, I am afraid this business arrangement has reached an impasse.-->
                            <add_npc_line speaker="$ScalePlateBoss" line="30202017" delay="1s"/>
                            <!--I wonder. Will you reach Hatikvah in time to warn them or will you be greeted by wreckage.-->
                            <add_npc_line speaker="$ScalePlateBoss" line="if player.entity.isfemale then 30202019 else 30202018"/>
                          </actions>
                          <cues>
                            <cue name="Pt8_Lieutenant_Conversation_Walkout">
                              <conditions>
                                <event_speak_finished actor="$ScalePlateBoss"/>
                                <check_value value="event.param2 == 30202017"/>
                              </conditions>
                              <actions>
                                <!--Signal an external cue just so we can end the part branch without worrying-->
                                <signal_cue cue="Pt8_Trigger_Scale_Plate_Characters_Disconnect"/>
                              </actions>
                            </cue>
                            <cue name="Pt8_Lieutenant_Conversation_End">
                              <conditions>
                                <event_conversation_finished actor="$ScalePlateBoss"/>
                              </conditions>
                              <actions>
                                <!--Remove the invincibility request for Dal's ship and destroy it-->
                                <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                                  <param name="Object" value="$DalShip"/>
                                  <param name="RequesterCue" value="Start"/>
                                  <param name="DebugChance" value="$DebugChance"/>
                                </run_actions>
                                <destroy_object object="$DalShip"/>
                                <!--Remove the invincibility request for scale plate station-->
                                <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                                  <param name="Object" value="$ScalePlateStation"/>
                                  <param name="RequesterCue" value="Pt8_TheAgreement"/>
                                  <param name="DebugChance" value="$DebugChance"/>
                                </run_actions>
                                <!--End of part 8-->
                                <signal_cue cue="Pt9_Breakdown"/>
                                <cancel_cue cue="Pt8_TheAgreement"/>
                              </actions>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="Pt8_Trigger_Scale_Plate_Characters_Disconnect">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <!--TODO @Owen can we not have the guy moving and talking at the same time? Have him speak as he's getting up.-->
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $ScalePlateBoss,                      table[                     $requestercue = namespace,                     $location = 'disconnect',                     $priority = 100,                     $debugchance = $DebugChance2,                     $debugcaller = if $DebugChance2 == 100 then this else null]                     ]"/>
          </actions>
          <delay exact="10s"/>
          <actions>
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Teladi_Goon_1,                      table[                     $requestercue = namespace,                     $location = 'disconnect',                     $priority = 100,                     $debugchance = $DebugChance2,                     $debugcaller = if $DebugChance2 == 100 then this else null]                     ]"/>
          </actions>
          <delay exact="1s"/>
          <actions>
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Teladi_Goon_2,                      table[                     $requestercue = namespace,                     $location = 'disconnect',                     $priority = 100,                     $debugchance = $DebugChance2,                     $debugcaller = if $DebugChance2 == 100 then this else null]                     ]"/>
          </actions>
        </cue>
        <!--Part 9 - Breakdown-->
        <cue name="Pt9_Force">
          <force name="Plot_Diplomat_Pt9">
            <signal_cue_instantly cue="Force_Part" param="Pt9_Breakdown"/>
          </force>
        </cue>
        <cue name="Pt9_Breakdown">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Reen,                  table[                 $requestercue = namespace,                 $location = 'disconnect',                 $priority = 100,                 $debugchance = $DebugChance2,                 $debugcaller = if $DebugChance2 == 100 then this else null]                 ]"/>
            <do_if value="$Forced">
              <set_entity_traits entity="$Reen" subtitlename="true"/>
              <set_entity_traits entity="$Dal" subtitlename="true"/>
              <set_entity_traits entity="$Kat" subtitlename="true"/>
              <set_entity_traits entity="$Cline" subtitlename="true"/>
            </do_if>
          </actions>
          <delay exact="4s"/>
          <actions>
            <do_if value="$Forced">
              <create_mission cue="Start" abortable="false" name="{30202,1101}" description="{30202,1102}" type="missiontype.plot" difficulty="level.hard" faction="faction.hatikvah"/>
            </do_if>
            <update_mission cue="Start">
              <briefing replace="true">
                <objective step="1" action="objective.talkto" object="$ScalePlateBoss"/>
              </briefing>
            </update_mission>
            <set_objective cue="Start" step="2" action="objective.flyto" text="{30202,2012}" object="$Hat_Station" updatebriefing="true"/>
            <do_if value="not @$ScalePlateStation.isoperational">
              <find_station_by_true_owner name="$ScalePlateStation" faction="faction.scaleplate" sortbygatedistanceto="$Hat_Station" space="player.galaxy"/>
            </do_if>
            <get_global_path component="$PathResult" uselocalhighways="false" multiple="true">
              <start object="player.entity"/>
              <end object="$Hat_Station"/>
            </get_global_path>
            <set_value name="$PathSectors" exact="[]"/>
            <do_for_each name="$PathElement" in="$PathResult">
              <set_value name="$PathSector" exact="null"/>
              <do_if value="$PathElement.isclass.sector">
                <set_value name="$PathSector" exact="$PathElement"/>
              </do_if>
              <do_elseif value="$PathElement.sector">
                <set_value name="$PathSector" exact="$PathElement.sector"/>
              </do_elseif>
              <do_if value="$PathSector and $PathSector != player.sector and not $PathSectors.indexof.{$PathSector}">
                <append_to_list name="$PathSectors" exact="$PathSector"/>
              </do_if>
            </do_for_each>
            <assert value="$PathSectors.count" text="'No sectors on the path to the Hatikvah station.'"/>
            <do_if value="not $PathSectors.count">
              <append_to_list name="$PathSectors" exact="$Hat_Station.sector"/>
            </do_if>
            <set_value name="$TroubledSectors" exact="[]"/>
            <do_for_each name="$PotentialSector" counter="$i" in="$PathSectors">
              <do_if value="$i == $PathSectors.count or $PotentialSector.gatedistance.{$Hat_Station} le 3">
                <append_to_list name="$TroubledSectors" exact="$PotentialSector"/>
              </do_if>
            </do_for_each>
            <!--We now have a list of sectors leading to the Hatikvah Station, excluding the player's start sector (unless that is the only one). They are within 3 jumps of the station.
            Tell the player to help in the first sector and then take them to the next, if there is one. After helping in two areas, the Argon intervene.-->
          </actions>
          <cues>
            <!--TODO @Owen #important essentially a Scale Plate / Hatikvah war. Could just be new enemy Scale Plate ships or some commandeered.-->
            <!--TODO @Owen #important along the way, have some combat chatter. Should probably be a usecase.-->
            <cue name="Pt9_Reen_Message" checkinterval="1s">
              <conditions>
                <check_value value="not player.station or player.sector == $Hat_Station.sector"/>
              </conditions>
              <delay exact="10s"/>
              <actions>
                <speak actor="$Reen" priority="100" caninterrupt="false">
                  <!--Pilot, what is going on? We have Scale Plate making moves against our assets.-->
                  <text line="if player.entity.isfemale then 30202108 else 30202107"/>
                  <!--We don't have the forces to deal with this, especially in the outer reaches.-->
                  <text line="30202110"/>
                  <!--Even the local law enforcement isn't keeping up.-->
                  <text line="30202111"/>
                  <!--I'm going to contact the Argon. This has gone far enough.-->
                  <text line="30202112"/>
                  <!--Until they step in, please help anywhere you can.-->
                  <text line="if player.entity.isfemale then 30202114 else 30202113"/>
                  <!--I'll send you data on where we need a hand.-->
                  <text line="if player.entity.isfemale then 30202116 else 30202115"/>
                </speak>
              </actions>
              <cues>
                <cue name="Pt9_Aid_Boarded_Ship">
                  <conditions>
                    <event_speak_finished actor="$Reen"/>
                  </conditions>
                  <actions>
                    <!--Create L ship in the first sector-->
                    <set_value name="$SpawnSector" exact="$TroubledSectors.{1}"/>
                    <create_position name="$SpawnPosition" min="100km" max="120km" space="$SpawnSector"/>
                    <set_value name="$SpawnPosition" exact="position.[$SpawnPosition.x, [5km, 3km, -3km, -5km].random, $SpawnPosition.z]"/>
                    <create_ship name="$BoardedHatikvahShip" capturable="false" sector="$SpawnSector">
                      <select faction="faction.hatikvah" size="class.ship_l" tags="tag.container"/>
                      <owner exact="faction.hatikvah" overridenpc="true"/>
                      <position value="$SpawnPosition"/>
                    </create_ship>
                    <create_order object="$BoardedHatikvahShip" id="'Wait'" default="true">
                      <param name="allowdocked" value="false"/>
                    </create_order>
                    <cancel_all_orders object="$BoardedHatikvahShip"/>
                    <set_relation_boost object="$BoardedHatikvahShip" decay="0.0000001" faction="faction.scaleplate" silent="true" value="-0.7"/>
                    <!--damage some of the turrets-->
                    <find_object_component name="$TurretsToDamage" object="$BoardedHatikvahShip" class="class.turret" multiple="true"/>
                    <do_for_each name="$ElementToDamage" in="$TurretsToDamage">
                      <destroy_object object="$ElementToDamage" explosion="true" chance="80"/>
                    </do_for_each>
                    <remove_value name="$TurretsToDamage"/>
                    <!--destroy some engines-->
                    <find_object_component name="$EnginesToDamage" object="$BoardedHatikvahShip" class="class.engine" multiple="true"/>
                    <do_for_each name="$ElementToDamage" in="$EnginesToDamage">
                      <destroy_object object="$ElementToDamage" explosion="true" chance="40"/>
                    </do_for_each>
                    <update_mission cue="Start" name="{30202,1101}" description="{30202,1102}"/>
                    <set_objective cue="Start" step="2" action="objective.defend" text="{30202,2011}" object="$BoardedHatikvahShip" updatebriefing="true"/>
                    <!--
                    Defend $Ship
                    
                    When player approaches
                    <t id="10030">(evacuation - ship)Abandon ship!</t>
                    - launch some pods
                    - lines about boarding
                    <t id="12225">The crew seems to be abandoning ship.</t>
                    <t id="10602">(plea)Requesting immediate backup!</t>
                    
                    Objective
                    Defend Pods
                    
                    Owner changes
                    Fighters launch
                    More pods
                    
                    <t id="12226">The self-destruct has been activated. We're working on disabling it.</t>
                    
                    20 seconds later
                    <t id="12228">I'm calling it. Abort! Get back to your pods!</t>
                    Ship explodes
                    
                    When all fighters are destroyed, player is thanked and leaves the pods
                    
                    -->
                  </actions>
                  <cues>
                    <cue name="Pt9_Aid_Boarded_Ship_Destroyed">
                      <conditions>
                        <event_object_destroyed object="$BoardedHatikvahShip"/>
                      </conditions>
                      <actions>
                        <!--TODO @Owen #important is this enough? just skip to the next part? add feedback-->
                        <signal_cue cue="Pt9_Destroy_Scale_Plate_Fighters"/>
                      </actions>
                    </cue>
                    <cue name="Pt9_Aid_Boarded_Ship_Near" checkinterval="1s">
                      <conditions>
                        <check_value value="player.sector and player.sector == $BoardedHatikvahShip.sector and player.entity.distanceto.{$BoardedHatikvahShip} lt 8km"/>
                      </conditions>
                      <actions>
                        <!--Betty: Warning. $BoardedHatikvahShip has been boarded.-->
                        <speak actor="player.computer" caninterrupt="false">
                          <text line="2"/>
                          <name value="$BoardedHatikvahShip"/>
                          <text line="325"/>
                        </speak>
                      </actions>
                      <cues>
                        <cue name="Pt9_Aid_Boarded_Ship_AbandonShip">
                          <conditions>
                            <event_speak_finished actor="player.computer"/>
                          </conditions>
                          <actions>
                            <create_group groupname="$ScalePlateFighters"/>
                            <create_group groupname="$EscapePods"/>
                            <create_cue_actor name="$ScalePlateBoardingActor" cue="this">
                              <select faction="faction.scaleplate" race="race.teladi"/>
                              <owner exact="faction.scaleplate"/>
                            </create_cue_actor>
                          </actions>
                          <delay exact="1s"/>
                          <actions>
                            <speak actor="$BoardedHatikvahShip.pilot" line="10030" broadcast="true" caninterrupt="false" comment="Abandon Ship!"/>
                          </actions>
                          <delay exact="5s"/>
                          <actions>
                            <!-- Scale Plate 'boarding actor'
                            Holding position.
                            The crew seems to be abandoning ship.
                            -->
                            <speak actor="$ScalePlateBoardingActor" broadcast="true" caninterrupt="false" line="[12220, 1s, 12225]"/>
                          </actions>
                          <cues>
                            <cue name="Pt9_Scaleplate_Fighter_Captured" instantiate="true">
                              <conditions>
                                <event_object_changed_true_owner group="$ScalePlateFighters"/>
                              </conditions>
                              <actions>
                                <remove_from_group group="$ScalePlateFighters" object="event.object"/>
                              </actions>
                            </cue>
                            <cue name="Pt9_Aid_Boarded_Ship_Launch_Pods" onfail="cancel">
                              <conditions>
                                <check_value value="$BoardedHatikvahShip.owner == faction.hatikvah and $BoardedHatikvahShip.people.count"/>
                              </conditions>
                              <delay min="2s" max="5s"/>
                              <actions>
                                <set_value name="$MaxEjections" min="4" max="6"/>
                                <eject_people object="$BoardedHatikvahShip" max="$MaxEjections" force="true"/>
                                <reset_cue cue="this"/>
                              </actions>
                            </cue>
                            <cue name="Pt9_Aid_Boarded_Ship_Pods_Launched" instantiate="true">
                              <conditions>
                                <event_object_dropped_objects object="$BoardedHatikvahShip"/>
                              </conditions>
                              <actions>
                                <do_for_each name="$Drop" in="event.param">
                                  <do_if value="$Drop.isclass.ship and $Drop.type == shiptype.escapepod">
                                    <add_to_group groupname="$EscapePods" object="$Drop"/>
                                  </do_if>
                                </do_for_each>
                                <debug_text text="'Dropped ' + event.param.count + ' objects. Now ' + $EscapePods.count + ' escape pods'" chance="$DebugChance"/>
                              </actions>
                            </cue>
                            <cue name="Pt9_Aid_Boarded_Ship_Protect_Pods">
                              <conditions>
                                <event_speak_finished actor="$ScalePlateBoardingActor"/>
                              </conditions>
                              <actions>
                                <set_objective cue="Start" step="3" action="objective.protect" text="{30202,2013}" group="$EscapePods" updatebriefing="true"/>
                                <set_value name="$PodAttackTime" exact="player.age"/>
                                <set_value name="$PlayerFightingtime" exact="player.age"/>
                              </actions>
                              <cues>
                                <cue name="Pt9_Aid_Boarded_Ship_Change_Ownership">
                                  <delay exact="5s"/>
                                  <actions>
                                    <signal_cue_instantly cue="md.Boarding.Transfer_Ownership" param="table[$target = $BoardedHatikvahShip, $faction = faction.scaleplate, $debugchance = $DebugChance]"/>
                                    <assign_control_entity actor="$ScalePlateBoardingActor" object="$BoardedHatikvahShip" post="controlpost.aipilot" transfer="true"/>
                                    <set_relation_boost object="$BoardedHatikvahShip" faction="faction.player" silent="true" decay="0.00000001" value="-0.7"/>
                                    <set_relation_boost object="$BoardedHatikvahShip" faction="faction.hatikvah" silent="true" decay="0.00000001" value="-0.7"/>
                                    <create_order object="$BoardedHatikvahShip" id="'Patrol'" default="true">
                                      <param name="space" value="$BoardedHatikvahShip.sector"/>
                                    </create_order>
                                  </actions>
                                </cue>
                                <cue name="Pt9_Aid_Boarded_Ship_Launches_Fighters">
                                  <conditions>
                                    <event_cue_completed cue="Pt9_Aid_Boarded_Ship_Change_Ownership"/>
                                  </conditions>
                                  <delay exact="2s"/>
                                  <actions>
                                    <!--TODO @Owen #important spawn fighters earlier-->
                                    <!--TODO @Owen #important stagger the launches so it's not all at once-->
                                    <do_all exact="1">
                                      <create_ship name="$Fighter" groupname="$ScalePlateFighters" dock="$BoardedHatikvahShip" capturable="false">
                                        <select faction="faction.scaleplate" size="class.ship_s" tags="tag.fighter"/>
                                        <owner exact="faction.scaleplate" overridenpc="true"/>
                                      </create_ship>
                                      <set_relation_boost object="$Fighter" faction="faction.player" silent="true" decay="0.00000001" value="-0.7"/>
                                      <set_relation_boost object="$Fighter" faction="faction.hatikvah" silent="true" decay="0.00000001" value="-0.7"/>
                                      <create_order object="$Fighter" id="'Patrol'" default="true">
                                        <param name="space" value="$Fighter.sector"/>
                                      </create_order>
                                    </do_all>
                                  </actions>
                                </cue>
                                <cue name="Pt9_Player_Fighting" instantiate="true">
                                  <conditions>
                                    <check_any>
                                      <event_object_attacked group="$ScalePlateFighters"/>
                                      <event_object_attacked object="$BoardedHatikvahShip"/>
                                    </check_any>
                                    <check_value value="@event.param.isplayerowned"/>
                                  </conditions>
                                  <actions>
                                    <set_value name="$PlayerFightingtime" exact="player.age"/>
                                  </actions>
                                </cue>
                                <cue name="Pt9_Escape_Pods_Attacked" instantiate="true">
                                  <conditions>
                                    <check_any>
                                      <event_object_attacked group="$EscapePods"/>
                                      <event_object_destroyed group="$EscapePods"/>
                                    </check_any>
                                  </conditions>
                                  <actions>
                                    <set_value name="$PodAttackTime" exact="player.age"/>
                                  </actions>
                                </cue>
                                <cue name="Pt9_Escape_Pods_Escaped" checkinterval="1s">
                                  <conditions>
                                    <check_any>
                                      <check_value value="player.age gt Pt9_Aid_Boarded_Ship_Protect_Pods.time + 10s and player.age gt $PodAttackTime + 60s and player.age gt $PlayerFightingtime + 60s"/>
                                      <check_value value="$EscapePods.count == 0"/>
                                    </check_any>
                                  </conditions>
                                  <actions>
                                    <debug_text text="'escaped'"/>
                                    <signal_cue cue="Pt9_Destroy_Scale_Plate_Fighters"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="Pt9_Destroy_Scale_Plate_Fighters">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <delay exact="5s"/>
                      <actions>
                        <!--TODO @Owen #important have another fight with Hatikvah Vs Scale Plate, and then trigger the Argon Police-->
                        <signal_cue cue="Pt9_Argon_Police"/>
                      </actions>
                    </cue>
                    <cue name="Pt9_Argon_Police">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <do_if value="not @$Argon_Police_Pilot.exists">
                          <create_cue_actor name="$Argon_Police_Pilot" cue="namespace" macro="character_argon_female_plot_cynth_wilems_macro">
                            <page exact="10107"/>
                            <owner exact="faction.argon"/>
                            <skills>
                              <skill type="management" exact="4"/>
                              <skill type="morale" exact="8"/>
                              <skill type="piloting" exact="9"/>
                              <skill type="engineering" exact="3"/>
                              <skill type="boarding" exact="5"/>
                            </skills>
                          </create_cue_actor>
                          <set_entity_traits entity="$Argon_Police_Pilot" missionactor="true" customhandler="true"/>
                        </do_if>
                      </actions>
                      <delay exact="2s"/>
                      <actions>
                        <speak actor="$Argon_Police_Pilot" priority="100" caninterrupt="false">
                          <text line="30202012" comment="This is Argon police."/>
                          <text line="30202013" comment="All Hatikvah ships are to disengage and return to secure Argon space."/>
                        </speak>
                      </actions>
                      <cues>
                        <cue name="Pt9_Argon_Police_Speak_Finished">
                          <conditions>
                            <event_speak_finished actor="$Argon_Police_Pilot"/>
                          </conditions>
                          <delay exact="1s"/>
                          <actions>
                            <!--
                            Captain, I suggest you get out of there.
                            The Argon are rounding up Hatikvah and Scale Plate alike.
                            Before they bring me in, I'll send you whatever payment you're owed.
                            This really did end up a mess.
                            If you see that Teladi bastu on your travels, fire a few missiles from me.
                            As for Dal, he's probably laying low for a reason. I'll send his last known co-ordinates.
                            Keep out of trouble.-->
                            <speak actor="$Reen" priority="100" caninterrupt="false" line="[                                if player.entity.isfemale then 30202118 else 30202117,                                30202119,                                1s,                                if player.entity.isfemale then 30202121 else 30202120,                                1s,                                30202122,                                if player.entity.isfemale then 30202124 else 30202123,                                30202125,                                30202126]"/>
                          </actions>
                          <cues>
                            <cue name="Pt9_Create_Dal_Wreck" instantiate="true">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <do_if value="not @$DalShipWreck.exists">
                                  <create_ship name="$DalShipWreck" capturable="false" macro="macro.ship_arg_m_miner_solid_01_b_macro" sector="$SpawnSector">
                                    <owner exact="faction.civilian"/>
                                    <safepos value="$SpawnPosition" max="1km"/>
                                  </create_ship>
                                  <destroy_object object="$DalShipWreck" explosion="true"/>
                                </do_if>
                              </actions>
                              <delay exact="if $FirstDalWreck then 1s else 0s"/>
                              <actions>
                                <set_objective cue="Start" step="2" action="objective.find" text="$Dal.knownname" object="$DalShipWreck" radius="5km" updatebriefing="true" silent="not $FirstDalWreck"/>
                                <set_value name="$FirstDalWreck" exact="false"/>
                              </actions>
                            </cue>
                            <cue name="Pt9_Find_Dal">
                              <conditions>
                                <event_speak_finished actor="$Reen"/>
                              </conditions>
                              <actions>
                                <!--Remove the invincibility request for the Hatikvah Station-->
                                <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                                  <param name="Object" value="$Hat_Station"/>
                                  <param name="RequesterCue" value="Start"/>
                                  <param name="DebugChance" value="$DebugChance"/>
                                </run_actions>
                                <assert value="not @$DalShip.exists" text="'At this point, Dals original ship should have been cleaned up while the player was not looking. Destroying it so we do not have two [Owen]'"/>
                                <do_if value="@$DalShip.exists and not player.entity.hascontext.{$DalShip}">
                                  <destroy_object object="$DalShip" explosion="false"/>
                                </do_if>
                                <set_value name="$SpawnSector" exact="$TroubledSectors.{1}"/>
                                <create_position name="$SpawnPosition" min="100km" max="120km" space="$SpawnSector"/>
                                <set_value name="$SpawnPosition" exact="position.[$SpawnPosition.x, [5km, 3km, -3km, -5km].random, $SpawnPosition.z]"/>
                                <!--TODO @Owen #important Better way of spawning a ship wreck and not having it autocleanup for mission reasons-->
                                <set_value name="$FirstDalWreck" exact="true"/>
                                <signal_cue cue="Pt9_Create_Dal_Wreck"/>
                                <do_all exact="3">
                                  <create_object groupname="$WreckObjects" macro="macro.env_debris_debris_m_01_macro" sector="$SpawnSector">
                                    <safepos value="$SpawnPosition" max="1km"/>
                                  </create_object>
                                </do_all>
                                <create_object name="$DalCrate" macro="macro.sm_gen_wares_rare_01_macro" sector="$SpawnSector">
                                  <safepos value="$SpawnPosition" max="50m"/>
                                </create_object>
                                <add_cargo object="$DalCrate" ware="ware.inv_unmarked_black_box" exact="1"/>
                              </actions>
                              <cues>
                                <cue name="Pt9_Dal_Wreck_Destroyed" instantiate="true" checkinterval="2s">
                                  <conditions>
                                    <check_value value="not @$DalShipWreck.exists"/>
                                  </conditions>
                                  <actions>
                                    <signal_cue cue="Pt9_Create_Dal_Wreck"/>
                                  </actions>
                                </cue>
                                <cue name="Pt9_Near_Wreck" checkinterval="1s">
                                  <conditions>
                                    <check_value value="$DalShipWreck.exists and player.sector == $DalShipWreck.sector and player.entity.distanceto.{$DalShipWreck} lt 7km"/>
                                  </conditions>
                                  <actions>
                                    <substitute_text text="$LogbookTitle" source="{30202,2051}">
                                      <replace string="'$SHIPID$'" with="$DalShipID"/>
                                    </substitute_text>
                                    <!--Betty: Ship within sensor range-->
                                    <speak actor="player.computer" priority="100" caninterrupt="false">
                                      <text line="2021"/>
                                      <text line="511"/>
                                    </speak>
                                  </actions>
                                  <cues>
                                    <cue name="Pt9_Near_Wreck_Speak_Finished">
                                      <conditions>
                                        <event_speak_finished actor="player.computer"/>
                                      </conditions>
                                      <cues>
                                        <cue name="Pt9_At_Wreck" checkinterval="1s">
                                          <conditions>
                                            <check_value value="$DalShipWreck.exists and player.sector == $DalShipWreck.sector and player.entity.distanceto.{$DalShipWreck} lt 4km"/>
                                          </conditions>
                                          <actions>
                                            <cancel_cue cue="Pt9_Dal_Wreck_Destroyed"/>
                                            <play_sound sound="'ui_hud_soft_scan_pos_core'" type="ui"/>
                                            <set_value name="$CrateCollected" exact="false"/>
                                          </actions>
                                          <delay exact="2s"/>
                                          <actions>
                                            <!--No life signs detected-->
                                            <speak actor="player.computer" line="563" priority="100" caninterrupt="false"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt9_No_Crate">
                                              <conditions>
                                                <event_speak_finished actor="player.computer"/>
                                                <check_value value="not $DalCrate.exists"/>
                                              </conditions>
                                              <actions>
                                                <!--Logbook entry added-->
                                                <speak actor="player.computer" priority="100" caninterrupt="false">
                                                  <text page="10002" line="2004" delay="1s"/>
                                                  <text page="10002" line="2005"/>
                                                </speak>
                                                <write_to_logbook category="missions" faction="faction.player" highlighted="true" title="$LogbookTitle" text="{30202,2053}"/>
                                                <remove_mission cue="Start" type="completed"/>
                                                <!--End of part 9-->
                                                <signal_cue cue="Pt10_Interloper"/>
                                                <cancel_cue cue="Pt9_Breakdown"/>
                                              </actions>
                                            </cue>
                                            <cue name="Pt9_Pickup_Crate">
                                              <conditions>
                                                <event_speak_finished actor="player.computer"/>
                                                <check_value value="$DalCrate.exists"/>
                                              </conditions>
                                              <delay exact="1s"/>
                                              <actions>
                                                <cancel_cue cue="Pt9_No_Crate"/>
                                                <!--Unmarked Black Box
                                                Detected-->
                                                <speak actor="player.computer">
                                                  <text page="20201" line="50301"/>
                                                  <text page="10002" line="503"/>
                                                </speak>
                                              </actions>
                                              <delay exact="2s"/>
                                              <actions>
                                                <set_objective cue="Start" step="3" action="objective.pickup" text="ware.inv_unmarked_black_box.name" object="$DalCrate" updatebriefing="true"/>
                                              </actions>
                                              <cues>
                                                <cue name="Pt9_Crate_Collected">
                                                  <conditions>
                                                    <event_object_destroyed object="$DalCrate" method="killmethod.collected"/>
                                                  </conditions>
                                                  <actions>
                                                    <do_if value="@event.param.isplayerowned and event.param2 == killmethod.collected">
                                                      <set_value name="$CrateCollected" exact="true"/>
                                                    </do_if>
                                                  </actions>
                                                </cue>
                                                <cue name="Pt9_Crate_Was_Destroyed" checkinterval="1s">
                                                  <conditions>
                                                    <check_value value="Pt9_Pickup_Crate.state == cuestate.complete and not $DalCrate.exists and not $CrateCollected"/>
                                                  </conditions>
                                                  <actions>
                                                    <cancel_cue cue="Pt9_Crate_Was_Collected"/>
                                                    <write_to_logbook category="missions" faction="faction.player" highlighted="true" title="$LogbookTitle" text="{30202,2053}"/>
                                                    <remove_mission cue="Start" type="completed"/>
                                                    <!--End of part 9-->
                                                    <signal_cue cue="Pt10_Interloper"/>
                                                    <cancel_cue cue="Pt9_Breakdown"/>
                                                  </actions>
                                                </cue>
                                                <cue name="Pt9_Crate_Was_Collected" checkinterval="1s">
                                                  <conditions>
                                                    <check_value value="Pt9_Pickup_Crate.state == cuestate.complete and not $DalCrate.exists and $CrateCollected"/>
                                                  </conditions>
                                                  <delay exact="1s"/>
                                                  <actions>
                                                    <cancel_cue cue="Pt9_Crate_Was_Destroyed"/>
                                                    <!--Black box decrypted
                                                    Logbook entry added-->
                                                    <speak actor="player.computer" priority="100" caninterrupt="false">
                                                      <text page="20201" line="50301"/>
                                                      <text page="10002" line="809"/>
                                                      <text page="10002" line="2004" delay="1s"/>
                                                      <text page="10002" line="2005"/>
                                                    </speak>
                                                  </actions>
                                                  <cues>
                                                    <cue name="Pt9_Blackbox_Data">
                                                      <conditions>
                                                        <event_speak_finished actor="player.computer"/>
                                                      </conditions>
                                                      <delay exact="0.5s"/>
                                                      <actions>
                                                        <set_value name="$DalShipID" exact="$DalShip.idcode"/>
                                                        <write_to_logbook category="missions" faction="faction.player" highlighted="true" title="$LogbookTitle" text="{30202,2054}"/>
                                                        <remove_mission cue="Start" type="completed"/>
                                                        <!--End of part 9-->
                                                        <signal_cue cue="Pt10_Interloper"/>
                                                        <cancel_cue cue="Pt9_Breakdown"/>
                                                      </actions>
                                                    </cue>
                                                  </cues>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Part 10 - Interloper-->
        <cue name="Pt10_Force">
          <force name="Plot_Diplomat_Pt10">
            <signal_cue_instantly cue="Force_Part" param="Pt10_Interloper"/>
          </force>
        </cue>
        <cue name="Pt10_Interloper">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <set_entity_traits entity="$Dal" subtitlename="true"/>
              <!--TODO @Owen #important make sure all characters are cleaned up and in the correct places by the end of the story-->
              <do_if value="md.$PersistentCharacters.$BosoTa.exists and not @md.X4Ep1_Mentor_Subscriptions.Start.$BoronMet">
                <set_value name="md.X4Ep1_Mentor_Subscriptions.Start.$BoronMet" exact="true"/>
              </do_if>
            </do_if>
            <set_value name="$BosoAlreadyMet" exact="@md.X4Ep1_Mentor_Subscriptions.Start.$BoronMet"/>
            <unlock_achievement name="PLOT_HATIKVAH" comment="That Could Have Gone Better"/>
          </actions>
          <cues>
            <cue name="Pt10_Boso_Met" checkinterval="1s">
              <conditions>
                <check_value value="md.$PersistentCharacters.$BosoTa.exists and @md.X4Ep1_Mentor_Subscriptions.Start.$BoronMet"/>
              </conditions>
              <actions>
                <set_value name="$Boso" exact="md.$PersistentCharacters.$BosoTa"/>
                <set_entity_traits entity="$Boso" subtitlename="true"/>
                <do_if value="$Forced">
                  <set_value name="$InterruptTime" exact="player.age + 2s"/>
                </do_if>
                <do_elseif value="$BosoAlreadyMet">
                  <set_value name="$InterruptTime" exact="player.age + 10min"/>
                </do_elseif>
                <do_else>
                  <set_value name="$InterruptTime" exact="player.age + 20min"/>
                </do_else>
              </actions>
              <cues>
                <cue name="Pt10_Boso_Interrupts" checkinterval="20s">
                  <conditions>
                    <check_value value="player.age gt $InterruptTime and not player.isinconversation and player.headquarters.isoperational and not player.entity.hascontext.{player.headquarters}"/>
                  </conditions>
                  <actions>
                    <set_value name="$HQ" exact="player.headquarters"/>
                    <speak actor="$Boso" caninterrupt="false" priority="100">
                      <text line="if player.entity.isfemale then 30202101 else 30202100"/>
                      <text line="30202102" delay="2s" comment="Well, I suppose you don't know that many other Boron."/>
                      <text line="30202103"/>
                      <text line="if player.entity.isfemale then 30202105 else 30202104"/>
                    </speak>
                  </actions>
                  <cues>
                    <cue name="Pt10_TalkTo_Boso">
                      <conditions>
                        <event_speak_finished actor="$Boso"/>
                      </conditions>
                      <delay exact="1s"/>
                      <actions>
                        <create_mission cue="Start" abortable="false" name="{30202,1111}" description="if player.entity.isfemale then {30202,1112} else {30202,1111}" type="missiontype.plot" faction="faction.player"/>
                        <set_objective cue="Start" step="1" action="objective.talkto" object="$Boso" updatebriefing="true"/>
                      </actions>
                      <cues>
                        <cue name="Pt10_Near_Boso" checkinterval="50ms">
                          <conditions>
                            <check_value value="player.room == $Boso.room and $Boso.hascontext.{$HQ}"/>
                          </conditions>
                          <actions>
                            <!--TODO @Owen would be better to have another way of stopping a conversation from starting-->
                            <!--Suppress the mentor mission conversation handler-->
                            <set_value name="md.X4Ep1_Mentor_Subscriptions.Start.$SuppressBosoConversation" exact="true"/>
                            <!--Would have been nice to have this line 'Quickly, come in.' as the player approaches before the cutscene but a bit tricky. Will just have during the cutscene.-->
                            <!--<speak actor="$Boso" line="30202106" caninterrupt="false" priority="100"/>-->
                          </actions>
                          <cues>
                            <cue name="Pt10_Cutscene" checkinterval="10ms">
                              <conditions>
                                <check_value value="not player.isinconversation"/>
                              </conditions>
                              <actions>
                                <remove_value name="md.X4Ep1_Mentor_Subscriptions.Start.$SuppressBosoConversation"/>
                                <set_value name="$LastCutsceneKey" exact="'Story_Diplomacy_Intro_6'"/>
                                <set_value name="$ShotMaxDuration" exact="7s"/>
                                <set_value name="$CutsceneRoom" exact="$Boso.room"/>
                                <play_cutscene result="$LastCutscene" key="$LastCutsceneKey">
                                  <param name="room" object="$CutsceneRoom"/>
                                </play_cutscene>
                                <add_actor_to_room actor="player.entity" object="$Boso.room">
                                  <position x="0.25m" y="1.808m" z="-3.5m"/>
                                  <rotation yaw="-175deg"/>
                                </add_actor_to_room>
                              </actions>
                              <delay exact="100ms"/>
                              <actions>
                                <speak actor="$Boso" caninterrupt="false" priority="100">
                                  <text line="30202106"/>
                                  <text line="30202107"/>
                                  <text line="30202108"/>
                                  <text line="30202109"/>
                                </speak>
                                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                               table[                                               $requestercue = namespace,                                               $location = $Boso.room,                                               $priority = 100,                                               $position = position.[-0.06m, 0.05m, -0.5m],                                               $rotation = rotation.[175deg, 0deg, 0deg],                                               $debugchance = $DebugChance2,                                               $debugcaller = if $DebugChance2 == 100 then this else null]                                               ]"/>
                              </actions>
                              <cues>
                                <cue name="Pt10_Dal_Shot">
                                  <conditions>
                                    <event_speak_finished actor="$Boso"/>
                                  </conditions>
                                  <delay exact="200ms"/>
                                  <actions>
                                    <set_value name="$CutsceneEvent" exact="'Boso1End'"/>
                                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                    <set_value name="$CutsceneEvent" exact="'Dal1Start'"/>
                                    <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                    <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                    <speak actor="$Dal" caninterrupt="false" priority="100">
                                      <text line="30202193"/>
                                      <text line="30202194"/>
                                      <text line="if player.entity.isfemale then 30202196 else 30202195" delay="1s"/>
                                    </speak>
                                  </actions>
                                  <delay exact="1s"/>
                                  <actions>
                                    <start_actor_sequence actor="player.entity" type="'turnright180'" transition="false" behavior="'generic'"/>
                                  </actions>
                                  <cues>
                                    <cue name="Pt10_Stop_Player_Turn">
                                      <conditions>
                                        <event_character_animation_finished object="player.entity" id="'anim_turnright180_01'"/>
                                      </conditions>
                                      <actions>
                                        <start_actor_sequence actor="player.entity" type="'idle'" transition="false" behavior="'generic'"/>
                                      </actions>
                                    </cue>
                                    <cue name="Pt10_Group_Shot">
                                      <conditions>
                                        <event_speak_finished actor="$Dal"/>
                                      </conditions>
                                      <delay exact="1s"/>
                                      <actions>
                                        <set_value name="$CutsceneEvent" exact="'Dal1End'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                        <set_value name="$CutsceneEvent" exact="'Group1Start'"/>
                                        <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                        <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                      </actions>
                                      <delay exact="50ms"/>
                                      <actions>
                                        <speak actor="$Boso" line="30202110"/>
                                      </actions>
                                      <cues>
                                        <cue name="Pt10_Dal_Shot_2">
                                          <conditions>
                                            <event_speak_finished actor="$Boso"/>
                                          </conditions>
                                          <delay exact="500ms"/>
                                          <actions>
                                            <set_value name="$CutsceneEvent" exact="'Group1End'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                            <set_value name="$CutsceneEvent" exact="'Dal2Start'"/>
                                            <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                            <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                          </actions>
                                          <delay exact="500ms"/>
                                          <actions>
                                            <speak actor="$Dal" caninterrupt="false" priority="100">
                                              <text line="30202197"/>
                                              <text line="30202198"/>
                                            </speak>
                                          </actions>
                                          <delay exact="1s"/>
                                          <actions>
                                            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                               table[                                               $requestercue = namespace,                                               $location = $Boso.room,                                               $priority = 100,                                               $position = position.[-0.45m, 0.05m, -2.9m],                                               $rotation = rotation.[155deg, 0deg, 0deg],                                               $debugchance = $DebugChance2,                                               $debugcaller = if $DebugChance2 == 100 then this else null]                                               ]"/>
                                          </actions>
                                          <cues>
                                            <cue name="Pt10_Cutscene_End">
                                              <conditions>
                                                <event_speak_finished actor="$Dal"/>
                                              </conditions>
                                              <actions>
                                                <set_value name="$CutsceneEvent" exact="'Dal2End'"/>
                                                <debug_text text="player.age + ' Signal cutscene with: ' + $CutsceneEvent" chance="$DebugChance"/>
                                                <cutscene_event key="$LastCutsceneKey" event="$CutsceneEvent"/>
                                                <add_actor_to_room actor="player.entity" object="$Boso.room">
                                                  <position x="0.25m" y="1.808m" z="-3.5m"/>
                                                  <rotation yaw="-50deg"/>
                                                </add_actor_to_room>
                                                <set_value name="$DalPresentedOffer" exact="false"/>
                                                <start_conversation actor="$Dal" conversation="hq_meet"/>
                                              </actions>
                                            </cue>
                                            <cue name="Pt10_Dal_Conv_Start" instantiate="true">
                                              <conditions>
                                                <event_conversation_started actor="$Dal"/>
                                              </conditions>
                                              <actions>
                                                <do_if value="$DalPresentedOffer">
                                                  <add_npc_line speaker="$Dal" line="30202222" hidechoices="true"/>
                                                  <add_player_choice text="{30202,724}" section="dal_hq_stay"/>
                                                  <add_player_choice text="{30202,725}" section="dal_hq_bye"/>
                                                </do_if>
                                                <do_else>
                                                  <add_player_choice text="{30202,726}" section="dal_hq_what_happened"/>
                                                </do_else>
                                              </actions>
                                            </cue>
                                            <cue name="Pt10_Dal_Conv_Next" instantiate="true">
                                              <conditions>
                                                <event_conversation_next_section actor="$Dal"/>
                                              </conditions>
                                              <actions>
                                                <do_if value="event.param == 'dal_hq_what_happened'">
                                                  <add_npc_line speaker="$Dal" line="30202199" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202200" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202201" hidechoices="true"/>
                                                  <add_player_choice text="{30202,727}" section="dal_hq_reed"/>
                                                </do_if>
                                                <do_elseif value="event.param == 'dal_hq_reed'">
                                                  <add_npc_line speaker="$Dal" line="30202202" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202203" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202204" hidechoices="true"/>
                                                  <add_npc_line speaker="$Boso" line="30202111" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202205" hidechoices="true"/>
                                                  <add_player_choice text="{30202,728}" section="dal_hq_why_are_you_here"/>
                                                </do_elseif>
                                                <do_elseif value="event.param == 'dal_hq_why_are_you_here'">
                                                  <add_npc_line speaker="$Dal" line="30202206" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202207" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202209 else 30202208" hidechoices="true"/>
                                                  <add_npc_line speaker="$Boso" line="30202112" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202210" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202212 else 30202211" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202214 else 30202213" hidechoices="true"/>
                                                  <add_player_choice text="{30202,729}" section="dal_hq_lets_try"/>
                                                  <add_player_choice text="{30202,730}" section="dal_hq_think_about_it"/>
                                                </do_elseif>
                                                <do_elseif value="event.param == 'dal_hq_lets_try' or event.param == 'dal_hq_stay'">
                                                  <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202216 else 30202215" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202217" hidechoices="true"/>
                                                  <add_npc_line speaker="$Boso" line="30202113" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202218" hidechoices="true"/>
                                                  <unlock_achievement name="UNINVITED_GUEST" comment="Did I Forget To Lock The Door?"/>
                                                  <!--End of part 10-->
                                                  <signal_cue cue="Pt11_End"/>
                                                  <cancel_cue cue="Pt10_Interloper"/>
                                                </do_elseif>
                                                <do_elseif value="event.param == 'dal_hq_think_about_it'">
                                                  <add_npc_line speaker="$Dal" line="if player.entity.isfemale then 30202220 else 30202219" hidechoices="true"/>
                                                  <add_npc_line speaker="$Dal" line="30202221" hidechoices="true"/>
                                                  <add_npc_line speaker="$Boso" line="30202114" hidechoices="true"/>
                                                  <set_value name="$DalPresentedOffer" exact="true"/>
                                                </do_elseif>
                                                <do_elseif value="event.param == 'dal_hq_bye'">
                                                  <add_npc_line speaker="$Dal" line="30202223" hidechoices="true"/>
                                                </do_elseif>
                                              </actions>
                                            </cue>
                                            <cue name="Pt10_Dal_Conv_End">
                                              <conditions>
                                                <event_conversation_finished actor="$Dal"/>
                                              </conditions>
                                              <delay exact="1s"/>
                                              <actions>
                                                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                                   table[                                                   $requestercue = namespace,                                                   $location = $Boso.room,                                                   $priority = 100,                                                   $position = position.[-3.17m, 0.05m, -5.0m],                                                   $rotation = rotation.[90deg, 0deg, 0deg],                                                   $debugchance = $DebugChance2,                                                   $debugcaller = if $DebugChance2 == 100 then this else null]                                                   ]"/>
                                                <set_objective cue="Start" step="1" action="objective.talkto" object="$Dal" updatebriefing="true"/>
                                              </actions>
                                            </cue>
                                            <cue name="PATCH_Pt10_New_HQ_Room_Delayed_Check_Once">
                                              <actions>
                                                <signal_cue cue="PATCH_Pt10_New_HQ_Room_Delayed_Check_Repeat"/>
                                              </actions>
                                            </cue>
                                            <!--Note: When the source of the issue is fixed, the actions of PATCH_Pt10_New_HQ_Room_Delayed_Check_Repeat shouldn't need to be instantiated anymore. It should still run one more time.-->
                                            <cue name="PATCH_Pt10_New_HQ_Room_Delayed_Check_Repeat" instantiate="true">
                                              <conditions>
                                                <check_any>
                                                  <event_game_loaded/>
                                                  <event_cue_signalled/>
                                                </check_any>
                                                <check_value value="not $Boso.exists or not $Dal.exists or $Boso.room != $Dal.room"/>
                                              </conditions>
                                              <!--give it some time for the patch in x4ep1_mentor_subscription to add the new HQ room-->
                                              <delay exact="1s"/>
                                              <actions>
                                                <signal_cue cue="PATCH_Pt10_New_HQ_Room_v2"/>
                                              </actions>
                                            </cue>
                                            <cue name="PATCH_Pt10_New_HQ_Room_v2" instantiate="true">
                                              <conditions>
                                                <check_any>
                                                  <event_cue_signalled/>
                                                  <event_object_signalled object="$Dal" param="'new_hq_interior'"/>
                                                </check_any>
                                              </conditions>
                                              <actions>
                                                <do_if value="event.name == 'event_cue_signalled'">
                                                  <set_value name="this.$Room" exact="$Boso.room"/>
                                                </do_if>
                                                <do_else>
                                                  <set_value name="this.$Room" exact="event.param2"/>
                                                </do_else>
                                                <debug_text text="'The original HQ lab room was removed. New room ' + this.$Room + ' will now hold Dal.'" filter="savegame"/>
                                                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['remove_request', $Dal, namespace]"/>
                                                <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                                   table[                                                   $requestercue = namespace,                                                   $location = this.$Room,                                                   $priority = 100,                                                   $position = position.[-3.17m, 0.05m, -5.0m],                                                   $rotation = rotation.[90deg, 0deg, 0deg],                                                   $debugchance = $DebugChance2,                                                   $debugcaller = if $DebugChance2 == 100 then this else null]                                                   ]"/>
                                              </actions>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--Part 11 - End-->
        <cue name="Pt11_Force">
          <force name="Plot_Diplomat_Pt11">
            <signal_cue_instantly cue="Force_Part" param="Pt11_End"/>
          </force>
        </cue>
        <cue name="Pt11_Skip">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <cues>
            <cue name="Pt_11_Skip_Trigger" checkinterval="1s">
              <conditions>
                <check_value value="player.headquarters"/>
                <count_object_components min="1" macro="macro.room_gen_boronoffice_01_macro" object="player.headquarters"/>
              </conditions>
              <actions>
                <set_value name="$HQ" exact="player.headquarters"/>
                <signal_cue cue="Pt11_End"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <library name="SetDalDefaultHQLocation">
          <actions>
            <signal_cue_instantly cue="md.X4Ep1_Mentor_Subscriptions.Add_Player_Office_Trophy" param="tag.trophy_story_diplomacy_dal"/>
            <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                               table[                               $requestercue = namespace,                               $location = $HQ_Room,                               $priority = 70,                               $position = position.[-3.17m, 0.05m, -5.0m],                               $rotation = rotation.[90deg, 0deg, 0deg],                               $debugchance = $DebugChance2,                               $debugcaller = if $DebugChance2 == 100 then this else null]                               ]"/>
          </actions>
        </library>
        <cue name="Pt11_End" version="4">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <debug_text text="'Starting part ' + this" chance="$DebugChance"/>
            <set_value name="$CurrentPartCue" exact="this"/>
            <set_value name="$Forced" exact="@event.param.$forced"/>
            <do_if value="$Forced">
              <do_if value="not player.headquarters">
                <signal_cue_instantly cue="md.X4Ep1_Mentor_Subscriptions.Debug_Create_HQ_With_Mentors" param="false"/>
              </do_if>
              <set_value name="$HQ" exact="player.headquarters"/>
            </do_if>
            <remove_mission cue="Start" type="completed"/>
          </actions>
          <delay exact="if $Forced then 5s else 1ms"/>
          <actions>
            <find_object_component name="$HQ_Room" macro="macro.room_gen_boronoffice_01_macro" object="player.headquarters" required="true"/>
            <include_actions ref="SetDalDefaultHQLocation"/>
            <set_userdata storystate="'story_hq_dal'" value="1"/>
          </actions>
          <patch sinceversion="3" state="complete">
            <include_actions ref="SetDalDefaultHQLocation"/>
          </patch>
          <patch sinceversion="4" state="complete">
            <!--Removed-->
          </patch>
          <cues>
            <cue name="PATCH_Pt11_New_HQ_Room_Delayed_Check_Once">
              <actions>
                <signal_cue cue="PATCH_Pt11_New_HQ_Room_Delayed_Check_Repeat"/>
              </actions>
            </cue>
            <!--Note: When the source of the issue is fixed, the actions of PATCH_Pt11_New_HQ_Room_Delayed_Check_Repeat shouldn't need to be instantiated anymore. It should still run one more time.-->
            <cue name="PATCH_Pt11_New_HQ_Room_Delayed_Check_Repeat" instantiate="true">
              <conditions>
                <check_any>
                  <event_game_loaded/>
                  <event_cue_signalled/>
                </check_any>
                <check_value value="not @$HQ_Room.exists and Pt11_End.state == cuestate.complete"/>
              </conditions>
              <!--give it some time for the patch in x4ep1_mentor_subscription to add the new HQ room-->
              <delay exact="1s"/>
              <actions>
                <signal_cue cue="PATCH_Pt11_New_HQ_Room_v2"/>
              </actions>
            </cue>
            <cue name="PATCH_Pt11_New_HQ_Room_v2" instantiate="true">
              <conditions>
                <check_any>
                  <event_cue_signalled/>
                  <event_object_signalled object="$Dal" param="'new_hq_interior'"/>
                </check_any>
                <check_value value="player.headquarters"/>
              </conditions>
              <actions>
                <do_if value="event.name == 'event_cue_signalled'">
                  <find_object_component name="$HQ_Room" macro="macro.room_gen_boronoffice_01_macro" object="player.headquarters" required="true"/>
                </do_if>
                <do_else>
                  <set_value name="$HQ_Room" exact="event.param2"/>
                </do_else>
                <do_if value="$HQ_Room">
                  <debug_text text="'The original HQ lab room was removed. New room ' + $HQ_Room + ' will now hold Dal.'" filter="savegame"/>
                  <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['remove_request', $Dal, namespace]"/>
                  <include_actions ref="SetDalDefaultHQLocation"/>
                </do_if>
                <do_else>
                  <assert value="false" text="'No new HQ room was found to replace the old one [Owen]'"/>
                </do_else>
                <do_if value="Pt11_Dal_MovedIn.state == cuestate.complete">
                  <find_object_component name="$PropFound" macro="[macro.props_01_room_gen_boronoffice_01_macro, macro.props_02_room_gen_boronoffice_01_macro]" object="player.headquarters"/>
                  <do_if value="not $PropFound">
                    <do_if value="                            md.Story_Paranid.Sinks_Unification_Stage_1.state == cuestate.complete or                             md.Story_Paranid.Sinks_Unification_Stage_1.state == cuestate.cancelled or                            md.Story_Paranid.Sinks_Escalation_Stage_1.state == cuestate.complete or                             md.Story_Paranid.Sinks_Escalation_Stage_1.state == cuestate.cancelled">
                      <signal_cue cue="Dal_DeskBusy"/>
                    </do_if>
                    <do_else>
                      <signal_cue cue="Dal_DeskClean"/>
                    </do_else>
                  </do_if>
                </do_if>
              </actions>
            </cue>
            <cue name="Pt11_Dal_MovedIn" checktime="player.age + 15min" checkinterval="60s">
              <conditions>
                <check_value value="not player.entity.hascontext.{$HQ}"/>
              </conditions>
              <actions>
                <signal_cue cue="Dal_DeskClean"/>
              </actions>
            </cue>
            <cue name="Pt11_Dal_Conversation" instantiate="true">
              <conditions>
                <event_conversation_started actor="$Dal"/>
              </conditions>
              <actions>
                <add_npc_line speaker="$Dal" line="30202222"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <!--Libraries-->
        <library name="Find_Hatikvah_Station">
          <actions>
            <do_if value="$Hat_Station.isoperational">
              <debug_text text="'Hatikvah station: ' + $Hat_Station + ' ' + $Hat_Station.knownname + ' in ' + $Hat_Station.sector.knownname + ' is still operational. Use it.'" chance="$DebugChance"/>
            </do_if>
            <do_else>
              <set_value name="$Hat_Station" exact="null"/>
              <set_value name="this.$Hat_HQ" exact="faction.hatikvah.headquarters"/>
              <do_if value="this.$Hat_HQ.isoperational">
                <do_all exact="$PreferableHatikvahSectors.count" counter="$fhs_i">
                  <do_if value="this.$Hat_HQ.hascontext.{$PreferableHatikvahSectors.{$fhs_i}}">
                    <set_value name="$Hat_Station" exact="this.$Hat_HQ"/>
                    <debug_text text="'Using Hatikvah HQ as mission station: ' + $Hat_Station + ' ' + $Hat_Station.knownname + ' in ' + $Hat_Station.sector.knownname" chance="$DebugChance"/>
                    <break/>
                  </do_if>
                </do_all>
              </do_if>
              <do_if value="not $Hat_Station">
                <do_all exact="$PreferableHatikvahSectors.count" counter="$fhs_i">
                  <find_station_by_true_owner name="$Hat_Station" faction="faction.hatikvah" space="$PreferableHatikvahSectors.{$fhs_i}"/>
                  <do_if value="$Hat_Station">
                    <debug_text text="'Using Hatikvah owned station as mission station: ' + $Hat_Station + ' ' + $Hat_Station.knownname + ' in ' + $Hat_Station.sector.knownname" chance="$DebugChance"/>
                    <break/>
                  </do_if>
                </do_all>
              </do_if>
              <do_if value="not $Hat_Station">
                <find_station_by_true_owner name="$Hat_Station" faction="faction.hatikvah" space="player.galaxy"/>
                <do_if value="$Hat_Station">
                  <debug_text text="'Using Hatikvah owned station as mission station: ' + $Hat_Station + ' ' + $Hat_Station.knownname + ' in ' + $Hat_Station.sector.knownname" chance="$DebugChance"/>
                  <break/>
                </do_if>
              </do_if>
              <do_if value="not $Hat_Station">
                <debug_text text="'No Hatikvah owned station could be found for the mission'" chance="$DebugChance"/>
              </do_if>
              <remove_value name="this.$Hat_HQ"/>
            </do_else>
          </actions>
        </library>
        <cue name="Dal_RemoveDesk" instantiate="true">
          <conditions>
            <event_cue_signalled/>
            <check_value value="player.headquarters"/>
          </conditions>
          <actions>
            <find_object_component name="$PropFound" macro="[macro.props_01_room_gen_boronoffice_01_macro, macro.props_02_room_gen_boronoffice_01_macro]" object="player.headquarters"/>
            <do_if value="$PropFound">
              <debug_text text="'removing props_02_room_gen_boronoffice_01_macro'"/>
              <destroy_object object="$PropFound"/>
            </do_if>
          </actions>
        </cue>
        <cue name="Dal_DeskClean" instantiate="true">
          <conditions>
            <event_cue_signalled/>
            <check_value value="player.headquarters"/>
          </conditions>
          <actions>
            <!-- remove desk with many notes, if it exists -->
            <find_object_component name="$PropFound" macro="[macro.props_02_room_gen_boronoffice_01_macro]" object="player.headquarters"/>
            <do_if value="$PropFound">
              <debug_text text="'removing props_02_room_gen_boronoffice_01_macro'"/>
              <destroy_object object="$PropFound"/>
            </do_if>
          </actions>
          <delay exact="1ms"/>
          <actions>
            <!-- either desk with few notes exists already, or we spawn it -->
            <find_object_component name="$PropFound2" macro="[macro.props_01_room_gen_boronoffice_01_macro]" object="player.headquarters"/>
            <do_if value="not $PropFound2">
              <get_room_definition macro="$RoomMacro" doors="$RoomDoors" tags="tag.bosotank"/>
              <find_room name="$PlayerHQ_BoronRoom" object="$HQ" macro="$RoomMacro"/>
              <find_prop_slot name="$PlayerHQ_PropSlot" room="$PlayerHQ_BoronRoom" tags="tag.prop_dal_computer"/>
              <do_if value="$PlayerHQ_PropSlot">
                <create_prop name="$Prop" slot="$PlayerHQ_PropSlot" macro="macro.props_01_room_gen_boronoffice_01_macro"/>
              </do_if>
            </do_if>
          </actions>
        </cue>
        <cue name="Dal_DeskBusy" instantiate="true">
          <conditions>
            <event_cue_signalled/>
            <check_value value="player.headquarters"/>
          </conditions>
          <actions>
            <!-- remove desk with a few notes, if it exists -->
            <find_object_component name="$PropFound" macro="[macro.props_01_room_gen_boronoffice_01_macro]" object="player.headquarters"/>
            <do_if value="$PropFound">
              <debug_text text="'removing props_01_room_gen_boronoffice_01_macro'"/>
              <destroy_object object="$PropFound"/>
            </do_if>
          </actions>
          <delay exact="1ms"/>
          <actions>
            <!-- either desk with lots of notes exists already, or we spawn it -->
            <find_object_component name="$PropFound2" macro="[macro.props_02_room_gen_boronoffice_01_macro]" object="player.headquarters"/>
            <do_if value="not $PropFound2">
              <get_room_definition macro="$RoomMacro" doors="$RoomDoors" tags="tag.bosotank"/>
              <find_room name="$PlayerHQ_BoronRoom" object="player.headquarters" macro="$RoomMacro"/>
              <find_prop_slot name="$PlayerHQ_PropSlot" room="$PlayerHQ_BoronRoom" tags="tag.prop_dal_computer"/>
              <do_if value="$PlayerHQ_PropSlot">
                <create_prop name="$Prop" slot="$PlayerHQ_PropSlot" macro="macro.props_02_room_gen_boronoffice_01_macro"/>
              </do_if>
            </do_if>
          </actions>
        </cue>
      </cues>
    </cue>
  </cues>
</mdscript>
