<?xml version='1.0' encoding='utf-8'?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Showcases" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>
    <!--P1-TODO: Check all showcases work. Find suitable zones-->
    <cue name="SC0_StartScenario" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_b_sector04_zone31_macro" required="true" />-->
        <set_value name="$zone" exact="player.zone"/>
        <warp object="player.ship" zone="$zone">
          <position x="-4850m" y="0m" z="-5223.3m"/>
          <rotation yaw="14.1deg" pitch="-3deg"/>
        </warp>
        <!-- Reset weapons to default -->
        <!--TODO @Owen #Legacy-->
        <get_loadout result="$loadout" loadout="'default'" macro="player.ship.macro"/>
        <apply_loadout object="player.ship" loadout="$loadout"/>
        <include_actions ref="md.Setup.RemovePlayerWeapons"/>
        <!-- Repair all damage -->
        <set_object_hull object="player.ship" exact="100"/>
        <find_object_component name="$components" object="player.ship" multiple="true">
          <match_parent macro="player.ship.macro"/>
          <match_any>
            <match class="class.weapon" tag="tag.primary"/>
            <match class="class.engine"/>
            <match class="class.shieldgenerator"/>
          </match_any>
        </find_object_component>
        <do_all exact="$components.count" counter="$i">
          <set_object_hull object="$components.{$i}" exact="100"/>
        </do_all>
        <!-- Abort any running showcase mission -->
        <include_actions ref="AbortMission"/>
      </actions>
      <force name="A_Showcase 0: Warp back to beginning"/>
    </cue>
    <cue name="SC1_DamagedPlayerShip" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_b_sector07_zone08_macro" required="true" />-->
        <set_value name="$zone" exact="player.zone"/>
        <warp object="player.ship" zone="$zone">
          <position x="7000m" y="500m" z="-7500m"/>
          <rotation yaw="15deg"/>
        </warp>
        <!-- Equipment -->
        <!--TODO @Owen Replace with loadouts-->
        <!--
        <include_actions ref="md.Setup.RemovePlayerWeapons" />
        <equip_weapon object="player.ship" macro="macro.weapon_player_impulse_mk1_macro" />
        -->
        <!-- Damage -->
        <set_object_hull object="player.ship" exact="90"/>
        <find_object_component name="$components" object="player.ship" multiple="true">
          <match_parent macro="player.ship.macro"/>
          <match_any>
            <match class="class.weapon" tag="tag.primary"/>
            <match class="class.engine"/>
            <match class="class.shieldgenerator"/>
          </match_any>
        </find_object_component>
        <do_all exact="$components.count" counter="$i">
          <set_object_hull object="$components.{$i}" exact="75"/>
        </do_all>
        <!-- Abort any running showcase mission -->
        <include_actions ref="AbortMission"/>
      </actions>
      <force name="A_Showcase 1: Repair and equip ship"/>
    </cue>
    <cue name="SC2_PlayerTrading" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_b_sector04_zone30_macro" required="true" />-->
        <set_value name="$zone" exact="player.zone"/>
        <set_value name="$PlayerPos" exact="position.[-400m, -500m, 7500m]"/>
        <set_value name="$PlayerRot" exact="rotation.[90deg, 0, 0]"/>
        <warp object="player.ship" zone="$zone">
          <position value="$PlayerPos"/>
          <rotation value="$PlayerRot"/>
        </warp>
        <transform_position name="$FreighterPos" refposition="$PlayerPos" refrotation="$PlayerRot">
          <position z="4km"/>
        </transform_position>
        <!-- Spawn trading ships (and remove previously created ones) -->
        <do_if value="static.$group?">
          <destroy_group group="static.$group"/>
        </do_if>
        <create_group groupname="static.$group"/>
        <create_ship name="$ship" groupname="static.$group" macro="ship_arg_l_trans_container_01_a_macro" zone="$zone">
          <owner exact="faction.player" overridenpc="true"/>
          <pilot>
            <select faction="faction.argon" tags="[tag.commander]"/>
          </pilot>
          <units>
            <unit category="unitcategory.transport" mk="1" exact="50"/>
            <unit category="unitcategory.orecollector" mk="1" exact="50"/>
          </units>
          <safepos value="$FreighterPos"/>
          <rotation yaw="90deg"/>
        </create_ship>
        <!-- One of the ships gets food rations -->
        <add_cargo object="static.$group.{1}" ware="ware.foodrations" exact="2000"/>
        <set_value name="$Types" exact="[tag.bulk, tag.liquid, tag.container, tag.energy]"/>
        <do_all exact="$Types.count" counter="$i">
          <create_ship name="$ship" groupname="static.$group" zone="$zone">
            <select size="class.ship_l" tags="$Types.{$i}"/>
            <owner exact="faction.player" overridenpc="true"/>
            <pilot>
              <select faction="faction.argon" tags="[tag.commander]"/>
            </pilot>
            <units>
              <unit category="unitcategory.transport" mk="1" exact="50"/>
            </units>
            <safepos value="$FreighterPos"/>
            <rotation yaw="90deg"/>
          </create_ship>
          <do_if value="$Types.{$i}" exact="tag.solid">
            <add_units object="$ship" category="unitcategory.orecollector" mk="1" exact="50"/>
          </do_if>
          <do_elseif value="$Types.{$i}" exact="tag.liquid">
            <add_units object="$ship" category="unitcategory.gascollector" mk="1" exact="50"/>
          </do_elseif>
        </do_all>
        <!-- Abort any running showcase mission -->
        <include_actions ref="AbortMission"/>
      </actions>
      <force name="A_Showcase 2: Trading"/>
    </cue>
    <cue name="SC3_PlayerMining" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <find_zone name="$zone" macro="macro.zone002_cluster_14_sector001_macro" required="true"/>
        <warp object="player.ship" zone="$zone">
          <position x="-29000m" y="-12100m" z="27200m"/>
          <rotation yaw="-134deg"/>
        </warp>
        <!-- Equipment -->
        <!--TODO @Owen Replace with loadouts-->
        <!--
        <find_object_component name="$weapon" object="player.ship" class="class.weapon">
          <match class="class.missilelauncher" negate="true"/>
        </find_object_component>
        <do_if value="$weapon">
          <remove_weapon object="player.ship" macro="$weapon.macro"/>
        </do_if>
        <do_if value="player.ship.isclass.ship_m">
          <equip_weapon object="player.ship" macro="macro.weapon_gen_m_mining_01_mk1_macro"/>
        </do_if>
        <do_elseif value="player.ship.isclass.ship_s">
          <equip_weapon object="player.ship" macro="macro.weapon_gen_s_mining_01_mk1_macro"/>
        </do_elseif>
        -->
        <!-- Spawn ore collector (and remove previously created one) -->
        <do_if value="static.$group?" chance="0">
          <destroy_group group="static.$group"/>
        </do_if>
        <create_group groupname="static.$group"/>
        <create_ship name="$ship" groupname="static.$group" macro="ship_arg_l_trans_container_01_a_macro" zone="$zone">
          <owner exact="faction.player" overridenpc="true"/>
          <pilot>
            <select faction="faction.argon" tags="[tag.commander]"/>
          </pilot>
          <units>
            <unit category="unitcategory.transport" mk="1" exact="50"/>
            <unit category="unitcategory.orecollector" mk="1" exact="50"/>
            <unit category="unitcategory.gascollector" mk="1" exact="50"/>
          </units>
          <safepos x="0m" y="-300m" z="1500m"/>
          <rotation yaw="0deg"/>
        </create_ship>
        <!-- Mission -->
        <!-- TODO -->
      </actions>
      <force name="A_Showcase 3: Mining"/>
    </cue>
    <cue name="SC4_Boarding" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!--TODO @Owen #EntityTypes Boarding showcase-->
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_d_sector18_zone45_macro" required="true" />-->
        <warp object="player.ship" sector="player.sector">
          <position x="-200km" y="20km" z="0m"/>
        </warp>
        <!-- Abort any running showcase mission -->
        <include_actions ref="AbortMission"/>
      </actions>
      <force name="A_Showcase 4: Boarding"/>
      <cues>
        <cue name="SC4_Boarding_Warp_Wait">
          <actions>
            <set_value name="$zone" exact="player.zone"/>
            <set_value name="$StaticParent" exact="parent.static"/>
            <!-- Spawn enemy ship (and remove previously created one) -->
            <do_if value="$StaticParent.$group?">
              <destroy_group group="$StaticParent.$group"/>
            </do_if>
            <create_group groupname="$StaticParent.$group"/>
            <create_ship name="$target" groupname="$StaticParent.$group" macro="ship_arg_l_trans_container_01_a_macro" zone="$zone">
              <owner exact="faction.scaleplate" overridenpc="true"/>
              <pilot>
                <select faction="faction.scaleplate" tags="[tag.commander]"/>
              </pilot>
              <people>
                <fillpercent exact="70"/>
                <person role="service" weight="60">
                  <select faction="faction.argon" tags="tag.crew"/>
                </person>
                <person role="marine" weight="20">
                  <select faction="faction.argon" tags="tag.marine"/>
                </person>
              </people>
              <safepos object="player.ship" z="6km"/>
              <rotation yaw="0deg"/>
            </create_ship>
            <!-- Start fight script -->
            <create_boarding_operation faction="faction.player" target="$target" result="$operation" approach="70" insertion="30"/>
            <debug_text text="'Started a boarding operation against ' +  $target + ' ' + $target.knownname + ' Operation: ' + $operation"/>
            <set_value name="$MarineTiers" exact="entityrole.marine.tiers"/>
            <!--Create Attackers-->
            <create_ship name="$Attacker_1" groupname="$StaticParent.$group" zone="$zone">
              <select faction="faction.argon" tags="tag.military" size="class.ship_l"/>
              <owner exact="faction.player" overridenpc="true"/>
              <pilot>
                <select faction="faction.argon" tags="[tag.commander]"/>
              </pilot>
              <people>
                <fillpercent exact="60"/>
                <person role="service" weight="60">
                  <select faction="faction.argon" tags="tag.crew"/>
                </person>
                <person role="marine" weight="40">
                  <select faction="faction.argon" tags="tag.marine"/>
                </person>
                <person role="prisoner" weight="1">
                  <select faction="faction.argon" tags="tag.prisoner"/>
                </person>
              </people>
              <safepos object="player.ship" x="-2km" z="2km"/>
              <rotation yaw="0deg"/>
            </create_ship>
            <set_value name="$MarineAmounts" exact="[0,0,0]"/>
            <set_value name="$Marines" exact="$Attacker_1.people.marines.list"/>
            <do_all exact="$Marines.count" counter="$i">
              <set_value name="$TierLevel" exact="entityrole.marine.tier.{$Attacker_1.people.{$Marines.{$i}}.combinedskill}.level"/>
              <do_all exact="$MarineTiers.count" counter="$k">
                <do_if value="$TierLevel == $MarineTiers.{$k}">
                  <set_value name="$MarineAmounts.{$k}" operation="add"/>
                  <break/>
                </do_if>
              </do_all>
            </do_all>
            <debug_text text="'Adding attacker: ' + $Attacker_1 + ' ' + $Attacker_1.knownname + ' with marines amounts by tier ' + $MarineAmounts"/>
            <add_boarding_attacker attacker="$Attacker_1" operation="$operation" behavior="boardingbehaviour.targetengines">
              <!--Skills match the tiers of marines-->
              <marines amounts="$MarineAmounts" skills="$MarineTiers"/>
            </add_boarding_attacker>
            <create_ship name="$Attacker_2" groupname="$StaticParent.$group" zone="$zone">
              <select faction="faction.argon" tags="tag.military" size="class.ship_l"/>
              <owner exact="faction.player" overridenpc="true"/>
              <pilot>
                <select faction="faction.argon" tags="[tag.commander]"/>
              </pilot>
              <people>
                <fillpercent exact="40"/>
                <person role="service" weight="60">
                  <select faction="faction.argon" tags="tag.crew"/>
                </person>
                <person role="marine" weight="50">
                  <select faction="faction.argon" tags="tag.marine"/>
                </person>
                <person role="prisoner" weight="1">
                  <select faction="faction.argon" tags="tag.prisoner"/>
                </person>
              </people>
              <safepos object="player.ship" x="2km" z="2km"/>
              <rotation yaw="0deg"/>
            </create_ship>
            <set_value name="$MarineAmounts" exact="[0,0,0]"/>
            <set_value name="$Marines" exact="$Attacker_2.people.marines.list"/>
            <do_all exact="$Marines.count" counter="$i">
              <set_value name="$TierLevel" exact="entityrole.marine.tier.{$Attacker_2.people.{$Marines.{$i}}.combinedskill}.level"/>
              <do_all exact="$MarineTiers.count" counter="$k">
                <do_if value="$TierLevel == $MarineTiers.{$k}">
                  <set_value name="$MarineAmounts.{$k}" operation="add"/>
                  <break/>
                </do_if>
              </do_all>
            </do_all>
            <debug_text text="'Adding attacker: ' + $Attacker_2 + ' ' + $Attacker_2.knownname + ' with marines amounts by tier ' + $MarineAmounts"/>
            <add_boarding_attacker attacker="$Attacker_2" operation="$operation" behavior="boardingbehaviour.attackescorts">
              <!--Skills match the tiers of marines-->
              <marines amounts="$MarineAmounts" skills="$MarineTiers"/>
            </add_boarding_attacker>
            <debug_text text="'Adding attacker (player.ship): ' + player.ship + ' ' + player.ship.knownname"/>
            <add_boarding_attacker attacker="player.ship" operation="$operation" behavior="boardingbehaviour.attackescorts"/>
            <start_boarding_operation operation="$operation"/>
          </actions>
          <cues>
            <cue name="SC4_Boarding_Pod_Launched" instantiate="true">
              <conditions>
                <event_object_signalled object="$target" param="$operation" param2="'boarding__podstarted'"/>
              </conditions>
              <actions>
                <add_to_group groupname="$StaticParent.$group" object="event.param3"/>
              </actions>
            </cue>
            <cue name="SC4_Operation_Removed">
              <conditions>
                <event_boarding_operation_removed operation="$operation"/>
              </conditions>
              <actions>
                <cancel_cue cue="SC4_Boarding"/>
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </cue>
    <cue name="SC5_ScanningHacking" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_c_sector11_zone75_macro" required="true" />-->
        <set_value name="$zone" exact="player.zone"/>
        <warp object="player.ship" zone="$zone">
          <position x="-10m" y="200m" z="-4600m"/>
        </warp>
        <!-- Mission -->
        <!-- TODO -->
      </actions>
      <force name="A_Showcase 5: Scanning and hacking"/>
    </cue>
    <cue name="SC6_LongRangeScan" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_b_sector07_zone08_macro" required="true" />-->
        <set_value name="$zone" exact="player.zone"/>
        <warp object="player.ship" zone="$zone">
          <position x="7000m" y="500m" z="-7500m"/>
          <rotation yaw="15deg"/>
        </warp>
        <!-- Mission -->
        <!-- TODO -->
      </actions>
      <!-- <force name="A_Showcase 6: Long-range scanning" /> -->
    </cue>
    <!-- TODO @Owen: Replace showcase with new station building usecase, if needed at all. -->
    <cue name="SC7_PlayerBuilding" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_b_sector04_zone31_macro" />
        <do_if value="not $zone">
          <set_value name="$zone" exact="player.zone"/>
        </do_if>-->
        <set_value name="$zone" exact="player.zone"/>
        <warp object="player.ship" zone="$zone">
          <safepos x="-450m" y="100m" z="-6000m" radius="player.ship.size"/>
        </warp>
        <!-- Equipment -->
        <!-- Spawn ore collector (and remove previously created one) -->
        <create_group groupname="static.$group"/>
        <create_ship name="$ship" groupname="static.$group" macro="ship_arg_xl_builder_01_a_macro" zone="$zone">
          <owner exact="faction.player" overridenpc="true"/>
          <pilot>
            <select faction="faction.argon" tags="[tag.commander]"/>
          </pilot>
          <units>
            <unit category="unitcategory.build" mk="1" exact="15"/>
          </units>
          <safepos x="-450m" y="-100m" z="-5000m"/>
        </create_ship>
        <add_cargo object="$ship" ware="ware.energycells" exact="5000"/>
        <add_cargo object="$ship" ware="ware.foodrations" exact="2000"/>
        <create_ship name="$tradeship" groupname="static.$group" macro="ship_arg_l_trans_container_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true"/>
          <pilot>
            <select faction="faction.argon" tags="[tag.commander]"/>
          </pilot>
          <units>
            <unit category="unitcategory.transport" mk="1" exact="50"/>
            <unit category="unitcategory.orecollector" mk="1" exact="50"/>
          </units>
          <safepos object="player.ship" x="3km" max="5km"/>
          <rotation yaw="90deg"/>
        </create_ship>
        <add_cargo object="$tradeship" ware="ware.energycells" exact="200"/>
        <!-- Mission -->
        <!-- TODO -->
      </actions>
      <force name="A_Showcase 7: Building"/>
    </cue>
    <cue name="SC8_PlayerGasMining" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <set_value name="$Ware" exact="ware.hydrogen"/>
        <find_closest_resource zone="$zone" position="$position" refobject="player.ship" ware="$Ware"/>
        <do_if value="$zone">
          <debug_text text="$zone.knownname"/>
          <debug_text text="player.zone.knownname"/>
          <warp object="player.ship" zone="$zone">
            <safepos value="$position" radius="player.ship.size"/>
          </warp>
          <!-- Spawn gas collector (and remove previously created one) -->
          <do_if value="static.$group?">
            <destroy_group group="static.$group"/>
          </do_if>
          <create_group groupname="static.$group"/>
          <create_ship name="$ship" groupname="static.$group" zone="$zone">
            <select tags="tag.liquid" size="class.ship_l"/>
            <owner exact="faction.player" overridenpc="true"/>
            <units>
              <unit category="unitcategory.gascollector" mk="1" exact="50"/>
              <unit category="unitcategory.transport" mk="1" exact="100"/>
            </units>
            <position object="$player.ship" x="0m" y="-200m" z="1200m"/>
            <rotation yaw="0deg"/>
          </create_ship>
          <!-- Mission -->
          <!-- TODO -->
        </do_if>
        <do_else>
          <debug_text text="'No zone found with: ' + $Ware.name"/>
        </do_else>
      </actions>
      <force name="A_Showcase 8: Gas Mining"/>
    </cue>
    <cue name="SC9_PlayerStation" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <set_value name="$CreateNPCs" exact="false"/>
        <do_if value="@event.param">
          <set_value name="$CreateNPCs" exact="true"/>
        </do_if>
        <find_station name="$NPCStation" space="player.galaxy"/>
        <!--macro.struct_bt_dv_drone_complex_macro-->
        <!--TODO @Owen create station with construction plan-->
        <create_station name="$Station" macro="$NPCStation.macro" zone="player.zone" owner="faction.player">
          <safepos allowyaxis="false"/>
        </create_station>
        <do_if value="$CreateNPCs">
          <find_room name="$stationroom" object="$Station" roompopulationtype="roompopulationtype.administrative"/>
          <do_if value="not $stationroom">
            <find_room name="$stationroom" object="$Station"/>
          </do_if>
          <create_cue_actor cue="this" name="$manager">
            <select faction="faction.argon" tags="tag.manager"/>
            <owner exact="faction.player"/>
          </create_cue_actor>
          <set_entity_type entity="$manager" type="entitytype.officer"/>
          <find_npc_slot name="$room_slot" object="$stationroom"/>
          <add_actor_to_room actor="$manager" slot="$room_slot"/>
          <assign_control_entity actor="$manager" object="$Station" post="controlpost.manager"/>
          <set_object_account object="$Station"/>
        </do_if>
        <warp object="player.ship" zone="$Station.zone">
          <safepos object="$Station" radius="player.ship.size"/>
        </warp>
      </actions>
      <force name="A_Showcase 9: Player Station"/>
    </cue>
    <cue name="SC9_PlayerStation_With_NPCs" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <force name="A_Showcase 9: Player Station (With NPCs)">
        <signal_cue_instantly cue="SC9_PlayerStation" param="true"/>
      </force>
    </cue>
    <cue name="SC10_Formation" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_d_sector18_zone45_macro" required="true" />-->
        <set_value name="$zone" exact="player.zone"/>
        <warp object="player.ship" zone="$zone">
          <position x="12200m" y="-1085m" z="-6000m"/>
          <rotation yaw="61deg" pitch="-14deg"/>
        </warp>
        <do_all exact="9" counter="$fi">
          <create_ship name="$Enemy_Ship" groupname="$Enemy_Ships" zone="$zone">
            <select faction="faction.xenon" tags="tag.fighter" size="class.ship_s"/>
            <!--owner exact="faction.player" overridenpc="true" comment="Make them friendly, for testing"/-->
            <position x="30000m" y="-2500m" z="-1500m + $fi*10"/>
          </create_ship>
        </do_all>
        <run_actions ref="md.LIB_Generic.Setup_ShipGroup_Formation_v2">
          <param name="group" value="$Enemy_Ships"/>
          <param name="formation" value="'eagle'"/>
          <param name="leaderorder" value="'Patrol'"/>
          <param name="followerorder" value="'Escort'"/>
        </run_actions>
      </actions>
      <force name="A_Showcase 10: Flight/Formations"/>
    </cue>
    <cue name="SC11_MultiFormation">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <set_value name="$Enemy_Group_Count" exact="6"/>
        <set_value name="$DemoGroups" exact="['vulcan', 'eagle', 'dartvertical', 'wshape', 'crossback', 'vshape']"/>
      </actions>
      <force name="A_Showcase 11: Flight/Formations II"/>
      <cues>
        <!-- create multiple groups of fighters flying in formation, protecting the beryll station -->
        <cue name="P7_CreatePMC_Fighters_loop">
          <actions>
            <!--<find_zone name="$zone" macro="macro.tzonecluster_d_sector18_zone45_macro" required="true" />-->
            <set_value name="$zone" exact="player.zone"/>
            <warp object="player.ship" zone="$zone">
              <position x="12200m" y="-1085m" z="-6000m"/>
              <rotation yaw="61deg" pitch="-14deg"/>
            </warp>
            <create_position name="$SpawnLocation" object="player.ship" min="5km" max="15km"/>
            <do_all exact="10" comment="5 ships per group">
              <create_ship name="$Enemy_Ship" groupname="$Enemy_Ships" zone="$zone">
                <select faction="faction.xenon" tags="tag.military" size="class.ship_s"/>
                <owner exact="faction.player" overridenpc="true" comment="Make them friendly, for testing"/>
                <position value="$SpawnLocation" max="100m"/>
              </create_ship>
            </do_all>
            <run_actions ref="md.LIB_Generic.Setup_ShipGroup_Formation_v2">
              <param name="group" value="$Enemy_Ships"/>
              <param name="formation" value="$DemoGroups.{$Enemy_Group_Count}"/>
              <param name="leaderorder" value="'Patrol'"/>
              <param name="followerorder" value="'Escort'"/>
            </run_actions>
          </actions>
          <cues>
            <cue name="SC11_SetupFormation_group_resetloop" onfail="cancel" comment="When pmc_group_count is zero for the first time the cue cancels">
              <conditions>
                <check_value value="$Enemy_Group_Count" comment="when to end the loop" min="2"/>
              </conditions>
              <delay exact="1s"/>
              <actions>
                <set_value name="$Enemy_Group_Count" operation="subtract"/>
                <remove_value name="$Enemy_Ships" comment="Create new group, instead of adding to previous one"/>
                <reset_cue cue="P7_CreatePMC_Fighters_loop"/>
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </cue>
    <cue name="SC12_NpcShipBuilding">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!--macro=struct_econ_prod_ship1_ol_macro-->
        <!--template=struct_econ_prod_ship1-->
        <!--class=U::ProductionModule-->
        <!--struct_bt_ol_shipyard_macro-->
        <!-- Get shipyard + available build-modules -->
        <do_if value="true">
          <!--TODO: @Owen Find shipyard-->
          <!--<find_station name="$shipyard" macro="macro.struct_bt_alb_big_ships_yard_macro" space="player.galaxy" required="true"/>-->
          <set_value name="$shipyard" exact="null"/>
          <do_if value="$shipyard.exists">
            <set_value name="$zone" exact="$shipyard.zone"/>
            <warp object="player.ship" zone="$zone">
              <position x="-7356.14" y="1504.11" z="11313.2"/>
              <rotation yaw="-67.6938deg" pitch="-19.0399deg"/>
            </warp>
            <find_object_component name="$buildmodules" object="$shipyard" class="class.buildmodule" multiple="true"/>
          </do_if>
          <do_else>
            <cancel_cue cue="SC12_NpcShipBuilding"/>
          </do_else>
        </do_if>
        <!-- Debug info on the station, its buildmodules and the buildmacros -->
        <debug_text text="'Using station \'' + $shipyard.knownname + '\' with ' + $buildmodules.count + ' buildmodules'"/>
        <do_all exact="$buildmodules.count" counter="$Count">
          <debug_text text="'- buildmodule' + $buildmodules.{$Count}"/>
        </do_all>
        <create_group groupname="$BuildShips"/>
        <!-- Tell each buildmodule to build something (random) -->
        <do_all exact="$buildmodules.count" counter="$Count">
          <do_if value="$buildmodules.{$Count}.buildanchor.exists" negate="true" comment="If nothing is currently under construction...">
            <set_value name="$buildmodule" exact="$buildmodules.{$Count}"/>
            <set_value name="$buildmacros" exact="$buildmodules.{$Count}.buildmacros"/>
            <set_value name="$selected_macro" exact="$buildmacros.random"/>
            <!--TODO: Loadout-->
            <add_build_to_construct_ship result="$build" object="$shipyard" macro="$selected_macro" faction="faction.argon"/>
            <do_if value="$build">
              <process_build build="$build" buildmodule="$buildmodule" object="$shipyard"/>
            </do_if>
            <!-- remember reference to what we are building (this sounds like we need instantiate... ) -->
            <do_if value="$buildmodule.buildanchor.exists">
              <set_value name="$ship" exact="$buildmodule.buildanchor"/>
              <add_to_group groupname="$BuildShips" object="$ship"/>
            </do_if>
          </do_if>
        </do_all>
      </actions>
      <force name="A_Showcase 12: Npc ShipBuilding"/>
      <cues>
        <cue name="SC12_build_completed" instantiate="true">
          <conditions>
            <check_all>
              <event_build_finished object="$shipyard"/>
              <!--check_value value="$BuildModule?" /-->
              <check_value value="$BuildShips.indexof.{event.param.buildanchor}"/>
            </check_all>
          </conditions>
          <actions>
            <!-- store event-params-->
            <set_value name="$ship" exact="event.param.buildanchor"/>
            <set_value name="$buildmodule" exact="event.param"/>
            <debug_text text="'Completed: '+ $ship.name"/>
            <!-- create pilot, assign to ship, set script to 'move and die' -->
            <create_cue_actor name="$Pilot" cue="SC12_build_completed">
              <select faction="event.param.buildanchor.owner" tags="tag.aipilot"/>
              <owner exact="event.param.buildanchor.owner"/>
            </create_cue_actor>
            <assign_control_entity actor="$Pilot" object="$ship" post="controlpost.aipilot" transfer="true"/>
            <create_order object="$ship" id="'MoveDie'"/>
            <!-- Block all docks -->
            <find_dockingbay name="$ship_docks" object="$ship" multiple="true"/>
            <do_all exact="$ship_docks.count" counter="$Count">
              <set_room_locked room="$ship_docks.{$Count}" locked="true"/>
            </do_all>
            <remove_value name="$ship_docks"/>
            <!-- And free the buildmodule for the next thing to be built-->
            <clear_buildanchor buildprocessor="event.param"/>
            <!-- Tell ship to undock -->
            <!--add_ammo/-->
          </actions>
          <cues>
          </cues>
        </cue>
      </cues>
    </cue>
    <cue name="SC13_EconMid">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!--
        <find_sector name="$ALB_AscendancySec" macro="macro.cluster_b_sector05_macro" space="md.$Albion" required="true"/>
        <find_zone name="$ALB_Asc_shady"      macro="macro.tzonecluster_b_sector05_zone19_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_five"       macro="macro.tzonecluster_b_sector05_zone20_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_forlourn"   macro="macro.tzonecluster_b_sector05_zone22_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_burried"    macro="macro.tzonecluster_b_sector05_zone21_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_forge"      macro="macro.tzonecluster_b_sector05_zone26_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_liquid"     macro="macro.tzonecluster_b_sector05_zone25_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_third"      macro="macro.tzonecluster_b_sector05_zone24_macro" space="$ALB_AscendancySec" required="true"/>-->
        <debug_text text="'TODO'"/>
        <do_if value="false">
          <reward_player money="10000000Cr" comment="10mio"/>
          <!-- Station 1 -->
          <set_value name="$BuildZone" exact="$ALB_Asc_shady"/>
          <!--<create_station name="$station1" macro="macro.struct_bt_alb_cattle_ranch_macro" groupname="$TheStations" zone="$BuildZone" owner="faction.player">
            <safepos allowyaxis="false" />
          </create_station>-->
          <!-- Station 2 -->
          <set_value name="$BuildZone" exact="$ALB_Asc_liquid"/>
          <!--<create_station name="$station2" macro="macro.struct_bt_alb_wheat_farm_macro" groupname="$TheStations" zone="$BuildZone" owner="faction.player">
            <safepos allowyaxis="false" />
          </create_station>-->
          <!-- loop through all stations and give some resources -->
          <do_all exact="$TheStations.count" counter="$Counter1">
            <!-- add default wares -->
            <add_default_production_wares object="$TheStations.{$Counter1}" lowerlimit="20" upperlimit="80"/>
            <!--set_value name="$wares" exact="$TheStations.{$Counter1}.resources.list"/>
          <do_all exact="$wares.count" counter="$Counter2">
            <add_cargo object="$TheStations.{$Counter1}" ware="$wares.{$Counter2}" exact="10000"/>
          </do_all-->
          </do_all>
          <!-- Create some playerships -->
          <create_list name="$ShipList"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_trans_container_02_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_trans_container_01_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_destroyer_01_a_macro'"/>
          <do_all exact="$ShipList.count" counter="$Counter">
            <create_ship name="$Ship1" zone="$ALB_Asc_shady" macro="$ShipList.{$Counter}">
              <owner exact="faction.player" overridenpc="true"/>
              <pilot>
                <select faction="faction.argon" tags="tag.commander"/>
              </pilot>
              <units>
                <unit category="unitcategory.transport" mk="1" exact="10"/>
                <unit category="unitcategory.orecollector" mk="1" exact="5"/>
                <unit category="unitcategory.repair" mk="1" exact="10"/>
              </units>
              <safepos x="0m" y="0m" z="0m"/>
            </create_ship>
            <set_object_commander commander="$TheStations.random" object="$Ship1"/>
          </do_all>
        </do_if>
      </actions>
      <force name="A_Showcase 13: EconomyMid"/>
      <cues>
        <cue name="SC13_Do">
        </cue>
      </cues>
    </cue>
    <cue name="SC14_EconLate">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!--<find_sector name="$ALB_AscendancySec" macro="macro.cluster_b_sector05_macro" space="md.$Albion" required="true"/>
        <find_zone name="$ALB_Asc_shady"      macro="macro.tzonecluster_b_sector05_zone19_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_five"       macro="macro.tzonecluster_b_sector05_zone20_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_forlourn"   macro="macro.tzonecluster_b_sector05_zone22_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_burried"    macro="macro.tzonecluster_b_sector05_zone21_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_forge"      macro="macro.tzonecluster_b_sector05_zone26_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_liquid"     macro="macro.tzonecluster_b_sector05_zone25_macro" space="$ALB_AscendancySec" required="true"/>
        <find_zone name="$ALB_Asc_third"      macro="macro.tzonecluster_b_sector05_zone24_macro" space="$ALB_AscendancySec" required="true"/>-->
        <debug_text text="TODO"/>
        <do_if value="false">
          <reward_player money="100000000Cr" comment="100mio"/>
          <!-- Station 1 -->
          <set_value name="$BuildZone" exact="$ALB_Asc_shady"/>
          <!--<create_station name="$station1" macro="macro.struct_bt_alb_cattle_ranch_macro" groupname="$TheStations" zone="$BuildZone" owner="faction.player">
            <safepos allowyaxis="false" />
          </create_station>-->
          <!-- Station 2 -->
          <set_value name="$BuildLocation" exact="$ALB_Asc_five"/>
          <!--<create_station name="$station2" macro="macro.struct_bt_alb_food_production_plant_macro" groupname="$TheStations" zone="$BuildZone" owner="faction.player">
            <safepos allowyaxis="false" />
          </create_station>-->
          <!-- Station 3 -->
          <set_value name="$BuildLocation" exact="$ALB_Asc_forlourn"/>
          <!--<create_station name="$station3" macro="macro.struct_bt_alb_solar_power_plant_macro" groupname="$TheStations" zone="$BuildZone" owner="faction.player">
            <safepos allowyaxis="false" />
          </create_station>-->
          <!-- Station 4 -->
          <set_value name="$BuildLocation" exact="$ALB_Asc_burried"/>
          <!--<create_station name="$station4" macro="macro.struct_bt_alb_spice_farm_macro" groupname="$TheStations" zone="$BuildZone" owner="faction.player">
            <safepos allowyaxis="false" />
          </create_station>-->
          <!-- Station 5 -->
          <set_value name="$BuildLocation" exact="$ALB_Asc_forge"/>
          <!--<create_station name="$station5" macro="macro.struct_bt_alb_water_destillery_macro" groupname="$TheStations" zone="$BuildZone" owner="faction.player">
            <safepos allowyaxis="false" />
          </create_station>-->
          <!-- Station 6 -->
          <set_value name="$BuildLocation" exact="$ALB_Asc_liquid"/>
          <!--<create_station name="$station6" macro="macro.struct_bt_alb_wheat_farm_macro" groupname="$TheStations" zone="$BuildZone" owner="faction.player">
            <safepos allowyaxis="false" />
          </create_station>-->
          <!-- loop through all stations and give some resources -->
          <do_all exact="$TheStations.count" counter="$Counter1">
            <!-- add default wares -->
            <add_default_production_wares object="$TheStations.{$Counter1}" lowerlimit="20" upperlimit="80"/>
            <!--set_value name="$wares" exact="$TheStations.{$Counter1}.resources.list"/>
          <do_all exact="$wares.count" counter="$Counter2">
            <add_cargo object="$TheStations.{$Counter1}" ware="$wares.{$Counter2}" exact="10000"/>
          </do_all-->
          </do_all>
          <!-- Create some playerships -->
          <create_list name="$ShipList"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_trans_container_02_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_trans_container_02_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_trans_container_01_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_trans_container_01_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_miner_liquid_01_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_miner_solid_01_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_destroyer_01_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_l_destroyer_01_a_macro'"/>
          <append_to_list name="$ShipList" exact="'ship_arg_xl_carrier_01_a_macro'"/>
          <do_all exact="$ShipList.count" counter="$Counter">
            <create_ship name="$Ship1" zone="$ALB_Asc_shady" macro="$ShipList.{$Counter}">
              <owner exact="faction.player" overridenpc="true"/>
              <pilot>
                <select faction="faction.argon" tags="tag.commander"/>
              </pilot>
              <units>
                <unit category="unitcategory.transport" mk="1" exact="10"/>
                <unit category="unitcategory.orecollector" mk="1" exact="5"/>
                <unit category="unitcategory.repair" mk="1" exact="10"/>
              </units>
              <safepos x="0m" y="0m" z="0m"/>
            </create_ship>
            <set_object_commander commander="$TheStations.random" object="$Ship1"/>
          </do_all>
        </do_if>
      </actions>
      <force name="A_Showcase 14: EconomyLate"/>
    </cue>
    <cue name="SC15_Boom" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
        <check_value value="@player.ship.isplayerowned"/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_c_sector08_zone92_macro" required="true" />-->
        <set_value name="$zone" exact="player.zone"/>
        <warp object="player.ship" zone="$zone">
          <position x="12200m" y="-1085m" z="-6000m"/>
          <rotation yaw="61deg" pitch="-14deg"/>
        </warp>
      </actions>
      <force name="A_Showcase 15: Boom"/>
      <cues>
        <cue name="SC15_Start">
          <actions>
            <set_value name="$retry" exact="10"/>
          </actions>
          <cues>
            <cue name="SC15_Loop" onfail="cancel">
              <conditions>
                <check_value value="$retry" comment="when to end the loop" min="0"/>
              </conditions>
              <delay exact="5s"/>
              <actions>
                <!-- Create ship, a zone away -->
                <create_ship name="$Enemy_Capship" capturable="false" zone="$zone">
                  <select faction="faction.xenon" tags="tag.military" size="class.ship_xl"/>
                  <owner exact="faction.xenon" overridenpc="true"/>
                  <position object="player.ship" z="6km" max="2km"/>
                </create_ship>
                <set_value name="$retry" operation="subtract"/>
                <!-- Reset cues, so if another PMC capship dies, spawn another one -->
                <destroy_object object="$Enemy_Capship" explosion="true"/>
                <reset_cue cue="SC15_Start" comment="also resets child-cues"/>
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </cue>
    <cue name="SC16_InteriorMission" instantiate="true" namespace="this">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <!-- Position -->
        <!--<find_zone name="$zone" macro="macro.tzonecluster_c_sector08_zone92_macro" required="true" />-->
        <do_if value="player.entity.station">
          <set_value name="$station" exact="player.entity.station"/>
        </do_if>
        <do_else>
          <find_station name="$station" space="player.sector"/>
        </do_else>
        <do_if value="$station.exists">
          <get_room_definition macro="$corridormacro" reference="$corridorref" doors="$corridordoors" tags="tag.corridor"/>
          <get_room_definition macro="$roommacro" reference="$roomref" doors="$roomdoors" tags="tag.office"/>
          <create_dynamic_interior object="$station" corridor="$corridormacro" room="$roommacro" door="$corridordoors.random" name="'Test Room'" interiorname="$interior" corridorname="$corridor" roomname="$room"/>
          <do_if value="player.ship">
            <warp object="player.ship" zone="$station.zone">
              <safepos object="$station" z="-1km"/>
              <orientation refobject="$station" orientation="look_at"/>
            </warp>
          </do_if>
          <find_npc_slot name="$slot" object="$room"/>
          <assert value="$slot" text="'no slot found for test showcase in ' + $room + ' ' + $room.macro + ' [Owen]'" break="1"/>
          <do_if value="$slot">
            <create_cue_actor cue="SC16_InteriorMission" name="$Actor">
              <select race="race.argon"/>
            </create_cue_actor>
            <set_entity_role entity="$Actor" role="entityrole.passenger"/>
            <add_actor_to_room actor="$Actor" slot="$slot"/>
            <create_mission cue="SC16_InteriorMission" name="'Generated Interior Test'" description="'This is a test mission for generated interiors'" difficulty="level.impossible" faction="$station.owner" rewardtext="'Cookies'" type="missiontype.talkto">
              <briefing>
                <objective action="objective.talkto" object="$Actor" step="1"/>
              </briefing>
              <objective action="objective.talkto" object="$Actor" step="1"/>
            </create_mission>
          </do_if>
          <do_else>
            <cancel_cue cue="SC16_InteriorMission"/>
          </do_else>
        </do_if>
        <do_else>
          <cancel_cue cue="SC16_InteriorMission"/>
        </do_else>
      </actions>
      <force name="A_Showcase 16: InteriorMission"/>
      <cues>
        <cue name="SC16_Done">
          <conditions>
            <event_conversation_started actor="$Actor"/>
            <check_value value="player.room == $Actor.room"/>
          </conditions>
          <actions>
            <remove_mission cue="SC16_InteriorMission" type="completed"/>
            <cancel_cue cue="SC16_InteriorMission"/>
          </actions>
        </cue>
      </cues>
    </cue>
    <library name="AbortMission">
      <actions>
        <do_if value="md.Showcases.MissionData.$sourcecue?">
          <remove_mission cue="md.Showcases.MissionData.$sourcecue"/>
          <cancel_cue cue="md.Showcases.MissionData.$sourcecue"/>
          <remove_value name="md.Showcases.MissionData.$sourcecue"/>
        </do_if>
      </actions>
    </library>
    <cue name="MissionData">
      <force name="A_Stop showcase mission">
        <include_actions ref="AbortMission"/>
      </force>
    </cue>
    <!--cue name="StartMenuCutscene">
      <force name="A_Trigger Start Menu Cutscene">
        <create_presentation_cluster name="$CutsceneCluster" background="macro.cluster_sm_bg_macro"/>
        <play_cutscene key="'startmenu_background'"/>
      </force>
      <cues>
        <cue name="StartMenuCutscene_DestroyCluster">
          <conditions>
            <event_cutscene_stopped key="'startmenu_background'"/>
          </conditions>
          <actions>
            <destroy_object object="$CutsceneCluster"/>
          </actions>
        </cue>
      </cues>
    </cue-->
  </cues>
</mdscript>
