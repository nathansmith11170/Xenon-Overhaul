<?xml version='1.0' encoding='utf-8'?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="X4Ep1_Mentor_Subscriptions" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>
    <cue name="Patch_Userdata" instantiate="true">
      <conditions>
        <event_cue_signalled cue="md.Setup.Start"/>
        <check_value value="player.galaxy.macro == macro.xu_ep2_universe_macro" comment="only in main-galaxy"/>
      </conditions>
      <delay exact="1ms"/>
      <actions>
        <do_if value="Face_To_Face_Achievement.state == cuestate.complete">
          <set_userdata storystate="'story_hq_boso'" value="1"/>
          <debug_text text="'Setting userdata story_hq_boso to ' + userdatasigned.story_hq_boso" filter="savegame"/>
        </do_if>
        <do_for_each name="$UserDataResearchWare" valuename="$UserDataID" in="Start.$ResearchUserDataTable">
          <do_if value="$UserDataResearchWare.research.unlocked and not userdatasigned.{$UserDataID}?">
            <set_userdata storystate="$UserDataID" value="1"/>
            <debug_text text="'Setting userdata ' + $UserDataID + ' to ' + userdatasigned.{$UserDataID}" chance="Start.$DebugChance"/>
          </do_if>
        </do_for_each>
      </actions>
    </cue>
    <!--If the initial warp research was giving via the gamestart, allow research of the next stage-->
    <cue name="Skipped_Warp_Research_1">
      <conditions>
        <event_cue_signalled cue="md.Setup.Start"/>
        <check_value value="player.module == 'custom_budgeted' or player.module == 'custom_creative'"/>
      </conditions>
      <delay exact="1ms"/>
      <actions>
        <do_if value="ware.research_warp_hq_01.research.unlocked and not ware.research_warp_hq_02.research.unlocked and (player.module == 'custom_budgeted' or player.module == 'custom_creative')">
          <add_encyclopedia_entry type="researchables" item="'research_warp_hq_02'"/>
          <set_value name="RM_Warp_HQ.$AllowFirstHQTeleport" exact="false"/>
        </do_if>
      </actions>
    </cue>
    <!--event.param == trophy tag-->
    <cue name="Add_Player_Office_Trophy" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <do_if value="not global.$Trophies.indexof.{event.param}">
          <append_to_list name="global.$Trophies" exact="event.param"/>
        </do_if>
      </actions>
    </cue>
    <cue name="Start" namespace="this" version="20">
      <conditions>
        <event_cue_signalled cue="md.Setup.Start"/>
        <check_value value="player.galaxy.macro == macro.xu_ep2_universe_macro" comment="only in main-galaxy"/>
      </conditions>
      <actions>
        <set_value name="$DebugChance" exact="0"/>
        <set_value name="$Page" exact="30201" comment="Mentor Mission page"/>
        <set_value name="$MissionGroup" exact="missiongroup.mentor_plot"/>
        <set_value name="$CurrentPhase" exact="null"/>
        <set_value name="$PreviousPhase" exact="null"/>
        <find_sector name="$HQSector" macro="macro.cluster_01_sector001_macro" comment="Grand Exchange, the original HQ sector"/>
        <set_value name="$HQPosition" exact="position.[128km, 0m, 198km]"/>
        <set_value name="$HQSpawnSector" exact="$HQSector" comment="Actual sector the HQ is spawned in which can change per gamestart"/>
        <set_value name="$MentorRoom" exact="null"/>
        <set_value name="$LeakStation" exact="null"/>
        <set_value name="$LeakStationSector" exact="null"/>
        <set_value name="$DestinationAnomaly" exact="null"/>
        <set_value name="$DestinationAnomalyPosition" exact="position.[160km, 5km, 195km]"/>
        <set_value name="$MissionCue" exact="this"/>
        <set_value name="$PickupWare" exact="ware.inv_interfaceunit"/>
        <set_value name="$SignalLeakStationFactions" exact="[faction.argon, faction.antigone, faction.teladi, faction.ministry, faction.paranid, faction.holyorder, faction.scaleplate, faction.alliance]"/>
        <set_value name="$SpokenChatterLines" exact="[]"/>
        <set_value name="$ResearchUserDataTable" exact="table[                    {ware.research_high_mass_teleportation} =  'story_research_high_mass_teleportation',                    {ware.research_module_build} =             'story_research_module_build',                    {ware.research_module_defence} =           'story_research_module_defence',                    {ware.research_module_dock} =              'story_research_module_dock',                    {ware.research_module_habitation} =        'story_research_module_habitation',                    {ware.research_module_production} =        'story_research_module_production',                    {ware.research_module_storage} =           'story_research_module_storage',                    {ware.research_module_venture} =           'story_research_module_venture',                    {ware.research_mod_engine_mk1} =           'story_research_mod_engine_mk1',                    {ware.research_mod_engine_mk2} =           'story_research_mod_engine_mk2',                    {ware.research_mod_engine_mk3} =           'story_research_mod_engine_mk3',                    {ware.research_mod_shield_mk1} =           'story_research_mod_shield_mk1',                    {ware.research_mod_shield_mk2} =           'story_research_mod_shield_mk2',                    {ware.research_mod_shield_mk3} =           'story_research_mod_shield_mk3',                    {ware.research_mod_ship_mk1} =             'story_research_mod_ship_mk1',                    {ware.research_mod_ship_mk2} =             'story_research_mod_ship_mk2',                    {ware.research_mod_ship_mk3} =             'story_research_mod_ship_mk3',                    {ware.research_mod_weapon_mk1} =           'story_research_mod_weapon_mk1',                    {ware.research_mod_weapon_mk2} =           'story_research_mod_weapon_mk2',                    {ware.research_mod_weapon_mk3} =           'story_research_mod_weapon_mk3',                    {ware.research_teleportation} =            'story_research_teleportation',                    {ware.research_teleportation_range_01} =   'story_research_teleportation_range_01',                    {ware.research_teleportation_range_02} =   'story_research_teleportation_range_02',                    {ware.research_teleportation_range_03} =   'story_research_teleportation_range_03',                    {ware.research_warp_hq_01} =               'story_research_warp_hq_01',                    {ware.research_warp_hq_02} =               'story_research_warp_hq_02',                    {ware.research_module_welfare_1} =         'story_research_module_welfare_1',]"/>
        <!--List of wares to not have a Boso comment when their research is started-->
        <set_value name="$ExcludeResearchStartedCommentList" exact="[ware.research_mod_engine_mk1, ware.research_mod_shield_mk1, ware.research_mod_ship_mk1, ware.research_mod_weapon_mk1, ware.research_module_welfare_1]"/>
        <!--Boron contact - Boso Ta-->
        <create_cue_actor name="$Boron_Mentor" cue="namespace" macro="character_boron_hq_mentor_macro">
          <page exact="10201"/>
          <!--TODO @Owen better owner?-->
          <owner exact="faction.civilian"/>
          <skills>
            <skill type="management" exact="9"/>
            <skill type="morale" exact="15"/>
            <skill type="piloting" exact="9"/>
            <skill type="engineering" exact="15"/>
            <skill type="boarding" exact="0"/>
          </skills>
        </create_cue_actor>
        <set_entity_traits entity="$Boron_Mentor" missionactor="true"/>
        <set_entity_overrides entity="$Boron_Mentor" icon="'specialist'"/>
        <set_value name="$Boron_Mentor.$x4ep1_boron_dark_tank" exact="true"/>
        <set_value name="$Boron_Mentor.$x4ep1_is_boron_mentor" exact="true"/>
        <set_value name="md.$PersistentCharacters.$BosoTa" exact="$Boron_Mentor"/>
        <set_value name="md.$PersistentCharacters.$BosoTa.$cutscenekey" exact="table[ $key = 'ShowCharacterBoron']"/>
        <set_value name="$AddStoryMentors"/>
      </actions>
      <patch sinceversion="2" state="complete">
        <do_if value="Manage_Boron_Tank_Room.state == cuestate.waiting">
          <set_value name="$Boron_Mentor.$x4ep1_boron_dark_tank" exact="true"/>
        </do_if>
      </patch>
      <patch sinceversion="4">
        <do_if value="$HQ? and $HQ.isplayerowned">
          <include_actions ref="SetupHQ"/>
        </do_if>
      </patch>
      <patch sinceversion="5" state="complete">
        <set_value name="$MentorRoom" exact="null"/>
      </patch>
      <patch sinceversion="6">
        <set_entity_overrides entity="$Boron_Mentor" icon="'specialist'"/>
        <do_if value="player.module == 'x4ep1_gamestart_scientist'">
          <do_if value="$HQ? and $HQ.isplayerowned">
            <include_actions ref="SetupHQ"/>
            <set_object_name object="$Interior" page="20007" line="1171"/>
            <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ"/>
            <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
          </do_if>
        </do_if>
      </patch>
      <patch sinceversion="7">
        <set_value name="$Patch_ResearchWare" exact="ware.research_mod_engine_mk1"/>
        <do_if value="$Patch_ResearchWare.research.unlocked or ($HQ? and $HQ.research.{$Patch_ResearchWare}.exists)">
          <debug_text text="'Player has already researched ' + $Patch_ResearchWare.id + '. Adding precursors as researched.'" filter="savegame"/>
          <do_for_each name="$Patch_Precursor" in="$Patch_ResearchWare.research.precursors.list">
            <debug_text text="'Adding precursor ' + $Patch_Precursor.id" filter="savegame"/>
            <add_research ware="$Patch_Precursor"/>
          </do_for_each>
        </do_if>
        <set_value name="$Patch_ResearchWare" exact="ware.research_mod_shield_mk1"/>
        <do_if value="$Patch_ResearchWare.research.unlocked or ($HQ? and $HQ.research.{$Patch_ResearchWare}.exists)">
          <debug_text text="'Player has already researched ' + $Patch_ResearchWare.id + '. Adding precursors as researched.'" filter="savegame"/>
          <do_for_each name="$Patch_Precursor" in="$Patch_ResearchWare.research.precursors.list">
            <debug_text text="'Adding precursor ' + $Patch_Precursor.id" filter="savegame"/>
            <add_research ware="$Patch_Precursor"/>
          </do_for_each>
        </do_if>
        <set_value name="$Patch_ResearchWare" exact="ware.research_mod_ship_mk1"/>
        <do_if value="$Patch_ResearchWare.research.unlocked or ($HQ? and $HQ.research.{$Patch_ResearchWare}.exists)">
          <debug_text text="'Player has already researched ' + $Patch_ResearchWare.id + '. Adding precursors as researched.'" filter="savegame"/>
          <do_for_each name="$Patch_Precursor" in="$Patch_ResearchWare.research.precursors.list">
            <debug_text text="'Adding precursor ' + $Patch_Precursor.id" filter="savegame"/>
            <add_research ware="$Patch_Precursor"/>
          </do_for_each>
        </do_if>
        <set_value name="$Patch_ResearchWare" exact="ware.research_mod_weapon_mk1"/>
        <do_if value="$Patch_ResearchWare.research.unlocked or ($HQ? and $HQ.research.{$Patch_ResearchWare}.exists)">
          <debug_text text="'Player has already researched ' + $Patch_ResearchWare.id + '. Adding precursors as researched.'" filter="savegame"/>
          <do_for_each name="$Patch_Precursor" in="$Patch_ResearchWare.research.precursors.list">
            <debug_text text="'Adding precursor ' + $Patch_Precursor.id" filter="savegame"/>
            <add_research ware="$Patch_Precursor"/>
          </do_for_each>
        </do_if>
        <remove_value name="$Patch_ResearchWare"/>
      </patch>
      <patch sinceversion="8">
        <do_if value="$MissionCue.hasmission">
          <do_if value="@$BoronMet">
            <update_mission cue="$MissionCue" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}"/>
          </do_if>
          <do_else>
            <update_mission cue="$MissionCue" icon="'briefing_boso_ta_02'" iconcaption="{30201,2}"/>
          </do_else>
        </do_if>
      </patch>
      <patch sinceversion="9">
        <set_value name="$SignalLeakStationFactions" exact="[faction.argon, faction.antigone, faction.teladi, faction.ministry, faction.paranid, faction.holyorder, faction.scaleplate, faction.alliance]"/>
      </patch>
      <patch sinceversion="10">
        <do_if value="player.module == 'x4ep1_gamestart_scientist'">
          <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
        </do_if>
      </patch>
      <patch sinceversion="11">
        <!--Remove never used values copied from actual subscription missions-->
        <remove_value name="$ThreadOffers"/>
        <remove_value name="$ThreadDefinitions"/>
        <remove_value name="$ActiveThreads"/>
        <remove_value name="$MissionOffers"/>
        <remove_value name="$ActiveMissions"/>
        <remove_value name="$MissionDefinitions"/>
      </patch>
      <patch sinceversion="13">
        <do_if value="not $ResearchUserDataTable?">
          <set_value name="$ResearchUserDataTable" exact="table[]"/>
        </do_if>
        <set_value name="$ResearchUserDataTable.{ware.research_high_mass_teleportation}" exact="'story_research_high_mass_teleportation'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_module_build}" exact="'story_research_module_build'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_module_defence}" exact="'story_research_module_defence'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_module_dock}" exact="'story_research_module_dock'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_module_habitation}" exact="'story_research_module_habitation'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_module_production}" exact="'story_research_module_production'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_module_storage}" exact="'story_research_module_storage'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_module_venture}" exact="'story_research_module_venture'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_engine_mk1}" exact="'story_research_mod_engine_mk1'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_engine_mk2}" exact="'story_research_mod_engine_mk2'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_engine_mk3}" exact="'story_research_mod_engine_mk3'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_shield_mk1}" exact="'story_research_mod_shield_mk1'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_shield_mk2}" exact="'story_research_mod_shield_mk2'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_shield_mk3}" exact="'story_research_mod_shield_mk3'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_ship_mk1}" exact="'story_research_mod_ship_mk1'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_ship_mk2}" exact="'story_research_mod_ship_mk2'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_ship_mk3}" exact="'story_research_mod_ship_mk3'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_weapon_mk1}" exact="'story_research_mod_weapon_mk1'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_weapon_mk2}" exact="'story_research_mod_weapon_mk2'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_mod_weapon_mk3}" exact="'story_research_mod_weapon_mk3'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_teleportation}" exact="'story_research_teleportation'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_teleportation_range_01}" exact="'story_research_teleportation_range_01'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_teleportation_range_02}" exact="'story_research_teleportation_range_02'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_teleportation_range_03}" exact="'story_research_teleportation_range_03'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_warp_hq_01}" exact="'story_research_warp_hq_01'"/>
        <set_value name="$ResearchUserDataTable.{ware.research_warp_hq_02}" exact="'story_research_warp_hq_02'"/>
      </patch>
      <patch sinceversion="14">
        <set_value name="$HQSpawnSector" exact="$HQSector" comment="Actual sector the HQ is spawned in which can change per gamestart"/>
      </patch>
      <patch sinceversion="15">
        <do_if value="ware.research_warp_hq_01.research.unlocked and not ware.research_warp_hq_02.research.unlocked and RM_Warp_HQ_Wait.state == cuestate.waiting and (player.module == 'custom_budgeted' or player.module == 'custom_creative')">
          <add_encyclopedia_entry type="researchables" item="'research_warp_hq_02'"/>
          <set_value name="RM_Warp_HQ.$AllowFirstHQTeleport" exact="false"/>
          <debug_text text="'Adding the HQ warp research 2 to the encyclopedia as the first research was added via the custom gamestart'" filter="savegame"/>
        </do_if>
      </patch>
      <patch sinceversion="16">
        <set_value name="$ResearchUserDataTable.{ware.research_module_welfare_1}" exact="'story_research_module_welfare_1'"/>
        <set_value name="$ExcludeResearchStartedCommentList" exact="[ware.research_mod_engine_mk1, ware.research_mod_shield_mk1, ware.research_mod_ship_mk1, ware.research_mod_weapon_mk1, ware.research_module_welfare_1]"/>
      </patch>
      <patch sinceversion="17">
        <do_if value="@$BoronMet">
          <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_mentor_boso"/>
        </do_if>
        <do_if value="@md.$PersistentCharacters.$DalBusta.hascontext.{@$HQ}">
          <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_diplomacy_dal"/>
        </do_if>
      </patch>
      <patch sinceversion="18">
        <do_if value="@$BoronMet">
          <set_value name="$NextBosoChatTime" min="player.age + 3min" max="player.age + 5min"/>
        </do_if>
      </patch>
      <patch sinceversion="19">
        <set_value name="$AddStoryMentors"/>
      </patch>
      <patch sinceversion="20">
        <debug_text text="'Flagging ' + $Boron_Mentor + ' ' + $Boron_Mentor.knownname + ' as the Boron mentor'" filter="savegame"/>
        <set_value name="$Boron_Mentor.$x4ep1_is_boron_mentor" exact="true"/>
      </patch>
      <cues>
        <cue name="PATCH_AddStoryMentors" onfail="cancel">
          <conditions>
            <check_value value="$AddStoryMentors?"/>
          </conditions>
          <delay exact="1s"/>
          <actions>
            <signal_cue_instantly cue="md.Setup.AddStoryMentor" param="table[$story=namespace, $actor=$Boron_Mentor]"/>
          </actions>
        </cue>
        <cue name="PATCH_Player_Office_V2">
          <delay exact="1ms"/>
          <actions>
            <do_if value="@$HQ.isplayerowned">
              <signal_cue cue="Manage_PlayerOffice_Room" check="false"/>
            </do_if>
          </actions>
        </cue>
        <!--Note: When the source of the issue is fixed, the actions of PATCH_Mission_Research_Lab_Repeat shouldn't need to be instantiated anymore. It should still run one more time.-->
        <cue name="PATCH_Mission_Research_Lab_Once">
          <actions>
            <signal_cue cue="PATCH_Mission_Research_Lab_Repeat"/>
          </actions>
        </cue>
        <cue name="PATCH_Mission_Research_Lab_Repeat" instantiate="true">
          <conditions>
            <check_any>
              <event_game_loaded/>
              <event_cue_signalled/>
            </check_any>
          </conditions>
          <actions>
            <do_if value="@$HQ.exists and not @$ResearchModule.exists">
              <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ"/>
              <do_if value="$ResearchModule">
                <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
              </do_if>
            </do_if>
          </actions>
        </cue>
        <cue name="Debug_Create_HQ">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <create_station name="$HQ" macro="macro.station_pla_headquarters_base_01_macro" sector="$HQSector" constructionplan="'x4ep1_playerheadquarters'" owner="faction.player" state="componentstate.operational">
              <safepos value="$HQPosition"/>
            </create_station>
            <include_actions ref="SetupHQ"/>
            <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ"/>
            <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
          </actions>
          <force name="Create_HQ"/>
        </cue>
        <cue name="Debug_Create_HQ_With_Effects">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <do_if value="player.ship">
              <warp object="player.ship" sector="$HQSector">
                <position x="$HQPosition.x" y="$HQPosition.y" z="$HQPosition.z - 8km"/>
              </warp>
            </do_if>
            <do_else>
              <create_ship macro="macro.ship_gen_xs_escapepod_01_a_macro" name="$TempEffectObject" sector="$HQSector">
                <owner exact="faction.ownerless"/>
                <position value="$HQPosition"/>
              </create_ship>
            </do_else>
          </actions>
          <force name="Create_HQ_With_Effects"/>
          <cues>
            <cue name="Debug_Create_HQ_With_Effects_Start_Effects">
              <delay exact="10s"/>
              <actions>
                <do_if value="@$TempEffectObject.exists">
                  <set_value name="$HQZone" exact="$TempEffectObject.zone"/>
                  <set_value name="$EffectPos" exact="$TempEffectObject.position"/>
                </do_if>
                <do_else>
                  <set_value name="$HQZone" exact="player.zone"/>
                  <create_position name="$EffectPos" object="$HQSector" space="$HQZone" value="$HQPosition"/>
                </do_else>
                <debug_text text="'HQ Zone will be: ' +  + ' ' + $HQZone.knownname + ' playing effect at ' + $EffectPos"/>
                <!--Add the effect name here-->
                <add_effect object="$HQZone" effect="'hq_warpin'">
                  <position value="$EffectPos"/>
                </add_effect>
                <set_value name="$EffectLength" exact="11s"/>
                <do_if value="@$TempEffectObject.exists">
                  <destroy_object object="$TempEffectObject"/>
                </do_if>
              </actions>
              <cues>
                <cue name="Debug_Create_HQ_With_Effects_Ending">
                  <conditions>
                    <event_cue_completed cue="Debug_Create_HQ_With_Effects_Start_Effects"/>
                  </conditions>
                  <delay exact="$EffectLength"/>
                  <actions>
                    <create_station name="$HQ" macro="macro.station_pla_headquarters_base_01_macro" sector="$HQSector" constructionplan="'x4ep1_playerheadquarters'" owner="faction.player" state="componentstate.operational">
                      <safepos value="$HQPosition"/>
                    </create_station>
                    <include_actions ref="SetupHQ"/>
                    <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ"/>
                    <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="Debug_Create_HQ_With_Boso">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$BoronMet" exact="true"/>
            <signal_cue_instantly cue="Debug_Create_HQ_With_Mentors" param="false"/>
          </actions>
          <force name="Create_HQ_With_Boso"/>
        </cue>
        <cue name="Debug_Create_HQ_With_Boso_And_Dal">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <signal_cue_instantly cue="Debug_Create_HQ_With_Mentors" param="true"/>
          </actions>
          <force name="Create_HQ_With_Boso_And_Dal"/>
        </cue>
        <!--event.param = bool - include Dal?-->
        <cue name="Debug_Create_HQ_With_Mentors">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="this.$IncludeDal" exact="@event.param"/>
            <set_value name="$DebugChance" exact="100"/>
            <create_station name="$HQ" macro="macro.station_pla_headquarters_base_01_macro" sector="$HQSector" constructionplan="'x4ep1_playerheadquarters'" owner="faction.player" state="componentstate.operational">
              <safepos value="$HQPosition"/>
            </create_station>
            <include_actions ref="SetupHQ"/>
            <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ"/>
            <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
            <create_construction_sequence macros="[macro.dockarea_arg_m_station_01_macro]" station="$HQ" base="$HQ.plannedconstruction.sequence" comment="async calculation"/>
            <debug_text text="player.age + ' start calculating'"/>
          </actions>
          <cues>
            <cue name="Debug_Create_HQ_With_Mentors_Dockarea">
              <conditions>
                <event_object_construction_sequence_created object="$HQ"/>
              </conditions>
              <actions>
                <debug_text text="player.age + ' ' + event.param"/>
                <do_if value="event.param">
                  <apply_construction_sequence station="$HQ" sequence="event.param"/>
                  <signal_cue cue="Manage_Boron_Tank_Room"/>
                  <signal_cue cue="Manage_PlayerOffice_Room"/>
                  <set_entity_traits entity="$Boron_Mentor" customhandler="true"/>
                </do_if>
              </actions>
              <cues>
                <cue name="Debug_Create_HQ_With_Mentors_Dal" checkinterval="1s">
                  <conditions>
                    <check_value value="@Debug_Create_HQ_With_Mentors.$IncludeDal and $MentorRoom.exists and @md.Story_Diplomacy_Intro.Start.$Dal.isclass.npc"/>
                  </conditions>
                  <actions>
                    <set_value name="$Dal" exact="md.Story_Diplomacy_Intro.Start.$Dal"/>
                    <debug_text text="'attempting to spawn Dal in ' + $HQ" chance="$DebugChance"/>
                    <set_entity_traits entity="$Dal" missionactor="true" customhandler="true"/>
                    <set_entity_role entity="$Dal" role="entityrole.service"/>
                    <set_entity_role_object entity="$Dal" object="$HQ"/>
                    <set_value name="$Dal.$Stay" exact="true"/>
                    <!--Add placement definitions-->
                    <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Dal,                                          table[                                         $requestercue = namespace,                                         $location = $MentorRoom,                                         $priority = 80,                                         $position = position.[-3.03m, 0.0424m, -5.224m],                                         $rotation = rotation.[100deg, 0deg, 0deg],                                         $debugchance = $DebugChance,                                         $debugcaller = if $DebugChance == 100 then this else null]                                         ]"/>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="Debug_Unlock_Research">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <signal_cue cue="UnlockResearch"/>
            <signal_cue cue="Phase_Research"/>
          </actions>
          <force name="Unlock_HQ_Research"/>
        </cue>
        <cue name="Debug_Destroy_HQ">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <do_if value="$HQ.exists">
              <destroy_object object="$HQ" explosion="false"/>
            </do_if>
          </actions>
          <force name="Destroy_HQ"/>
        </cue>
        <cue name="Debug_Add_Boron_To_HQ">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <signal_cue cue="Manage_Boron_Tank_Room"/>
          </actions>
          <force name="Add_Boron_To_HQ"/>
        </cue>
        <!--this.$Lines = either [textid, textid, textid] or [[textid, delay], [textid, delay], [textid, delay]]
        Do not mix methods-->
        <cue name="Mentor_Speak_Helper" instantiate="true" namespace="this">
          <conditions>
            <check_any>
              <check_all>
                <event_cue_signalled comment="Trigger the first line to speak"/>
                <set_value name="$NextLine" exact="0"/>
                <set_value name="$Delay" exact="0s"/>
                <check_any>
                  <check_all>
                    <check_value value="(typeof $Lines.{1}).isnumeric"/>
                    <set_value name="$NextLine" exact="$Lines.{1}"/>
                  </check_all>
                  <check_all>
                    <check_value value="typeof $Lines.{1} == datatype.list"/>
                    <set_value name="$NextLine" exact="$Lines.{1}.{1}"/>
                    <set_value name="$Delay" exact="$Lines.{1}.{2}"/>
                  </check_all>
                </check_any>
              </check_all>
              <check_all>
                <event_speak_finished actor="Start.$Boron_Mentor"/>
                <check_value value="$Lines?"/>
                <set_value name="$NextLine" exact="0"/>
                <set_value name="$Delay" exact="0s"/>
                <check_any>
                  <check_all>
                    <check_value value="(typeof $Lines.{1}).isnumeric"/>
                    <check_value value="$Lines.indexof.{event.param2}" min="1" max="$Lines.count - 1" comment="Line is in the list but not the last one"/>
                    <set_value name="$NextLine" exact="$Lines.{$Lines.indexof.{event.param2} + 1}"/>
                  </check_all>
                  <check_all>
                    <check_value value="typeof $Lines.{1} == datatype.list"/>
                    <check_any exact="$Lines.count" counter="$i">
                      <check_all>
                        <check_value value="$Lines.{$i}.{1} == event.param2 and $i != $Lines.count"/>
                        <set_value name="$NextLine" exact="$Lines.{$i + 1}.{1}"/>
                        <set_value name="$Delay" exact="$Lines.{$i + 1}.{2}"/>
                      </check_all>
                    </check_any>
                  </check_all>
                </check_any>
              </check_all>
            </check_any>
            <debug_text text="'Queuing next line: ' + $NextLine + ' with delay of ' + $Delay" debugchance="Start.$DebugChance"/>
          </conditions>
          <delay exact="static.$Delay"/>
          <actions>
            <debug_text text="'Speaking next line: ' + static.$NextLine" chance="Start.$DebugChance"/>
            <speak actor="Start.$Boron_Mentor" priority="100" line="static.$NextLine"/>
          </actions>
        </cue>
        <cue name="Patch_UnlockResearch" onfail="cancel">
          <conditions>
            <check_value value="@player.entity.$x4ep1_hq_research_unlocked and UnlockResearch.state == cuestate.waiting"/>
          </conditions>
          <actions>
            <signal_cue cue="UnlockResearch"/>
          </actions>
        </cue>
        <cue name="UnlockResearch" version="3">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <do_if value="not @player.entity.$x4ep1_hq_research_unlocked">
              <set_value name="player.entity.$x4ep1_hq_research_unlocked"/>
              <debug_text text="'Setting research as unlocked'" chance="$DebugChance"/>
              <do_if value="not $ResearchModule?">
                <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ"/>
              </do_if>
              <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
            </do_if>
            <do_else>
              <debug_text text="'Research was already unlocked but patching this cue to be complete.'" filter="savegame"/>
            </do_else>
          </actions>
        </cue>
        <cue name="Initialise" onfail="cancel">
          <conditions>
            <check_value value="not $CurrentPhase"/>
          </conditions>
          <actions>
            <do_if value="player.module == 'x4ep1_gamestart_scientist' or gamestart.storystate.story_hq_boso or gamestart.storystate.story_hq_dal">
              <do_if value="player.module == 'x4ep1_gamestart_scientist'">
                <!--Specialised gamestart where HQ is present (see god.xml, x4ep1_gamestart_scientist_hq) -->
                <find_station_by_true_owner name="$HQ" macro="macro.station_pla_headquarters_base_01_macro" faction="faction.player" space="$HQSector" required="true"/>
              </do_if>
              <do_else>
                <find_station_by_true_owner name="$HQ" macro="macro.station_pla_headquarters_base_01_macro" faction="faction.player" space="player.galaxy"/>
                <do_if value="not $HQ">
                  <!--Default to spawning in Grand Exchange-->
                  <create_station name="$HQ" macro="macro.station_pla_headquarters_base_01_macro" sector="$HQSector" constructionplan="'x4ep1_playerheadquarters_with_dock'" owner="faction.player" state="componentstate.operational">
                    <safepos value="$HQPosition"/>
                  </create_station>
                  <set_known object="$HQ.zone" known="true"/>
                  <set_known object="$HQ.sector" known="true"/>
                  <set_known object="$HQ.cluster" known="true"/>
                </do_if>
                <set_value name="$HQSpawnSector" exact="$HQ.sector"/>
              </do_else>
              <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
              <do_if value="$HQ">
                <!-- make sure plot is payed and station setup correctly -->
                <include_actions ref="SetupHQ"/>
                <!--TODO @Owen move to SetupHQ?-->
                <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ"/>
                <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
                <!--Tank room already created in the gamestart (see gamestart.xml) -->
                <find_object_component name="$MentorRoom" macro="macro.room_gen_boronoffice_01_macro" object="$HQ"/>
                <do_if value="$MentorRoom and $MentorRoom.dynamicinterior">
                  <set_value name="$Interior" exact="$MentorRoom.dynamicinterior"/>
                  <debug_text text="'Setting HQ tank room to persistent'"/>
                  <set_dynamic_interior_persistent object="$HQ" interior="$Interior" persistent="true"/>
                  <do_for_each name="$InteriorRoom" in="$Interior.rooms">
                    <do_if value="$InteriorRoom.type == roomtype.corridor">
                      <set_value name="$Corridor" exact="$InteriorRoom"/>
                      <break/>
                    </do_if>
                  </do_for_each>
                </do_if>
                <set_entity_traits entity="$Boron_Mentor" customhandler="true"/>
                <signal_cue cue="Manage_Boron_Tank_Room"/>
                <signal_cue cue="Manage_PlayerOffice_Room"/>
                <signal_cue cue="UnlockResearch"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_mentor_boso"/>
                <do_if value="gamestart.storystate.story_hq_dal">
                  <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_diplomacy_dal"/>
                </do_if>
                <set_value name="$BoronMet" exact="true"/>
                <set_value name="$NextBosoChatTime" min="player.age + 3min" max="player.age + 5min"/>
              </do_if>
            </do_if>
            <do_elseif value="@$TerranVariant">
              <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
            </do_elseif>
            <do_else>
              <!--Ordinary plot start-->
              <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="true"/>
              <signal_cue cue="Phase_SignalLeak"/>
            </do_else>
          </actions>
        </cue>
        <library name="SetupHQ">
          <actions>
            <do_if value="$HQ">
              <!--Patch base HQ construction plan components which are of state construction. Other construction components may have been added by the player.-->
              <do_if value="$HQ.isconstruction">
                <debug_text text="'HQ was of state construction. Setting to operational.'" filter="savegame"/>
                <restore_object object="$HQ"/>
              </do_if>
              <find_object_component name="$Patch_ControlRoom" object="$HQ" checkoperational="false" class="class.controlroom"/>
              <do_if value="$Patch_ControlRoom.isconstruction">
                <debug_text text="'HQ controlroom was of state construction. Setting to operational.'" filter="savegame"/>
                <restore_object object="$Patch_ControlRoom"/>
              </do_if>
              <remove_value name="$Patch_ControlRoom"/>
              <find_object_component name="$Patch_ResearchModule" object="$HQ" checkoperational="false" macro="macro.landmarks_player_hq_01_research_macro"/>
              <do_if value="$Patch_ResearchModule and $Patch_ResearchModule.isconstruction">
                <debug_text text="'Research module was of state construction. Setting to operational.'" filter="savegame"/>
                <restore_object object="$Patch_ResearchModule"/>
              </do_if>
              <remove_value name="$Patch_ResearchModule"/>
              <do_if value="not $HQ.defencenpc">
                <create_cue_actor name="$DefenceComputer" cue="this">
                  <select tags="controlpost.defence.tag"/>
                  <owner exact="faction.player"/>
                </create_cue_actor>
                <do_if value="$DefenceComputer">
                  <assign_control_entity object="$HQ" actor="$DefenceComputer" post="controlpost.defence" transfer="true"/>
                  <remove_cue_actor actor="$DefenceComputer" cue="this"/>
                  <remove_value name="$DefenceComputer"/>
                </do_if>
              </do_if>
              <do_if value="not $HQ.engineer">
                <create_cue_actor name="$EngineerComputer" cue="this">
                  <select tags="controlpost.engineer.tag"/>
                  <owner exact="faction.player"/>
                </create_cue_actor>
                <do_if value="$EngineerComputer">
                  <assign_control_entity object="$HQ" actor="$EngineerComputer" post="controlpost.engineer" transfer="true"/>
                  <remove_cue_actor actor="$EngineerComputer" cue="this"/>
                  <remove_value name="$EngineerComputer"/>
                </do_if>
              </do_if>
              <do_if value="not $HQ.paidbuildplot.exists">
                <set_value name="$Patch__BuildPlot" exact="$HQ.buildplot.max"/>
                <set_build_plot object="$HQ" paid="true" x="$Patch__BuildPlot.x" y="$Patch__BuildPlot.y" z="$Patch__BuildPlot.z"/>
                <remove_value name="$Patch__BuildPlot"/>
              </do_if>
            </do_if>
          </actions>
        </library>
        <cue name="Manage_Boron_Tank_Room">
          <conditions>
            <event_cue_signalled/>
            <check_value value="$HQ.exists"/>
          </conditions>
          <actions>
            <remove_value name="$Boron_Mentor.$x4ep1_boron_dark_tank"/>
            <!-- Define rooms which will be created -->
            <get_room_definition macro="$CorridorMacro" doors="$CorridorDoors" race="race.terran" tags="tag.corridor"/>
            <do_if value="not $CorridorMacro">
              <get_room_definition macro="$CorridorMacro" doors="$CorridorDoors" race="race.argon" tags="tag.genericcorridor"/>
            </do_if>
            <get_room_definition macro="$RoomMacro" doors="$RoomDoors" tags="tag.bosotank"/>
          </actions>
          <cues>
            <cue name="Face_To_Face_Achievement" version="2">
              <conditions>
                <event_conversation_started actor="$Boron_Mentor"/>
                <check_value value="player.room and player.room == $Boron_Mentor.room"/>
              </conditions>
              <actions>
                <unlock_achievement name="PLOT_3"/>
                <set_userdata storystate="'story_hq_boso'" value="1"/>
              </actions>
              <patch sinceversion="2" state="complete">
                <!--Removed-->
              </patch>
            </cue>
            <!--As of _v2, the interior is persistent-->
            <cue name="Create_Boron_Tank_Room_v2">
              <actions>
                <!--TODO @Owen the HQ now has a window connection for this room. Add patch code to move existing rooms.-->
                <do_if value="@$Interior.exists and @$Room.exists">
                  <debug_text text="'Setting HQ tank room to persistent'" filter="savegame"/>
                  <set_dynamic_interior_persistent object="$HQ" interior="$Interior" persistent="true"/>
                  <set_value name="$MentorRoom" exact="$Room"/>
                  <remove_value name="$Room"/>
                </do_if>
                <do_elseif value="not $MentorRoom.exists">
                  <!-- Create persistent interior -->
                  <do_if value="not @$ResearchModule">
                    <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ" checkoperational="false"/>
                    <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
                  </do_if>
                  <create_dynamic_interior object="$HQ" corridor="$CorridorMacro" room="$RoomMacro" door="$CorridorDoors.{1}" name="'{20007,1171}'" interiorname="$Interior" corridorname="$Corridor" roomname="$MentorRoom" persistent="true" module="$ResearchModule"/>
                  <do_if value="md.$PersistentCharacters.$DalBusta.isclass.npc">
                    <signal_objects object="md.$PersistentCharacters.$DalBusta" param="'new_hq_interior'" param2="$MentorRoom"/>
                  </do_if>
                </do_elseif>
                <do_if value="$Interior and $Corridor and $MentorRoom">
                  <debug_text text="'Boron tank room for ' + $HQ.knownname + ' created'" chance="$DebugChance"/>
                  <!--Add placement defintion-->
                  <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Boron_Mentor,                                          table[                                         $requestercue = namespace,                                         $location = $MentorRoom,                                         $priority = 80,                                         $slottags = [tag.boron_tank],                                         $debugchance = $DebugChance,                                         $debugcaller = if $DebugChance == 100 then this else null]                                         ]"/>
                </do_if>
              </actions>
              <cues>
                <!--In certain cases, the lab interior was the child of the dockarea, which could be removed.-->
                <cue name="PATCH_Relocate_Boron_Tank_Room_Reset_Once">
                  <actions>
                    <signal_cue cue="PATCH_Relocate_Boron_Tank_Room_Reset_Repeat"/>
                  </actions>
                </cue>
                <!--Note: When the source of the issue is fixed, the actions of PATCH_Relocate_Boron_Tank_Room_Reset_Repeat shouldn't need to be instantiated anymore. It should still run one more time.-->
                <cue name="PATCH_Relocate_Boron_Tank_Room_Reset_Repeat" instantiate="true">
                  <conditions>
                    <check_any>
                      <event_game_loaded/>
                      <event_cue_signalled/>
                    </check_any>
                    <check_any>
                      <cue_is_cancelled cue="PATCH_Relocate_Boron_Tank_Room"/>
                      <cue_is_complete cue="PATCH_Relocate_Boron_Tank_Room"/>
                    </check_any>
                  </conditions>
                  <actions>
                    <reset_cue cue="PATCH_Relocate_Boron_Tank_Room"/>
                  </actions>
                </cue>
                <cue name="PATCH_Relocate_Boron_Tank_Room">
                  <cues>
                    <cue name="PATCH_Recreate_Boron_Tank_Room_Immediate" onfail="cancel">
                      <conditions>
                        <check_value value="not $Interior.exists and player.headquarters"/>
                      </conditions>
                      <actions>
                        <do_if value="not $Boron_Mentor.isclass.npc">
                          <create_cue_actor name="$Boron_Mentor" cue="namespace" macro="character_boron_hq_mentor_macro">
                            <page exact="10201"/>
                            <!--TODO @Owen better owner?-->
                            <owner exact="faction.civilian"/>
                            <skills>
                              <skill type="management" exact="9"/>
                              <skill type="morale" exact="15"/>
                              <skill type="piloting" exact="9"/>
                              <skill type="engineering" exact="15"/>
                              <skill type="boarding" exact="0"/>
                            </skills>
                          </create_cue_actor>
                          <set_entity_traits entity="$Boron_Mentor" missionactor="true"/>
                          <set_entity_overrides entity="$Boron_Mentor" icon="'specialist'"/>
                          <set_value name="md.$PersistentCharacters.$BosoTa" exact="$Boron_Mentor"/>
                          <set_value name="$Boron_Mentor.$x4ep1_is_boron_mentor" exact="true"/>
                          <set_value name="md.$PersistentCharacters.$BosoTa.$cutscenekey" exact="table[ $key = 'ShowCharacterBoron']"/>
                          <assert value="false" text="'Boso Ta no longer existed. Recreated as: ' + $Boron_Mentor + ' [Owen]'"/>
                        </do_if>
                        <debug_text text="'Attempt to recreate the HQ lab'" filter="savegame"/>
                        <reset_cue cue="Create_Boron_Tank_Room_v2"/>
                      </actions>
                    </cue>
                    <cue name="PATCH_Relocate_Boron_Tank_Room_Wait" onfail="cancel">
                      <conditions>
                        <check_value value="$Interior.exists"/>
                        <check_value value="$Interior.parent != $ResearchModule"/>
                        <check_value value="player.entity.hascontext.{$Interior}"/>
                      </conditions>
                      <cues>
                        <cue name="PATCH_Relocate_Boron_Tank_Room_Wait_Perform">
                          <conditions>
                            <event_object_changed_room object="player.entity"/>
                            <check_value value="not event.param.hascontext.{$Interior}"/>
                          </conditions>
                          <actions>
                            <debug_text text="'Removing Boso ' + $Boron_Mentor + ' from old lab: ' + $Interior + ' ' + $Interior.knownname + ' and will create a new lab and place him there.'" filter="savegame"/>
                            <remove_actor_from_room actor="$Boron_Mentor"/>
                            <signal_cue_instantly cue="PATCH_Relocate_Boron_Tank_Room_Kill_Delay" param="$Interior"/>
                            <set_value name="$Interior" exact="null"/>
                            <set_value name="$MentorRoom" exact="null"/>
                            <reset_cue cue="Create_Boron_Tank_Room_v2"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="PATCH_Relocate_Boron_Tank_Room_Immediate" onfail="cancel">
                      <conditions>
                        <check_value value="$Interior.exists and $ResearchModule.exists"/>
                        <check_value value="$Interior.parent != $ResearchModule"/>
                        <check_value value="not player.entity.hascontext.{$Interior}"/>
                      </conditions>
                      <actions>
                        <debug_text text="'Removing Boso ' + $Boron_Mentor + ' from old lab: ' + $Interior + ' ' + $Interior.knownname + ' connected to ' + $Interior.parent.knownname + ' and will create a new lab and place him there.'" filter="savegame"/>
                        <remove_actor_from_room actor="$Boron_Mentor"/>
                        <signal_cue_instantly cue="PATCH_Relocate_Boron_Tank_Room_Kill_Delay" param="$Interior"/>
                        <set_value name="$Interior" exact="null"/>
                        <set_value name="$MentorRoom" exact="null"/>
                        <reset_cue cue="Create_Boron_Tank_Room_v2"/>
                      </actions>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
            <!--event.param = interior to be killed-->
            <cue name="PATCH_Relocate_Boron_Tank_Room_Kill_Delay" instantiate="true" namespace="this">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <set_value name="$OldInterior" exact="event.param"/>
              </actions>
              <delay exact="2s"/>
              <actions>
                <find_object_component name="$NPCs" object="$OldInterior" multiple="true" class="class.npc"/>
                <assert value="$NPCs.count == 0" text="'Interior to be removed ' + $OldInterior + ' ' + $OldInterior.macro.name + ' still contains NPCs ' + $NPCs + ' [Owen]'"/>
                <destroy_object object="$OldInterior"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <cue name="Patch_Manage_PlayerOffice_Room" onfail="cancel">
          <conditions>
            <check_value value="Manage_PlayerOffice_Room.state == cuestate.complete and not $OfficeRoom.exists"/>
          </conditions>
          <actions>
            <debug_text text="'Player office is missing. Resetting management cues.'" filter="savegame"/>
            <reset_cue cue="Manage_PlayerOffice_Room"/>
            <signal_cue cue="Manage_PlayerOffice_Room" check="false"/>
          </actions>
        </cue>
        <cue name="Manage_PlayerOffice_Room">
          <conditions>
            <event_cue_signalled/>
            <check_value value="$HQ.exists"/>
          </conditions>
          <actions>
            <do_if value="not @$ResearchModule">
              <find_object_component name="$ResearchModule" macro="macro.landmarks_player_hq_01_research_macro" object="$HQ" checkoperational="false"/>
              <set_object_name object="$ResearchModule" page="20104" line="101701" comment="Unknown module to Research Module"/>
            </do_if>
            <get_room_definition macro="$OfficeRoomMacro" tags="tag.playeroffice"/>
            <create_dynamic_interior roomname="$OfficeRoom" object="$HQ" name="'{20007,1511}'" corridor="macro.room_arg_corridor_05_macro" room="$OfficeRoomMacro" corridorname="$OfficeCorridor" interiorname="$OfficeInterior" persistent="true" module="$ResearchModule"/>
            <do_for_each name="$Trophy" in="global.$Trophies">
              <trigger_animation object="$OfficeRoom" group="$Trophy" trigger="activate"/>
            </do_for_each>
          </actions>
          <cues>
            <cue name="UnlockTrophy_Random_DEBUG" instantiate="true">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <set_value name="this.$RandomTrophy"/>
                <do_any>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_paranid_monument_intact" weight="if global.$Trophies.indexof.{tag.trophy_story_paranid_monument_destroyed} then 0 else 1"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_paranid_monument_destroyed" weight="if global.$Trophies.indexof.{tag.trophy_story_paranid_monument_intact} then 0 else 1"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_paranid_haven"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_yaki_gladius"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_split_coffin"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_split_thrones"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_covert_operations_medal"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_yaki_amplifier"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_terraforming_oberth"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_terraforming_torus"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_terraforming_scale_plate_green"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_terraforming_black_hole_sun"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_terraforming_getsu_fune"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_terraforming_frontier_edge"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_terraforming_atiyas_misfortune"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_terraforming_eighteen_billion"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_terraforming_memory_of_profit"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_diplomacy_dal"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_mentor_boso"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_criminal_arcadian_endeavour"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_thefan_astrid"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_gen_erlking"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_gmc_madscientist_whiteboard"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_gmc_madscientist_sculpture"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_gen_xenon_i"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_boron_throne"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_boron_eye_piece"/>
                  <set_value name="this.$RandomTrophy" exact="tag.trophy_story_boron_khaak_station"/>
                </do_any>
                <do_if value="this.$RandomTrophy">
                  <signal_cue_instantly cue="Add_Player_Office_Trophy" param="this.$RandomTrophy"/>
                  <debug_text text="'Unlocked Trophy %s'.[this.$RandomTrophy]"/>
                </do_if>
              </actions>
            </cue>
            <cue name="UnlockTrophy_All_DEBUG">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <do_any comment="mutually exclusive">
                  <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_paranid_monument_intact" weight="if global.$Trophies.indexof.{tag.trophy_story_paranid_monument_destroyed} then 0 else 100"/>
                  <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_paranid_monument_destroyed" weight="if global.$Trophies.indexof.{tag.trophy_story_paranid_monument_intact} then 0 else 100"/>
                </do_any>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_paranid_haven"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_yaki_gladius"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_split_coffin"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_split_thrones"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_covert_operations_medal"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_yaki_amplifier"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_terraforming_oberth"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_terraforming_torus"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_terraforming_scale_plate_green"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_terraforming_black_hole_sun"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_terraforming_getsu_fune"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_terraforming_frontier_edge"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_terraforming_atiyas_misfortune"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_terraforming_eighteen_billion"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_terraforming_memory_of_profit"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_diplomacy_dal"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_mentor_boso"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_criminal_arcadian_endeavour"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_thefan_astrid"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_gen_erlking"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_gmc_madscientist_whiteboard"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_gmc_madscientist_sculpture"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_gen_xenon_i"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_boron_throne"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_boron_eye_piece"/>
                <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_boron_khaak_station"/>
              </actions>
            </cue>
            <cue name="Manage_PlayerOffice_Update_Trophies" instantiate="true">
              <conditions>
                <check_any>
                  <event_cue_signalled cue="Add_Player_Office_Trophy"/>
                  <check_all>
                    <event_object_changed_attention object="$OfficeRoom"/>
                    <check_value value="$OfficeRoom.attention ge attention.nearby"/>
                  </check_all>
                </check_any>
              </conditions>
              <actions>
                <debug_text text="'trophycount %s'.[global.$Trophies.count]" chance="$DebugChance"/>
                <do_for_each name="$Trophy" in="global.$Trophies">
                  <trigger_animation object="$OfficeRoom" group="$Trophy" trigger="activate"/>
                </do_for_each>
              </actions>
            </cue>
          </cues>
        </cue>
        <!--
        ############### PLOT PHASES ###############
        The phases are sections of the plot. Only one phase should be active at a time.
        ###########################################-->
        <library name="ActivatePhase">
          <actions>
            <set_value name="$PreviousPhase" exact="$CurrentPhase"/>
            <set_value name="$CurrentPhase" exact="this"/>
            <!--<assert value="not $PreviousPhase or $PreviousPhase.state == cuestate.waiting" text="'Previous cuestate is not in a waiting state and will not activate if ever called again [Owen]'"/>-->
          </actions>
        </library>
        <cue name="SignalLeak_Hint_Message">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <delay exact="if player.age gt Phase_SignalLeak.time + 1h then 5min else 45min"/>
          <actions>
            <write_incoming_message result="$ScalePlateStationMessage" title="{30201,10}" text="{30201,11}" source="{1001,9002}" highpriority="true" read="false"/>
          </actions>
        </cue>
        <!--TODO @Owen - prevent the signal leak station being in the same cluster as the HQ-->
        <cue name="Phase_SignalLeak">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <include_actions ref="ActivatePhase"/>
          </actions>
          <cues>
            <cue name="Phase_SignalLeak_Init">
              <actions>
                <create_group groupname="$Leaks"/>
                <set_value name="$SignalLeakActors" exact="[]"/>
                <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="true"/>
                <signal_cue cue="Phase_SignalLeak_Find_Station"/>
              </actions>
            </cue>
            <!--event.param = Delay time-->
            <cue name="Phase_SignalLeak_Reset_Helper" instantiate="true">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <do_if value="@event.param">
                  <set_value name="this.$Delay" exact="event.param"/>
                </do_if>
                <do_else>
                  <!--Debug case-->
                  <set_value name="this.$Delay" exact="10s"/>
                </do_else>
                <debug_text text="player.age + ' Resetting the signal leak search in ' + this.$Delay + '. Generic leaks are ' + if md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration then 'deactivated' else 'possible'" chance="$DebugChance"/>
                <do_if value="not md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration">
                  <signal_cue cue="md.Signal_Leaks.TriggerPopulation"/>
                </do_if>
                <reset_cue cue="Phase_SignalLeak_Find_Station"/>
                <destroy_group group="$Leaks"/>
                <debug_text text="'Destroying ' + $Leaks.count + ' signal leaks'" chance="$DebugChance"/>
                <do_all exact="$SignalLeakActors.count" counter="$i">
                  <debug_text text="'Destroying leak actor ' + $SignalLeakActors.{$i}.knownname" chance="$DebugChance"/>
                  <destroy_object object="$SignalLeakActors.{$i}"/>
                </do_all>
                <clear_list list="$SignalLeakActors"/>
                <remove_offer cue="$MissionCue"/>
                <remove_mission cue="$MissionCue"/>
              </actions>
              <cues>
                <cue name="Phase_SignalLeak_Reset_Helper_Dispatch">
                  <delay exact="parent.$Delay"/>
                  <actions>
                    <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="true"/>
                    <signal_cue cue="Phase_SignalLeak_Find_Station" check="false"/>
                  </actions>
                </cue>
              </cues>
            </cue>
            <!--
            {10201, 30201001} - Boron: "...I seem to be broadcasting... Can nobody hear this? Hello? Hmm, maybe if I... Yes, that should be better. Hello, anyone?"
            {10201, 30201002} - Boron: "I'm in a rather unfortunate situation. Is anyone able to help me? My work is quite time-critical, so if you can, please contact me soon."
            OR
            (1000002 - 1000005): Boron: "Can anyone hear me?! Hello?! I'm not supposed to be broadcasting but I need help! Please! I need help!"
            OR
            Argon-Teladi-Paranid lines to hide that this is a Boron
            -->
            <cue name="Phase_SignalLeak_Find_Station">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <debug_text text="player.age + ' Finding signal leak station around the player'" chance="$DebugChance"/>
              </actions>
              <cues>
                <!--We check stations which the player approaches to spawn the signal leak on, giving them a better chance of running into one-->
                <!--Hack @Owen checktime of 1s so this doesn't fire too early on gamestarts. While the 'physicsareready' filter passes, find_object_surface may still fail while things are loading.-->
                <cue name="Phase_SignalLeak_Nearby_Station" checkinterval="10s" checktime="1s">
                  <conditions>
                    <check_value value="player.sector"/>
                    <count_stations result="$LeakStation" space="player.sector" min="1" physicsareready="true" freesignalleakslot="true" multiple="false" owner="$SignalLeakStationFactions" excluded="md.Signal_Leaks.Manager.$ExcludedObjects">
                      <match_distance object="player.entity" max="5km"/>
                      <match_relation_to object="player.entity" comparison="not" relation="enemy"/>
                      <!--If the HAT Ch2 mission is active, don't place a Boso leak on Scale Plate stations-->
                      <match owner="if md.Story_Diplomacy_Intro.Pt2_Return_To_Hatikvah.state == cuestate.complete then faction.scaleplate else null" negate="true"/>
                    </count_stations>
                  </conditions>
                  <actions>
                    <debug_text text="player.age + ' Found signal leak station around the player: ' + $LeakStation + ' ' + $LeakStation.knownname" chance="$DebugChance"/>
                    <find_signalleak_location name="$LeakLocations" container="$LeakStation" excludefilled="true" multiple="true"/>
                    <do_if value="not $LeakLocations.count">
                      <assert value="$LeakLocation" text="'Unable to find a leak location although it should have been ensured on ' + $LeakStation + ' ' + $LeakStation.knownname + ' [Owen]'"/>
                      <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="1min"/>
                      <!--Phase_SignalLeak_Find_Station is now reset-->
                    </do_if>
                    <do_else>
                      <shuffle_list list="$LeakLocations"/>
                      <set_value name="$MissionLeakMacro" exact="macro.signalleak_s_standard_01_macro"/>
                      <do_all exact="$LeakLocations.count" counter="$i">
                        <!--Create a random 'fake' character to be used as the voice for the signal leak-->
                        <create_cue_actor name="$SignalLeakActor" cue="namespace">
                          <select race="[race.argon, race.teladi, race.paranid]" tags="tag.crew"/>
                        </create_cue_actor>
                        <append_to_list name="$SignalLeakActors" exact="$SignalLeakActor"/>
                        <find_object_surface posname="$SurfacePos" rotname="$SurfaceRot" object="$LeakLocations.{$i}.component" height="$MissionLeakMacro.boundingbox.max.y - $MissionLeakMacro.boundingbox.center.y" tolerateneighbour="false">
                          <position value="$LeakLocations.{$i}.offset"/>
                          <!-- the rotation created by the normal would look away from the surface, we want a rotation that's looking parallel to the surface -->
                          <offsetrotation pitch="-90deg"/>
                        </find_object_surface>
                        <do_if value="$SurfacePos">
                          <create_signal_leak name="$Leak" groupname="$Leaks" macro="$MissionLeakMacro" type="signalleaktype.voice" object="$LeakLocations.{$i}.component">
                            <position value="$SurfacePos"/>
                            <rotation value="$SurfaceRot"/>
                            <voice page="$SignalLeakActor.page" lines="[1000003, 1000004, 1000005]"/>
                          </create_signal_leak>
                          <signal_cue cue="SignalLeak_Hint_Message" check="false"/>
                          <debug_text text="player.age + ' created signal leak ' + $Leak + ' with actor ' + $SignalLeakActor.knownname" chance="$DebugChance"/>
                          <do_if value="$Leaks.count ge 5">
                            <break/>
                          </do_if>
                        </do_if>
                      </do_all>
                      <do_if value="not $Leaks.count">
                        <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="1min"/>
                        <!--Phase_SignalLeak_Find_Station is now reset-->
                      </do_if>
                    </do_else>
                  </actions>
                  <cues>
                    <cue name="Phase_SignalLeak_Left_Station" checkinterval="2s">
                      <conditions>
                        <check_value value="player.sector != $LeakStation.sector or $LeakStation.distanceto.{player.entity} gt 10km"/>
                      </conditions>
                      <actions>
                        <debug_text text="player.age + ' player left leak station area.'" chance="$DebugChance"/>
                        <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="30s"/>
                        <!--Phase_SignalLeak_Find_Station is now reset-->
                      </actions>
                    </cue>
                    <cue name="Phase_SignalLeak_Unlocked">
                      <conditions>
                        <event_player_signal_unlock_finished/>
                        <check_value value="$Leaks.indexof.{event.param} and not md.$TutorialActive"/>
                      </conditions>
                      <actions>
                        <debug_text text="player.age + ' unlocked signal leak ' + event.param" chance="$DebugChance"/>
                        <debug_text text="'Destroying ' + $Leaks.count + ' signal leaks'" chance="$DebugChance"/>
                        <destroy_group group="$Leaks"/>
                        <do_all exact="$SignalLeakActors.count" counter="$i">
                          <debug_text text="'Destroying leak actor ' + $SignalLeakActors.{$i}.knownname" chance="$DebugChance"/>
                          <destroy_object object="$SignalLeakActors.{$i}"/>
                        </do_all>
                        <clear_list list="$SignalLeakActors"/>
                        <cancel_cue cue="Phase_SignalLeak_Left_Station"/>
                        <set_value name="$Event_Timeout" exact="15s"/>
                        <play_cutscene key="'ShowPilot'" targetmonitor="true" timeout="$Event_Timeout">
                          <interaction text="{30201,4}" param="$SignalLeakActor" param2="'accept_interaction'"/>
                          <param name="npcref" object="$SignalLeakActor"/>
                        </play_cutscene>
                      </actions>
                      <cues>
                        <cue name="Phase_SignalLeak_Unlocked_Wait">
                          <delay exact="50ms"/>
                          <actions>
                            <speak actor="$SignalLeakActor" priority="100">
                              <text line="5039" comment="One moment please."/>
                              <!--<text line="2001" comment="Kenobi: Hello there."/>-->
                            </speak>
                          </actions>
                        </cue>
                        <cue name="Phase_SignalLeak_Interaction_Timeout">
                          <delay exact="$Event_Timeout"/>
                          <actions>
                            <!--Player has missed this opportunity. Turn generic signal leaks back on.-->
                            <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
                            <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="10min"/>
                            <!--Phase_SignalLeak_Find_Station is now reset-->
                          </actions>
                        </cue>
                        <cue name="Phase_SignalLeak_Interact">
                          <conditions>
                            <event_player_interaction param="$SignalLeakActor" param2="'accept_interaction'"/>
                          </conditions>
                          <actions>
                            <!--Player has interacted with a the plot signal leak. Un-suppress the other signal leaks.-->
                            <stop_cutscene key="'ShowPilot'"/>
                            <do_if value="Phase_SignalLeak_Interaction_Timeout.state == cuestate.active">
                              <cancel_cue cue="Phase_SignalLeak_Interaction_Timeout"/>
                            </do_if>
                            <reset_cue cue="SignalLeak_Hint_Message"/>
                          </actions>
                          <cues>
                            <cue name="Phase_SignalLeak_Trigger_Generic_Signal_Leaks">
                              <delay min="1min" max="2min"/>
                              <actions>
                                <debug_text text="'Triggering generic signal leaks'" chance="$DebugChance"/>
                                <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
                                <signal_cue cue="md.Signal_Leaks.TriggerPopulation"/>
                              </actions>
                            </cue>
                            <cue name="Phase_SignalLeak_Start_Conversation">
                              <delay exact="3s"/>
                              <actions>
                                <start_conversation actor="$Boron_Mentor" conversation="introduction" priority="100"/>
                              </actions>
                            </cue>
                            <cue name="Phase_SignalLeak_Premature_Conversation_End">
                              <conditions>
                                <event_conversation_finished actor="$Boron_Mentor"/>
                              </conditions>
                              <actions>
                                <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="30s"/>
                                <!--Phase_SignalLeak_Find_Station is now reset-->
                              </actions>
                            </cue>
                            <!--Linear player choices (just for simplicity and so we know what the player has heard, but only for the first time the player has unlocked the signal leak)-->
                            <cue name="Phase_SignalLeak_Conversation_Section_1">
                              <conditions>
                                <event_conversation_started actor="$Boron_Mentor" conversation="introduction"/>
                              </conditions>
                              <actions>
                                <do_if value="@$BoronVariant">
                                  <allow_conversation_escape enabled="false"/>
                                  <add_npc_line speaker="$Boron_Mentor" line="30253007" hidechoices="true" comment=""/>
                                  <add_npc_line speaker="$Boron_Mentor" line="30253008" hidechoices="true" comment=""/>
                                  <add_npc_line speaker="$Boron_Mentor" line="30253009" hidechoices="true" comment=""/>
                                  <do_if value="not md.Story_Boron.Start.$InitialEmailOffered?">
                                    <write_incoming_message title="{30253,10101}" text="{30253,10102}" source="{30253,10103}" object="md.Story_Boron.Start.$HereticsEnd_WatchfulGazeGate" highpriority="true" interaction="guidance"/>
                                    <set_value name="md.Story_Boron.Start.$InitialEmailOffered"/>
                                  </do_if>
                                  <!-- After we have broadcast this message once, disable Boso's Leak -->
                                  <cancel_cue cue="Phase_SignalLeak_Premature_Conversation_End"/>
                                  <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
                                  <cancel_cue cue="Phase_SignalLeak_Conversation_Section_2"/>
                                  <cancel_cue cue="Phase_SignalLeak_Conversation_Section_3"/>
                                  <cancel_cue cue="Phase_SignalLeak_Conversation_Rejected"/>
                                  <cancel_cue cue="Phase_SignalLeak_Conversation_More_Info"/>
                                  <cancel_cue cue="Phase_SignalLeak_Conversation_Section_1"/>
                                </do_if>
                                <do_else>
                                  <debug_text text="player.age + ' Plot introduction conversation started with ' + $Boron_Mentor + ' ' + $Boron_Mentor.knownname" chance="$DebugChance"/>
                                  <allow_conversation_escape enabled="false"/>
                                  <add_npc_line speaker="$Boron_Mentor" line="30201003" hidechoices="true" comment="Ah, that should do it. I had to disable my voice filter. I was beginning to think my messages were being intercepted by those Split fellows. I'm a little disappointed that this was so easy."/>
                                  <add_npc_line speaker="$Boron_Mentor" line="30201004" hidechoices="true" delay="0.3s" comment="I don't suppose they sent you did they? Oh, that would be quite devious."/>
                                  <!--TODO @Owen
                                OR (if coming back)
                                30201005: "Hmm, have we met before?"-->
                                  <!--Player:
                                - Who are 'they'?-->
                                  <add_player_choice text="{1002,3020101}" section="who_are_they"/>
                                </do_else>
                              </actions>
                            </cue>
                            <cue name="Phase_SignalLeak_Conversation_Section_2">
                              <conditions>
                                <event_conversation_next_section actor="$Boron_Mentor" section="who_are_they"/>
                              </conditions>
                              <actions>
                                <allow_conversation_escape enabled="false"/>
                                <add_npc_line speaker="$Boron_Mentor" line="30201006" hidechoices="true" comment="Hmm, what should I call them. I suppose captors is quite apt. Employers? They let me work on my own projects some days you see."/>
                                <!--Player:
                                - Do you need help?-->
                                <add_player_choice text="{1002,3020102}" section="do_you_need_help" comment="Do you need help?"/>
                              </actions>
                            </cue>
                            <cue name="Phase_SignalLeak_Conversation_Section_3">
                              <conditions>
                                <event_conversation_next_section actor="$Boron_Mentor" section="do_you_need_help"/>
                              </conditions>
                              <actions>
                                <allow_conversation_escape enabled="false"/>
                                <add_npc_line speaker="$Boron_Mentor" line="30201007" hidechoices="true" comment="Ah, yes. You see, I'm in a spot of bother. I am in the middle of some important scientific research which I'm unable to pursue personally from my current location. I'm looking for an assistant to aid me."/>
                                <!--Player:
                                - What do you need?
                                - Sorry, I can't help at the moment.-->
                                <add_player_choice text="{1002,3020104}" section="player_more_info"/>
                                <add_player_choice text="{1002,3020103}" section="player_reject"/>
                              </actions>
                            </cue>
                            <cue name="Phase_SignalLeak_Conversation_Rejected">
                              <conditions>
                                <event_conversation_next_section actor="$Boron_Mentor" section="player_reject"/>
                              </conditions>
                              <actions>
                                <allow_conversation_escape enabled="false"/>
                                <debug_text text="player.age + ' Player rejected plot conversation offer'" chance="$DebugChance"/>
                                <add_npc_line speaker="$Boron_Mentor" line="30201008" hidechoices="true" comment="I see. I expected a more positive response to a mysterious distress call with mention of science. Hmm, perhaps I'll describe it as 'exciting' or 'stimulating' next time to get a better outcome. Oh, you're still there? Thank you for your time."/>
                                <!--Player has explicitly declined-->
                                <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
                                <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="30min"/>
                                <!--Phase_SignalLeak_Find_Station is now reset-->
                              </actions>
                            </cue>
                            <cue name="Phase_SignalLeak_Conversation_More_Info">
                              <conditions>
                                <event_conversation_next_section actor="$Boron_Mentor" section="player_more_info"/>
                              </conditions>
                              <actions>
                                <allow_conversation_escape enabled="false"/>
                                <debug_text text="player.age + ' Player to see briefing'" chance="$DebugChance"/>
                                <add_npc_line speaker="$Boron_Mentor" line="30201009" hidechoices="true" comment="I'll send the task to your ship computer. This is rather exciting!"/>
                                <cancel_cue cue="Phase_SignalLeak_Premature_Conversation_End"/>
                              </actions>
                              <cues>
                                <cue name="Phase_SignalLeak_Conversation_Open_Briefing">
                                  <delay exact="1s"/>
                                  <actions>
                                    <!---
                                    {30201,100} Scientific Expedition
                                    {30201,101} The time approaches where my research will bear fruit and my goal realised. I am looking for an assistant, or rather a partner to assist me in my task as my current hosts are unfortunatly not so inclined to aid me in any field that doesn't directly help them. Quite understandable. I digress.\n\n If you are reading this message, that means you have been selected! Exciting, isn't it! If you follow the instructions, you will be experiencing science before you know it! [BORON NAME]
                                
                                    - (Dock at:) $STATIONNAME$
                                    - (Find:) Interface Unit
                                    - (Fly to:) Scientific area - {30201, 1004}
                                    - (Achieve:) Life's work - {30201, 1005} {30201,1006}-->
                                    <create_offer cue="$MissionCue" actor="$Boron_Mentor" name="{30201,100}" description="{30201,101}" type="missiontype.plot" faction="faction.civilian" difficulty="level.easy">
                                      <briefing>
                                        <objective step="1" action="objective.dockat" text="{30201,1002}" comment="Station"/>
                                        <objective step="2" action="objective.pickup" text="$PickupWare.name"/>
                                        <objective step="3" action="objective.flyto" text="{30201, 1004}" comment="Scientific area"/>
                                        <objective step="4" action="objective.custom" customaction="{30201, 1005}" text="{30201,1006}" comment="(Achieve:) Life's work"/>
                                      </briefing>
                                    </create_offer>
                                    <open_conversation_menu menu="MissionBriefingMenu" param="[0, 0, $MissionCue, true]"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_SignalLeak_Conversation_Reject_Mission">
                                  <conditions>
                                    <event_conversation_finished actor="$Boron_Mentor"/>
                                    <check_value value="Phase_SignalLeak_Conversation_Accept_Mission.state == cuestate.waiting" comment="condition for patching. this cue was added for 0.8 and we need to stop it triggering if the mission was accepted."/>
                                  </conditions>
                                  <delay exact="1s"/>
                                  <actions>
                                    <debug_text text="player.age + ' Player rejected plot conversation offer'" chance="$DebugChance"/>
                                    <speak actor="$Boron_Mentor" line="30201008" comment="I see. I expected a more positive response to a mysterious distress call with mention of science. Hmm, perhaps I'll describe it as 'exciting' or 'stimulating' next time to get a better outcome. Oh, you're still there? Thank you for your time."/>
                                    <!--Player has explicitly declined-->
                                    <remove_offer cue="$MissionCue"/>
                                    <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
                                    <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="30min"/>
                                    <!--Phase_SignalLeak_Find_Station is now reset-->
                                  </actions>
                                </cue>
                                <cue name="Phase_SignalLeak_Conversation_Accept_Mission" version="2">
                                  <conditions>
                                    <check_any>
                                      <event_conversation_next_section actor="$Boron_Mentor" choiceparam="$MissionCue"/>
                                      <event_object_signalled object="$Boron_Mentor" param="'accept'" param2="$MissionCue"/>
                                    </check_any>
                                  </conditions>
                                  <actions>
                                    <cancel_cue cue="Phase_SignalLeak_Conversation_Reject_Mission"/>
                                    <cancel_cue cue="SignalLeak_Hint_Message"/>
                                    <debug_text text="player.age + ' Player accepted mission'" chance="$DebugChance"/>
                                    <set_value name="$CrateSlot" exact="null"/>
                                    <find_object_component name="$LeakStationModules" class="class.walkablemodule" object="$LeakStation" multiple="true"/>
                                    <do_all exact="$LeakStationModules.count" counter="$i">
                                      <find_crate_slot name="$CrateSlot" object="$LeakStationModules.{$i}" tags="tag.crate_s"/>
                                      <do_if value="$CrateSlot">
                                        <break/>
                                      </do_if>
                                    </do_all>
                                    <do_if value="not $CrateSlot">
                                      <!--Fallback if there are no crate slots on the LeakStation. This is safe for low attention-->
                                      <find_station name="$OtherStations" space="$LeakStation.cluster" owner="$SignalLeakStationFactions" multiple="true">
                                        <match_relation_to object="player.entity" comparison="not" relation="enemy"/>
                                      </find_station>
                                      <do_all exact="$OtherStations.count" counter="$i">
                                        <find_object_component name="$LeakStationModules" class="class.walkablemodule" object="$OtherStations.{$i}" multiple="true"/>
                                        <do_all exact="$LeakStationModules.count" counter="$k">
                                          <find_crate_slot name="$CrateSlot" object="$LeakStationModules.{$k}" tags="tag.crate_s"/>
                                          <do_if value="$CrateSlot">
                                            <break/>
                                          </do_if>
                                        </do_all>
                                        <do_if value="$CrateSlot">
                                          <break/>
                                        </do_if>
                                      </do_all>
                                    </do_if>
                                    <!--TODO @Owen - galaxy level search?-->
                                    <do_if value="$CrateSlot">
                                      <debug_text text="player.age + ' - Will attempt to create crate at slot ' + $CrateSlot" chance="$DebugChance"/>
                                      <create_crate name="$Crate" macro="macro.crate_gen_s_01_macro" slot="$CrateSlot"/>
                                      <add_cargo object="$Crate" ware="$PickupWare" exact="1"/>
                                      <create_mission cue="$MissionCue" offercue="$MissionCue" abortable="false"/>
                                      <update_mission cue="$MissionCue" name="{30201,200}" description="{30201,201}" icon="'briefing_boso_ta_02'" iconcaption="{30201,2}"/>
                                      <remove_offer cue="$MissionCue"/>
                                      <set_objective cue="$MissionCue" step="2" action="objective.pickup" object="$Crate" text="$PickupWare.name"/>
                                      <speak actor="$Boron_Mentor" priority="100" line="30201010" comment="Wonderful! I have managed to place the device on a nearby docking area. You should be getting the coordinates now."/>
                                    </do_if>
                                    <do_else>
                                      <debug_text text="'Unable to find suitable crate location. Aborting run.'" filter="error"/>
                                      <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="30s"/>
                                      <!--Phase_SignalLeak_Find_Station is now reset-->
                                      <cancel_conversation actor="$Boron_Mentor"/>
                                    </do_else>
                                  </actions>
                                  <patch sinceversion="2" state="waiting">
                                    <!--Player pressed decline but mission didn't catch it-->
                                    <debug_text text="'Restarting the plot mission as player declined mission in briefing which was not handled.'" filter="savegame"/>
                                    <remove_offer cue="$MissionCue"/>
                                    <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
                                    <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="1min"/>
                                  </patch>
                                  <cues>
                                    <cue name="Phase_SignalLeak_Crate_Lost">
                                      <conditions>
                                        <event_object_destroyed object="$Crate"/>
                                      </conditions>
                                      <actions>
                                        <signal_cue_instantly cue="Phase_SignalLeak_Reset_Helper" param="30s"/>
                                        <!--Phase_SignalLeak_Find_Station is now reset-->
                                      </actions>
                                    </cue>
                                    <cue name="Phase_SignalLeak_Crate_Collected">
                                      <conditions>
                                        <event_player_opened_crate crate="$Crate"/>
                                      </conditions>
                                      <actions>
                                        <debug_text text="player.age + ' - Collected crate'" chance="$DebugChance"/>
                                        <set_objective action="objective.none" cue="$MissionCue"/>
                                        <cancel_cue cue="Phase_SignalLeak_Crate_Lost"/>
                                      </actions>
                                      <cues>
                                        <cue name="Phase_SignalLeak_Crate_Collected_Delay">
                                          <delay exact="1s"/>
                                          <actions>
                                            <!--
                                            <text line="30201011" comment="Very good. I see you have found the device. This will allow me to monitor your activity and perform experiments remotely. Please keep it safe."/>
                                            <text line="30201012" comment="Oh my. It seems that your pulse is elevated. You must be very excited to take part in this expedition. I'm glad!"/>
                                            <text line="30201016" comment="So, shall we begin. I will attempt to direct you in the best way possible. Please be patient with me."/>-->
                                            <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201011, 0s], [30201012, 2s], [30201016, 1s]]"/>
                                            <signal_cue cue="Mentor_Speak_Helper"/>
                                          </actions>
                                        </cue>
                                        <cue name="Phase_SignalLeak_Crate_Collected_End">
                                          <conditions>
                                            <event_speak_finished actor="$Boron_Mentor" line="30201016"/>
                                          </conditions>
                                          <actions>
                                            <!--Store the leakstation sector for later, in case it gets destroyed-->
                                            <set_value name="$LeakStationSector" exact="$LeakStation.sector"/>
                                            <signal_cue cue="Phase_TheAnomaly"/>
                                            <reset_cue cue="Phase_SignalLeak"/>
                                          </actions>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="Phase_TheAnomaly">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <include_actions ref="ActivatePhase"/>
            <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
          </actions>
          <cues>
            <!--<cue name="Phase_TheAnomaly_Init">
              <actions>

              </actions>
            </cue>-->
            <cue name="Phase_TheAnomaly_FlyTo">
              <actions>
                <do_if value="player.sector">
                  <set_value name="$AnomalySector" exact="player.sector"/>
                </do_if>
                <do_else>
                  <!--super highway (shouldn't really happen but just in case)-->
                  <assert value="player.zone.isclass.highway" text="'Player is not in a super highway nor an actual sector [Owen]'"/>
                  <set_value name="$AnomalySector" exact="player.zone.destination.sector"/>
                  <do_if value="not $AnomalySector">
                    <!--random sector-->
                    <find_sector name="$AnomalySector"/>
                  </do_if>
                </do_else>
                <!--TODO @Owen positioning-->
                <do_if value="player.entity.hascontext.{$AnomalySector}">
                  <create_position name="$SectorPos" object="player.entity" space="$AnomalySector"/>
                </do_if>
                <do_else>
                  <set_value name="$SectorPos" exact="position.[0m, 0m, 0m]"/>
                </do_else>
                <set_value name="$X" min="$SectorPos.x - 150km" max="$SectorPos.x + 150km"/>
                <set_value name="$Y" min="$SectorPos.y - 20km" max="$SectorPos.y + 20km"/>
                <set_value name="$Z" min="$SectorPos.z - 150km" max="$SectorPos.z + 150km"/>
                <create_object name="$OriginAnomaly" macro="macro.wormhole_v1_macro" sector="$AnomalySector">
                  <safepos x="$X" y="$Y" z="$Z"/>
                </create_object>
                <create_object name="$DestinationAnomaly" macro="macro.wormhole_v1_macro" sector="$HQSector">
                  <safepos value="$DestinationAnomalyPosition"/>
                </create_object>
                <debug_text text="player.age + ' created detination anomaly ' + $DestinationAnomaly" chance="$DebugChance"/>
                <add_anomaly_destination anomaly="$OriginAnomaly" destination="$DestinationAnomaly"/>
                <do_if value="not $MissionCue.hasmission">
                  <create_mission cue="$MissionCue" name="{30201,200}" description="{30201,201}" type="missiontype.plot" faction="faction.civilian" difficulty="level.easy" abortable="false"/>
                </do_if>
                <update_mission cue="$MissionCue" name="{30201,200}" description="{30201,201}" icon="'briefing_boso_ta_02'" iconcaption="{30201,2}">
                  <briefing replace="true">
                    <objective step="1" action="objective.dockat" text="{30201,1002}" comment="Station"/>
                    <objective step="2" action="objective.pickup" text="$PickupWare.name"/>
                    <objective step="3" action="objective.flyto" text="{30201, 1004}" comment="Scientific area"/>
                    <objective step="4" action="objective.custom" customaction="{30201, 1005}" text="{30201,1006}" comment="(Achieve:) Life's work"/>
                  </briefing>
                </update_mission>
                <create_position name="$ObjectivePos" object="$OriginAnomaly" min="4km" max="6km" space="$AnomalySector"/>
                <set_value name="$FlyToDistance" exact="20km"/>
                <do_if value="player.station">
                  <set_objective cue="$MissionCue" action="objective.undock" step="3"/>
                </do_if>
                <set_value name="$AnomalyFindTime" exact="null"/>
              </actions>
              <cues>
                <cue name="Phase_TheAnomaly_Introduction" checkinterval="2s">
                  <conditions>
                    <check_value value="not player.station"/>
                  </conditions>
                  <delay exact="6s"/>
                  <actions>
                    <!--
                    <text line="30201020" comment="I don't expect you've spoken to too many Boron, allow me to introduce myself. My name is Boso Ta and it is a pleasure. I do wish it were in person but my current situation is quite precarious."/>
                    <text line="30201021" comment="You must be very curious on what a old lonely Boron is trying to achieve. There are still so many mysteries and unanswered questions. Are Spaceflies sentient? Where are the lost Boron systems? Is faster than light telepathy possible?"/>
                    <text line="30201022" comment="It is our task to push the physics of this universe to the breaking point and see if it answers any of those questions! My current employers only seem happy when my research results in novel weapon modifications. Very curious people, those Split."/>
                    <text line="30201023" comment="I do hope they move me to a new tank soon. My tentacles grow weak."/>-->
                    <!--We have to do this as a single <speak/> with multiple queued lines does not fire the event at the end of the final line.-->
                    <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201020, 0s], [30201021, 0.1s], [30201022, 0.1s], [30201023, 0.8s]]"/>
                    <signal_cue cue="Mentor_Speak_Helper"/>
                  </actions>
                </cue>
                <cue name="Phase_TheAnomaly_Flyto_Objective">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor" line="30201020"/>
                  </conditions>
                  <actions>
                    <set_objective cue="$MissionCue" action="objective.flyto" object="$AnomalySector" offset="$ObjectivePos" text="{30201,1004}" radius="$FlyToDistance"/>
                  </actions>
                  <cues>
                    <cue name="Phase_TheAnomaly_TravelMode_Hint">
                      <delay exact="10s"/>
                      <actions>
                        <do_if value="player.activity != activity.travel">
                          <show_help line="4301" position="13" force="true" comment="Press $INPUT_ACTION_TOGGLE_TRAVEL_MODE$ or activate TRAVEL MODE from the SHIP MENU \($INPUT_ACTION_OPEN_COCKPIT_MENU$\)."/>
                        </do_if>
                      </actions>
                    </cue>
                    <cue name="Phase_TheAnomaly_Chatter_V2" comment="_V2 as cue was moved">
                      <delay exact="45s"/>
                      <actions>
                        <do_if value="Phase_TheAnomaly_FlyTo_Near.state != cuestate.waiting">
                          <cancel_cue cue="Phase_TheAnomaly_Chatter_V2"/>
                        </do_if>
                      </actions>
                      <cues>
                        <cue name="Phase_TheAnomaly_Chatter_V2_Trigger" checkinterval="5s">
                          <conditions>
                            <check_value value="Phase_TheAnomaly_Chatter_V2.state == cuestate.complete"/>
                            <check_value value="not player.station"/>
                            <check_value value="$MissionCue.hasguidance"/>
                          </conditions>
                          <actions>
                            <speak actor="$Boron_Mentor" priority="80" line="30201013" comment="I do wonder how my homeworld is faring. It has been such a long time since we have heard news of it."/>
                            <append_to_list name="$SpokenChatterLines" exact="30201013"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
                <cue name="Phase_TheAnomaly_FlyTo_Near" checkinterval="1s">
                  <conditions>
                    <check_value value="player.sector == $AnomalySector and player.entity.distanceto.[$AnomalySector, $ObjectivePos] le $FlyToDistance"/>
                  </conditions>
                  <actions>
                    <debug_text text="player.age + ' player entered the area'" chance="$DebugChance"/>
                    <cancel_cue cue="Phase_TheAnomaly_Flyto_Objective"/>
                    <do_if value="player.ship.longrange">
                      <!--
                      <text line="30201024" comment="We appear to be getting close to where I detected an anomaly."/>
                      <text line="30201026" comment="Could you please try using the Long-Range Scanner to search for an anomaly in this vicinity.(for LRS name see {20108,1001} )"/>-->
                      <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201024, 0s], [30201026, 0.3s]]"/>
                    </do_if>
                    <do_else>
                      <!--TODO @Owen - we can't rely on player.ship. What if in spacesuit-->
                      <set_value name="$LRSShip" exact="player.ship"/>
                      <!--
                      <text line="30201024" comment="We appear to be getting close to where I detected an anomaly."/>
                      <text line="30201025" comment="I've uploaded new software to your ship systems."/>
                      <text line="30201026" comment="Could you please try using the Long-Range Scanner to search for an anomaly in this vicinity.(for LRS name see {20108,1001} )"/>-->
                      <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201024, 0s], [30201025, 0.3s], [30201026, 0.3s]]"/>
                    </do_else>
                    <signal_cue cue="Mentor_Speak_Helper"/>
                  </actions>
                </cue>
                <cue name="Phase_TheAnomaly_Install_LRS">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor" line="30201025"/>
                  </conditions>
                  <actions>
                    <install_software object="$LRSShip" software="ware.software_scannerlongrangemk1"/>
                    <!--TODO @Owen notification of software being installed-->
                  </actions>
                </cue>
                <cue name="Phase_TheAnomaly_Anomaly_Found__LRS">
                  <conditions>
                    <event_long_range_scan_ping object="$OriginAnomaly"/>
                  </conditions>
                  <actions>
                    <set_value name="$AnomalyFindTime" exact="player.age + 1"/>
                  </actions>
                </cue>
                <cue name="Phase_TheAnomaly_Anomaly_Found__Near" checkinterval="1s">
                  <conditions>
                    <check_value value="player.sector == $OriginAnomaly.sector and player.entity.distanceto.{$OriginAnomaly} le 2km"/>
                  </conditions>
                  <actions>
                    <set_value name="$AnomalyFindTime" exact="player.age"/>
                  </actions>
                </cue>
                <cue name="Phase_TheAnomaly_Next_Zone_Hint" checkinterval="5ms">
                  <conditions>
                    <check_value value="player.sector == $OriginAnomaly.sector and player.entity.distanceto.{$OriginAnomaly} le 20m"/>
                  </conditions>
                  <actions>
                    <precache_hint target="$DestinationAnomaly.zone" includechildren="true"/>
                  </actions>
                </cue>
                <cue name="Phase_TheAnomaly_Find_Anomaly">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor" line="30201026"/>
                  </conditions>
                  <actions>
                    <update_mission cue="$MissionCue">
                      <briefing>
                        <objective step="4" action="objective.find" object="$AnomalySector" offset="$ObjectivePos" text="{30201, 1007}" comment="Find: Anomaly"/>
                      </briefing>
                    </update_mission>
                    <set_objective cue="$MissionCue" step="4" action="objective.find" object="$AnomalySector" offset="$ObjectivePos" text="{30201, 1007}" radius="$FlyToDistance" comment="Find: Anomaly"/>
                  </actions>
                  <cues>
                    <!--TODO @Owen check if the player enters through the anomaly-->
                    <cue name="Phase_TheAnomaly_Find_Hint">
                      <delay exact="1min"/>
                      <actions>
                        <speak actor="$Boron_Mentor" priority="100" line="30201036" comment="Are you having trouble locating the anomaly in the area I have stated? I suggest you use the Long-Range scanner to help find it."/>
                      </actions>
                    </cue>
                    <cue name="Phase_TheAnomaly_Identified" checkinterval="50ms">
                      <conditions>
                        <check_value value="$AnomalyFindTime and player.age gt $AnomalyFindTime"/>
                      </conditions>
                      <actions>
                        <cancel_cue cue="Phase_TheAnomaly_Find_Hint"/>
                        <!--
                        30201027: "Ahha! There it is. If reports are to be believed, these anomalies are tears which may lead to other areas of space, much like the Jump Gates."
                        30201034: "I suggest you mark the location of the anomaly on your map."
                        30201028: "So, how adventurous do you feel today? Thanks to my research, I do have a fair idea of where you map end up. Of course, the quickest way to confirm my theory is to put it into practice!"-->
                        <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201027, 0.3s], [30201034, 0.4s], [30201028, 0.4s]]"/>
                        <signal_cue cue="Mentor_Speak_Helper"/>
                        <update_mission cue="$MissionCue">
                          <briefing>
                            <objective step="4" action="objective.custom" customaction="{30201, 1008}" object="$AnomalySector" offset="$ObjectivePos" text="{30201, 1007}" comment="Fly into: Anomaly"/>
                          </briefing>
                        </update_mission>
                        <set_objective cue="$MissionCue" step="4" action="objective.custom" customaction="{30201, 1008}" object="$OriginAnomaly" text="{30201, 1007}" comment="Fly into: Anomaly"/>
                        <set_value name="$EnteredAnomaly" exact="false"/>
                      </actions>
                    </cue>
                    <cue name="Phase_TheAnomaly_Enter_Anomaly">
                      <conditions>
                        <event_speak_finished actor="$Boron_Mentor" line="30201028"/>
                      </conditions>
                      <actions>
                        <update_mission cue="$MissionCue">
                          <briefing>
                            <objective step="4" action="objective.custom" customaction="{30201,1008}" text="{30201,1007}" object="$OriginAnomaly" comment="Fly into: Anomaly"/>
                          </briefing>
                        </update_mission>
                        <set_objective cue="$MissionCue" step="4" action="objective.custom" customaction="{30201,1008}" text="{30201,1007}" object="$OriginAnomaly" comment="Fly into: Anomaly"/>
                      </actions>
                      <cues>
                        <cue name="Phase_TheAnomaly_Enter_Anomaly_Impatient">
                          <delay exact="3min"/>
                          <actions>
                            <speak actor="$Boron_Mentor" priority="100" line="30201039" comment="I don't mean to distract you from your business but do you intend to investigate that anomaly further? My tenticles are tingling in anticipation of the science we will achieve!"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                    <!--TODO @Owen 30201035: "Oh, it appears you have found another anomaly! How interesting."-->
                    <cue name="Phase_TheAnomaly_Having_Trouble" checkinterval="1s">
                      <conditions>
                        <check_value value="Phase_TheAnomaly_Enter_Anomaly.state == cuestate.complete and player.sector == $OriginAnomaly.sector and player.entity.distanceto.{$OriginAnomaly} lt 1km"/>
                      </conditions>
                      <cues>
                        <cue name="Phase_TheAnomaly_Having_Trouble_Comment" checkinterval="1s">
                          <conditions>
                            <check_value value="player.age ge Phase_TheAnomaly_Having_Trouble.time + 30s and player.sector == $OriginAnomaly.sector and player.entity.distanceto.{$OriginAnomaly} lt 5km"/>
                          </conditions>
                          <actions>
                            <set_value name="$AnomalyHintTime" exact="player.age"/>
                            <speak actor="$Boron_Mentor" priority="80" line="30201037" comment="Hmm, it does seem quite tricky getting through the anomaly. It appears to require some speed to punch through."/>
                            <cancel_cue cue="Phase_TheAnomaly_Having_Trouble"/>
                          </actions>
                        </cue>
                        <cue name="Phase_TheAnomaly_Having_Trouble_Reset" checkinterval="1s">
                          <conditions>
                            <check_value value="player.age ge Phase_TheAnomaly_Having_Trouble.time + 30s and (player.sector != $OriginAnomaly.sector or player.entity.distanceto.{$OriginAnomaly} ge 5km)"/>
                          </conditions>
                          <actions>
                            <reset_cue cue="Phase_TheAnomaly_Having_Trouble"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="Phase_TheAnomaly_Having_Trouble_2" checkinterval="1s">
                      <conditions>
                        <check_value value="@$AnomalyHintTime and player.sector == $OriginAnomaly.sector and player.entity.distanceto.{$OriginAnomaly} lt 1km"/>
                      </conditions>
                      <cues>
                        <cue name="Phase_TheAnomaly_Having_Trouble_2_Comment" checkinterval="1s">
                          <conditions>
                            <check_value value="player.age ge $AnomalyHintTime + 1min"/>
                          </conditions>
                          <actions>
                            <do_if value="player.ship.boost.maxspeed gt 0m and player.sector == $OriginAnomaly.sector and player.entity.distanceto.{$OriginAnomaly} lt 5km">
                              <speak actor="$Boron_Mentor" priority="80" line="30201038" comment="(joke)It looks like you're trying to enter an anomaly. Would you like help with that?"/>
                            </do_if>
                            <do_else>
                              <cancel_cue cue="Phase_TheAnomaly_Having_Trouble_2"/>
                            </do_else>
                          </actions>
                          <cues>
                            <cue name="Phase_TheAnomaly_Having_Trouble_2_Hint">
                              <conditions>
                                <event_speak_finished actor="$Boron_Mentor" line="30201038"/>
                              </conditions>
                              <actions>
                                <show_help custom="{30201,152}" position="2" comment="You can gain a speed boost by boosting."/>
                              </actions>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="Phase_TheAnomaly_Entered_Anomaly">
                      <conditions>
                        <event_player_entered_anomaly exit="$DestinationAnomaly"/>
                      </conditions>
                      <actions>
                        <cancel_cue cue="Phase_TheAnomaly_Enter_Anomaly"/>
                        <set_value name="$EnteredAnomaly" exact="true"/>
                        <!--Clear guidance-->
                        <set_objective cue="$MissionCue" action="objective.none"/>
                      </actions>
                    </cue>
                    <cue name="Phase_TheAnomaly_At_Destination" checkinterval="1s">
                      <conditions>
                        <!--Player could have flown there-->
                        <check_value value="Phase_TheAnomaly_Entered_Anomaly.state == cuestate.complete or (player.sector == $DestinationAnomaly.sector and player.entity.distanceto.{$DestinationAnomaly} lt 5km)"/>
                      </conditions>
                      <delay exact="7s"/>
                      <actions>
                        <do_if value="$EnteredAnomaly">
                          <!--
                          30201029: "Can you hear me? It took a moment to realign the frequency. It is just as I thought. You have made it through the anomaly and emerged in a distant region."
                          30201030: "Your location is actually of great interest to me. Over the years, I have managed to pull sensor logs from passing ships to help further my research. I highlighted this as a prime location for my research, should I ever get the chance."-->
                          <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201029, 0s], [30201030, 0.3s]]"/>
                        </do_if>
                        <do_else>
                          <cancel_cue cue="Phase_TheAnomaly_Enter_Anomaly"/>
                          <!--
                          30201031: "I'm sorry to interrupt, but it seems that you have arrived at a rather curious location."
                          30201030: "Your location is actually of great interest to me. Over the years, I have managed to pull sensor logs from passing ships to help further my research. I highlighted this as a prime location for my research, should I ever get the chance."-->
                          <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201031, 0s], [30201030, 0.3s]]"/>
                        </do_else>
                        <signal_cue cue="Mentor_Speak_Helper"/>
                      </actions>
                    </cue>
                    <cue name="Phase_TheAnomaly_End">
                      <conditions>
                        <event_speak_finished actor="$Boron_Mentor" line="30201030"/>
                      </conditions>
                      <actions>
                        <signal_cue cue="Phase_Preparations"/>
                        <reset_cue cue="Phase_TheAnomaly"/>
                      </actions>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="Phase_Preparations">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <include_actions ref="ActivatePhase"/>
            <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
          </actions>
          <cues>
            <cue name="Phase_Preparations_Intro">
              <delay exact="2s"/>
              <actions>
                <speak actor="$Boron_Mentor" priority="100" line="30201040" comment="While the previous anomaly is interesting, my findings point to something else here which I expect will lead to a ground-breaking discovery. Allow me to guide you to a particular area."/>
              </actions>
              <cues>
                <cue name="Phase_Preparations_FlyTo">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor" line="30201040"/>
                  </conditions>
                  <actions>
                    <do_if value="not $MissionCue.hasmission">
                      <create_mission cue="$MissionCue" name="{30201,200}" description="{30201,201}" type="missiontype.plot" faction="faction.civilian" difficulty="level.easy" abortable="false"/>
                    </do_if>
                    <update_mission cue="$MissionCue" icon="'briefing_boso_ta_02'" iconcaption="{30201,2}">
                      <briefing replace="true">
                        <objective step="1" action="objective.pickup" text="$PickupWare.name"/>
                        <objective step="2" action="objective.custom" customaction="{30201,1008}" text="{30201,1007}" object="$OriginAnomaly" comment="Fly into: Anomaly"/>
                        <objective step="3" action="objective.flyto" text="{30201, 1009}" comment="Point of interest"/>
                        <objective step="4" action="objective.custom" customaction="{30201, 1010}" text="{30201,1009}" comment="Investigate: Point of interest"/>
                        <objective step="5" action="objective.custom" customaction="{30201, 1005}" text="{30201,1006}" comment="(Achieve:) Life's work"/>
                      </briefing>
                    </update_mission>
                    <set_value name="$FlyToDistance" exact="2km"/>
                    <set_objective cue="$MissionCue" step="3" action="objective.flyto" text="{30201, 1009}" object="$HQSector" offset="$HQPosition" radius="$FlyToDistance"/>
                  </actions>
                  <cues>
                    <cue name="Phase_Preparations_Near" checkinterval="1s">
                      <conditions>
                        <check_value value="player.sector == $HQSector and player.entity.distanceto.[$HQSector, $HQPosition] lt $FlyToDistance"/>
                      </conditions>
                      <actions>
                        <!--
                        30201041: "I am currently evaluating what equipment we will need to take the most of this location."
                        30201042: "Space here is wounded, with a scar in its fabric which seems to have healed multiple times. There is no record of any abnormal activity at these sites. To everyone else, this is simply an empty area of space."
                        30201043: "In the search for signals from long-lost Boron I detected multiple scars in space which continue to spew a multitude of particles and radiation. In a bustling sector such as this, it would only be seen as background noise. However, some of the noise seems to have artificial form."
                        30201044: "We are going to tear this scar wide open and peer inside! Of course, the universe is a fickle thing. One miscalculation and we may well destroy this whole system. Ha! Such stakes make this all the more exciting!"
                        30201045: "Before we get started, allow me to reimburse you for your help so far. I do hope the Split don't mind me using their credit account to help fund our venture."-->
                        <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201041, 0s], [30201042, 0.4s], [30201043, 0.2s], [30201044, 0.4s], [30201045, 0.5s]]"/>
                        <signal_cue cue="Mentor_Speak_Helper"/>
                      </actions>
                    </cue>
                    <cue name="Phase_Preparations_Reward">
                      <conditions>
                        <event_speak_finished actor="$Boron_Mentor" line="30201045"/>
                      </conditions>
                      <actions>
                        <reward_player money="25000Cr"/>
                      </actions>
                      <cues>
                        <cue name="Phase_Preparations_Instructions">
                          <delay exact="5s"/>
                          <actions>
                            <set_value name="$Shipyard" exact="null"/>
                            <set_value name="$Wharf" exact="null"/>
                            <find_cluster_in_range name="$NearClusters" object="$HQSector" maxdistance="1" multiple="true"/>
                            <do_all exact="$NearClusters.count" counter="$i">
                              <find_station name="$Shipyard" space="$NearClusters.{$i}" canbuildequipment="ware.satellite_mk1" canbuildclass="class.ship_l" known="false" chance="if $Shipyard then 0 else 100">
                                <match_relation_to object="player.entity" comparison="not" relation="enemy"/>
                              </find_station>
                              <find_station name="$Wharf" space="$NearClusters.{$i}" canbuildequipment="ware.satellite_mk1" canbuildclass="class.ship_s" known="false" chance="if $Wharf then 0 else 100">
                                <match_relation_to object="player.entity" comparison="not" relation="enemy"/>
                              </find_station>
                              <do_if value="$Shipyard and $Wharf">
                                <break/>
                              </do_if>
                            </do_all>
                            <!--Only reveal equipment stations if one of them can work on the player ship, just so they are not confused if we reveal only one which is not compatible with their current ship
                            If not currently in a ship, just reveal what we can-->
                            <do_if value="not player.ship or (($Shipyard and $Shipyard.canbuildclass.{player.ship.class}) or ($Wharf and $Wharf.canbuildclass.{player.ship.class}))">
                              <do_if value="$Shipyard">
                                <set_known object="$Shipyard" known="true" updatesnapshot="true"/>
                                <set_known object="$Shipyard.zone" known="true"/>
                                <set_known object="$Shipyard.sector" known="true"/>
                                <set_known object="$Shipyard.cluster" known="true"/>
                              </do_if>
                              <do_if value="$Wharf">
                                <set_known object="$Wharf" known="true" updatesnapshot="true"/>
                                <set_known object="$Wharf.zone" known="true"/>
                                <set_known object="$Wharf.sector" known="true"/>
                                <set_known object="$Wharf.cluster" known="true"/>
                              </do_if>
                            </do_if>
                            <do_else>
                              <set_value name="$Shipyard" exact="null"/>
                              <set_value name="$Wharf" exact="null"/>
                            </do_else>
                            <!--
                            30201046: "Now, the experiment. You will first need to place a satellite around this area in order for us to better understand its nature and how to best provoke the invisible anomaly."
                            30201047: "I suggest you also deploy a resource probe so that we can see how the anomaly has affected the local environment. You should be able to acquire these deployable items from stations which offer upgrades."
                            30201048: "I know of such a station near your location. I will add the information to your map."-->
                            <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201046, 0s], [30201047, 0.3s]]"/>
                            <do_if value="$Shipyard or $Wharf">
                              <!--TODO @Owen @Text hint for starting guidance to objects via the map-->
                              <append_to_list name="Mentor_Speak_Helper.$Lines" exact="[30201048, 0.3s]"/>
                            </do_if>
                            <signal_cue cue="Mentor_Speak_Helper"/>
                            <substitute_text text="$ResourceProbeObjective" source="{30136,140}">
                              <replace string="'$NUMBER$'" with="1"/>
                            </substitute_text>
                            <update_mission cue="$MissionCue">
                              <briefing>
                                <objective step="1" action="objective.pickup" text="$PickupWare.name"/>
                                <objective step="2" action="objective.custom" customaction="{30201,1008}" text="{30201,1007}" object="$OriginAnomaly" comment="Fly into: Anomaly"/>
                                <objective step="3" action="objective.flyto" text="{30201, 1009}" comment="Point of interest"/>
                                <!--Step 4 taken care of in RML-->
                                <objective step="5" action="objective.deploy" text="$ResourceProbeObjective" comment="Deploy: 1 Resource Probe"/>
                                <objective step="6" action="objective.custom" customaction="{30201,1005}" text="{30201,1006}" comment="(Achieve:) Life's work"/>
                              </briefing>
                            </update_mission>
                          </actions>
                        </cue>
                        <cue name="Phase_Preparations_Get_Satellites">
                          <conditions>
                            <event_speak_finished actor="$Boron_Mentor"/>
                            <check_value value="(Mentor_Speak_Helper.$Lines.count == 2 and event.param2 == 30201047) or event.param2 == 30201048"/>
                          </conditions>
                          <actions>
                            <set_value name="$SatellitePlacementDist" exact="3km"/>
                          </actions>
                          <cues>
                            <cue name="Phase_Preparations_DeployInPlace_Sat_Ref" ref="md.RML_DeployInPlace.DeployInPlace">
                              <param name="EndSignalCue" value="Phase_Preparations_DeployInPlace_End"/>
                              <param name="MissionCue" value="$MissionCue"/>
                              <param name="StartStep" value="4" comment="Briefing step to start the mission on"/>
                              <param name="DebugChance" value="$DebugChance"/>
                              <param name="ObjectiveText" value="{30136,130}"/>
                              <param name="ObjectiveText_InRange" value="{30136,131}"/>
                              <param name="ObjectiveText_Plural" value="{30136,132}"/>
                              <param name="ObjectiveText_InRange_Plural" value="{30136,133}"/>
                              <param name="TargetSector" value="$HQSector"/>
                              <param name="TargetOffset" value="$HQPosition"/>
                              <param name="TargetRadius" value="$SatellitePlacementDist"/>
                              <param name="TargetCount" value="1"/>
                              <param name="DeployableCategory" value="deployablecategory.satellite"/>
                            </cue>
                            <cue name="Phase_Preparations_Shipyard_Hint">
                              <delay exact="5s"/>
                              <actions>
                                <show_help custom="{30201,150}" comment="Satellites and Resource Probes are available at stations where you can upgrade ships."/>
                              </actions>
                            </cue>
                            <cue name="Phase_Preparations_Probe_Hint">
                              <delay exact="2min"/>
                              <actions>
                                <show_help custom="{30201,151}" comment="Your task will require a Satellite and a Resource Probe."/>
                              </actions>
                            </cue>
                            <cue name="Phase_Preparations_Chatter">
                              <delay exact="3min"/>
                              <cues>
                                <cue name="Phase_Preparations_Chatter_Trigger" checkinterval="5s">
                                  <conditions>
                                    <check_value value="Phase_Preparations_Chatter.state == cuestate.complete"/>
                                    <check_value value="not player.station"/>
                                    <check_value value="$MissionCue.hasguidance"/>
                                  </conditions>
                                  <actions>
                                    <speak actor="$Boron_Mentor" priority="80" line="30201014" comment="Should we ever get to meet face to face, I do hope that you can bring me some fresh BoFu. The nuggets the Split give me are more stale than their humour."/>
                                    <append_to_list name="$SpokenChatterLines" exact="30201014"/>
                                  </actions>
                                  <cues>
                                    <cue name="Phase_Preparations_Chatter_2">
                                      <delay exact="5min"/>
                                      <cues>
                                        <cue name="Phase_Preparations_Chatter_2_Trigger" checkinterval="5s">
                                          <conditions>
                                            <check_value value="Phase_Preparations_Chatter_2.state == cuestate.complete"/>
                                            <check_value value="not player.station"/>
                                            <check_value value="$MissionCue.hasguidance"/>
                                          </conditions>
                                          <actions>
                                            <speak actor="$Boron_Mentor" priority="80" line="30201118" comment="Have you heard the Split legends regarding the 'Space Duck' of Namek? A creature so majestic it brings even the Split to tears. I heard my captors speaking of it in passing."/>
                                            <append_to_list name="$SpokenChatterLines" exact="30201118"/>
                                          </actions>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="Phase_Preparations_Near_Satellite_Area" checkinterval="2s">
                              <conditions>
                                <check_value value="player.age ge Phase_Preparations_Get_Satellites.time + 10s and player.sector == $HQSector and player.controlled and player.controlled.ammostorage.{deployablecategory.satellite}.count and player.controlled.distanceto.[$HQSector, $HQPosition] lt $SatellitePlacementDist + 1km"/>
                              </conditions>
                              <actions>
                                <speak actor="$Boron_Mentor" priority="100" line="30201050" comment="The placement must be precise."/>
                              </actions>
                            </cue>
                            <cue name="Phase_Preparations_Bad_Satellite_Deploy">
                              <conditions>
                                <event_satellite_launched space="$HQSector"/>
                                <check_value value="event.param2.distanceto.[$HQSector, $HQPosition]" min="$SatellitePlacementDist + 1m" max="$SatellitePlacementDist + 2km"/>
                              </conditions>
                              <actions>
                                <speak actor="$Boron_Mentor" priority="100" line="30201051" comment="Hmm, no. That satellite is not placed in a favorable position. You can collect it and redeploy if you wish."/>
                              </actions>
                            </cue>
                            <cue name="Phase_Preparations_DeployInPlace_End">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <cancel_cue cue="Phase_Preparations_Chatter"/>
                                <cancel_cue cue="Phase_Preparations_Near_Satellite_Area"/>
                                <cancel_cue cue="Phase_Preparations_Bad_Satellite_Deploy"/>
                                <set_objective cue="$MissionCue" action="objective.none"/>
                              </actions>
                              <cues>
                                <cue name="Phase_Preparations_DeployInPlace_End_Delay">
                                  <delay exact="3s"/>
                                  <actions>
                                    <!--
                                    30201052: "Ah, good work. I am receiving a much clearer signal from the tear. Almost immediately, I can see that there are far more gravimetric shears here compared to any other anomaly ever documented. That indicates mass, but of what?"
                                    30201053: "This shows some similarities with a Jump Gate event horizon but there is something else. Could it be a temporal distortion? Perhaps dimensional? Very interesting."-->
                                    <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201052, 0s], [30201053, 0.6s]]"/>
                                    <signal_cue cue="Mentor_Speak_Helper"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="Phase_Preparations_Resource_Probe">
                              <conditions>
                                <event_speak_finished actor="$Boron_Mentor" line="30201053"/>
                              </conditions>
                              <actions>
                                <!--TODO @Owen better position in region-->
                                <set_value name="$ResourceProbePosition" exact="position.[126km, 1km, 195km]"/>
                                <set_value name="$ResourceProbePlacementDist" exact="3km"/>
                                <find_object name="$ResourceProbe" deployablecategory="deployablecategory.resourceprobe" owner="faction.player" space="$HQSector">
                                  <match_distance space="$HQSector" value="$ResourceProbePosition" max="$ResourceProbePlacementDist"/>
                                </find_object>
                              </actions>
                              <cues>
                                <cue name="Phase_Preparations_Resource_Probe_Deployed_Early_Speak" onfail="cancel">
                                  <conditions>
                                    <check_value value="$ResourceProbe"/>
                                  </conditions>
                                  <delay exact="1s"/>
                                  <actions>
                                    <speak actor="$Boron_Mentor" priority="100" line="30201055" comment="I see that you have already placed the resource probe in a suitable location. Very good."/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Preparations_Resource_Probe_Deployed_Early_Speak_End">
                                  <conditions>
                                    <event_speak_finished actor="$Boron_Mentor" line="30201055"/>
                                  </conditions>
                                  <actions>
                                    <signal_cue cue="Phase_Preparations_Resource_Probe_Placed"/>
                                    <cancel_cue cue="Phase_Preparations_Resource_Probe"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Preparations_Resource_Probe_Deploy_Speak" onfail="cancel">
                                  <conditions>
                                    <check_value value="not $ResourceProbe"/>
                                  </conditions>
                                  <delay exact="1s"/>
                                  <actions>
                                    <speak actor="$Boron_Mentor" priority="100" line="30201054" comment="If you would now deploy a resource probe in the specified area, I am curious of this environment."/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Preparations_Resource_Probe_Deploy_Speak_End">
                                  <conditions>
                                    <event_speak_finished actor="$Boron_Mentor" line="30201054"/>
                                  </conditions>
                                  <cues>
                                    <cue name="Phase_Preparations_DeployInPlace_Probe_Ref" ref="md.RML_DeployInPlace.DeployInPlace">
                                      <param name="EndSignalCue" value="Phase_Preparations_Resource_Probe_Placed"/>
                                      <param name="MissionCue" value="$MissionCue"/>
                                      <param name="StartStep" value="5" comment="Briefing step to start the mission on"/>
                                      <param name="DebugChance" value="$DebugChance"/>
                                      <param name="ObjectiveText" value="{30136,140}"/>
                                      <param name="ObjectiveText_InRange" value="{30136,141}"/>
                                      <param name="ObjectiveText_Plural" value="{30136,142}"/>
                                      <param name="ObjectiveText_InRange_Plural" value="{30136,143}"/>
                                      <param name="TargetSector" value="$HQSector"/>
                                      <param name="TargetOffset" value="$ResourceProbePosition"/>
                                      <param name="TargetRadius" value="$ResourceProbePlacementDist"/>
                                      <param name="TargetCount" value="1"/>
                                      <param name="DeployableCategory" value="deployablecategory.resourceprobe"/>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="Phase_Preparations_Resource_Probe_Placed">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <cues>
                                <cue name="Phase_Preparations_Resource_Probe_Placed_Speak">
                                  <delay exact="2s"/>
                                  <actions>
                                    <!--
                                    30201056: "You will now be able to see the yields of the resources in the area, should you wish to extract them. As for our research, it seems that nearby objects are covered in exotic particles, possibly spewed from the anomaly."
                                    30201057: "I hate to be a bother, but I have an idea on how to proceed."-->
                                    <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201056, 0s], [30201057, 0.8s]]"/>
                                    <signal_cue cue="Mentor_Speak_Helper"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Preparations_End">
                                  <conditions>
                                    <event_speak_finished actor="$Boron_Mentor" line="30201057"/>
                                  </conditions>
                                  <actions>
                                    <unlock_achievement name="PLOT_1"/>
                                    <signal_cue cue="Phase_TheExperiment"/>
                                    <reset_cue cue="Phase_Preparations"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="Phase_TheExperiment">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <include_actions ref="ActivatePhase"/>
            <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
            <substitute_text text="$SatelliteObjective" source="{30136,130}">
              <replace string="'$NUMBER$'" with="1"/>
            </substitute_text>
            <substitute_text text="$ResourceProbeObjective" source="{30136,140}">
              <replace string="'$NUMBER$'" with="1"/>
            </substitute_text>
            <do_if value="not $MissionCue.hasmission">
              <create_mission cue="$MissionCue" name="{30201,220}" description="{30201,221}" type="missiontype.plot" faction="faction.civilian" difficulty="level.easy" abortable="false"/>
            </do_if>
            <update_mission cue="$MissionCue" name="{30201,220}" description="{30201,221}" icon="'briefing_boso_ta_02'" iconcaption="{30201,2}">
              <briefing replace="true">
                <objective step="1" action="objective.deploy" text="$SatelliteObjective" comment="Deploy: 1 Satellite"/>
                <objective step="2" action="objective.deploy" text="$ResourceProbeObjective" comment="Deploy: 1 Resource Probe"/>
              </briefing>
            </update_mission>
            <remove_value name="$SatelliteObjective"/>
            <remove_value name="$ResourceProbeObjective"/>
          </actions>
          <cues>
            <!--Deliver ship with below equipment to position:
            - 10x Antimater Cells
            - Basic Scanner
            - Shield of > xxx MJ-->
            <cue name="Phase_TheExperiment_GetShip">
              <delay exact="3s"/>
              <actions>
                <speak actor="$Boron_Mentor" priority="100" line="30201067" comment="We will need a ship to be flown to a very precise location, near the anomaly. If we fit the ship with the right equipment, we may be able to open the tear wider and have a better idea of what is on the other side."/>
                <!--TODO @Owen
                - shield strength
                - software (Basic Scanner)
                -->
                <!--TODO @Owen make this clearer
                        UFeindschiff: "So... the plot Boron wants me to get a "suitable ship". What exactly makes a ship a suitable one?"-->
                <set_value name="$Ship_Def" exact="table[                                 $amount = 1,                                 $wares = table[{ware.antimattercells} = 3],                               ]"/>
                <set_value name="$Fleet" exact="[$Ship_Def]"/>
              </actions>
              <cues>
                <cue name="Phase_TheExperiment_GetShip_Objective" version="2">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor" line="30201067" comment="{10201,30201067}"/>
                  </conditions>
                  <actions>
                    <!--TODO @Owen create a library to generate the criteria text-->
                    <!--<set_value name="$DeliverShipBriefingText" exact="{30201, 103} + '\n' + {30201,2005} + '\n'"/>-->
                    <set_value name="$DeliverShipBriefingText" exact="{30201,221} + '\n' + {30201,2005} + '\n'"/>
                    <do_if value="@$Ship_Def.$wares.keys.count">
                      <set_value name="$WareText" exact="''"/>
                      <do_all exact="$Ship_Def.$wares.keys.count" counter="$i">
                        <set_value name="$Ware" exact="$Ship_Def.$wares.keys.{$i}"/>
                        <substitute_text text="$WareLine" source="' - ' + {30004, 1052}">
                          <replace string="'$COUNT$'" with="$Ship_Def.$wares.{$Ware}"/>
                          <replace string="'$WARENAME$'" with="$Ware.name"/>
                        </substitute_text>
                        <set_value name="$WareText" operation="add" exact="$WareLine"/>
                      </do_all>
                      <set_value name="$DeliverShipBriefingText" operation="add" exact="$WareText"/>
                    </do_if>
                    <!--Antimatter cell factory hint-->
                    <set_value name="$AntimatterStation" exact="null"/>
                    <find_cluster_in_range distances="this.$ClusterDist" object="$HQSector" mindistance="0" multiple="true"/>
                    <set_value name="this.$ClusterKeys" exact="this.$ClusterDist.keys.sorted"/>
                    <do_all exact="this.$ClusterKeys.count" counter="$i">
                      <find_station name="$AntimatterStation" space="this.$ClusterKeys.{$i}">
                        <match_products wares="ware.antimattercells"/>
                        <match_relation_to object="player.entity" comparison="not" relation="enemy"/>
                      </find_station>
                      <do_if value="$AntimatterStation">
                        <break/>
                      </do_if>
                    </do_all>
                    <do_if value="$AntimatterStation">
                      <set_value name="$AntimatterHint" exact="{30201,227} + '\n' + $AntimatterStation.knownname + ' (' + $AntimatterStation.sector.knownname + ')'" comment="The nearest factory is:"/>
                      <set_known object="$AntimatterStation" known="true" updatesnapshot="true"/>
                      <set_known object="$AntimatterStation.zone" known="true"/>
                      <set_known object="$AntimatterStation.sector" known="true"/>
                      <set_known object="$AntimatterStation.cluster" known="true"/>
                    </do_if>
                    <update_mission cue="$MissionCue" name="{30201,220}" description="$DeliverShipBriefingText + '\n' + $AntimatterHint"/>
                  </actions>
                  <patch sinceversion="2">
                    <set_value name="$AntimatterStation" exact="null"/>
                  </patch>
                  <cues>
                    <cue name="Phase_TheExperiment_DEBUG_Create_Ship" instantiate="true">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <create_ship name="$Debug_Ship" sector="$HQSector">
                          <select faction="faction.teladi" size="class.ship_s"/>
                          <owner exact="faction.player" overridenpc="true"/>
                          <cargo>
                            <wares list="[ware.antimattercells]">
                              <fillpercent exact="100"/>
                            </wares>
                          </cargo>
                          <safepos space="$HQSector" value="$HQPosition" min="8km" max="10km"/>
                        </create_ship>
                        <generate_loadout result="$loadout" macro="$Debug_Ship.macro" macros="[macro.shield_tel_s_standard_01_mk1_macro]" flags="shields"/>
                        <apply_loadout object="$Debug_Ship" loadout="$loadout.{1}" flags="shields"/>
                      </actions>
                    </cue>
                    <cue name="Phase_TheExperiment_Funds">
                      <delay exact="3s"/>
                      <actions>
                        <speak actor="$Boron_Mentor" priority="100" line="30201068" comment="This will likely end up in the ship's destruction so I will help cover the expense of acquiring a new ship for the task."/>
                      </actions>
                      <cues>
                        <cue name="Phase_TheExperiment_GetFunds">
                          <conditions>
                            <event_speak_finished actor="$Boron_Mentor" line="30201068"/>
                          </conditions>
                          <actions>
                            <reward_player money="200000Cr"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="Phase_TheExperiment_Deliver_Fleet_Hint_1" checkinterval="1s">
                      <conditions>
                        <check_value value="$MissionCue.hasguidance"/>
                      </conditions>
                      <delay exact="10s"/>
                      <actions>
                        <show_help custom="{30201,222} + $WareText" comment="The ship must contain: "/>
                      </actions>
                    </cue>
                    <cue name="Phase_TheExperiment_Deliver_Fleet_Hint_2" checkinterval="1s">
                      <conditions>
                        <check_value value="$MissionCue.hasguidance"/>
                      </conditions>
                      <delay exact="30s"/>
                      <actions>
                        <show_help custom="{30201,226} + '\n' + {20201,204} + '\n' + {20215,204}" comment="Antimatter Cells(see 20201,201) are usually found for sale at the following stations: Antimatter Cell Factory, Energy Complex"/>
                        <do_if value="$AntimatterHint?">
                          <show_help custom="$AntimatterHint" comment="The nearest factory is:"/>
                          <speak actor="$Boron_Mentor" priority="100" line="[30201078, 30201079]" comment="{10201,30201078} {10201,30201079}"/>
                        </do_if>
                      </actions>
                    </cue>
                    <cue name="Phase_TheExperiment_Deliver_Fleet_Hint_3" checkinterval="1s">
                      <conditions>
                        <check_value value="$MissionCue.hasguidance"/>
                      </conditions>
                      <delay exact="1min"/>
                      <actions>
                        <show_help custom="{30201,223}" comment="Check the mission briefing for details on your current task."/>
                      </actions>
                    </cue>
                    <cue name="Phase_TheExperiment_War_Hint" checkinterval="1s">
                      <conditions>
                        <cue_is_complete cue="Phase_TheExperiment_Deliver_Fleet_Hint_3"/>
                        <cue_is_waiting cue="Phase_TheExperiment_Deliver_Fleet_Achieved"/>
                        <check_value value="$MissionCue.hasguidance and player.age gt Phase_TheExperiment_Deliver_Fleet_Hint_3.time + 5min"/>
                      </conditions>
                      <actions>
                        <show_help line="801" force="true" comment="Getting a ship with 3 ANTIMATTER CELLS will take some time."/>
                        <show_help line="803" force="true" comment="Use this time to find OTHER MISSIONS"/>
                        <show_help line="804" force="true" comment="Explore the universe and improve your REPUTATION."/>
                        <substitute_text text="$ReputationHintText" source="{1012,810}">
                          <replace string="'$REPUTATION$'" with="10" comment="value for promotion ceremony / subscription missions"/>
                        </substitute_text>
                        <show_help custom="$ReputationHintText" comment="Get your REPUTATION with at least one faction to LEVEL 10."/>
                        <show_help line="811" force="true" comment="Follow their INVITATION mission for your PROMOTION ceremony."/>
                        <show_help line="820" force="true" comment="Join a WAR effort!"/>
                      </actions>
                    </cue>
                    <cue name="Phase_TheExperiment_Chatter" onfail="cancel">
                      <conditions>
                        <check_value value="not $SpokenChatterLines.indexof.{30201014} or not $SpokenChatterLines.indexof.{30201118}"/>
                      </conditions>
                      <delay exact="3min"/>
                      <cues>
                        <cue name="Phase_TheExperiment_Chatter_Trigger" checkinterval="5s">
                          <conditions>
                            <check_value value="Phase_TheExperiment_Chatter.state == cuestate.complete"/>
                            <check_value value="not player.station"/>
                            <check_value value="$MissionCue.hasguidance"/>
                          </conditions>
                          <actions>
                            <do_if value="not $SpokenChatterLines.indexof.{30201014}">
                              <speak actor="$Boron_Mentor" priority="80" line="30201014" comment="Should we ever get to meet face to face, I do hope that you can bring me some fresh BoFu. The nuggets the Split give me are more stale than their humour."/>
                              <append_to_list name="$SpokenChatterLines" exact="30201014"/>
                            </do_if>
                            <do_else>
                              <speak actor="$Boron_Mentor" priority="80" line="30201118" comment="Have you heard the Split legends regarding the 'Space Duck' of Namek? A creature so majestic it brings even the Split to tears. I heard my captors speaking of it in passing."/>
                              <append_to_list name="$SpokenChatterLines" exact="30201118"/>
                            </do_else>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="Phase_TheExperiment_Deliver_Fleet_Ref" ref="md.RML_Deliver_Fleet.DeliverFleet">
                      <param name="EndSignalCue" value="Phase_TheExperiment_Deliver_Fleet_Achieved"/>
                      <param name="MissionCue" value="$MissionCue"/>
                      <param name="StartStep" value="3"/>
                      <param name="DebugChance" value="$DebugChance"/>
                      <param name="Text_MissionName" value="{30201,220}"/>
                      <param name="Text_Objective_Get" value="{30201, 2001}" comment="Objective text to get ships (can substitute $DONE$ and $NEEDED$)"/>
                      <param name="Text_Objective_Transfer" value="{30201, 2002}" comment="Objective text to transfer ownership"/>
                      <param name="Text_AcceptTransfer" value="{30201, 2003}" comment="Player choice text to initiate transfer"/>
                      <param name="Text_RejectTransfer" value="{30201, 2004}" comment="Player choice text to reject transfer"/>
                      <param name="Fleet" value="$Fleet" comment="The specific fleet we are looking for"/>
                      <param name="Transfer" value="false" comment="Mission ends with a transfer of ownership to $Faction. Otherwise ends when ships are in position."/>
                      <param name="TargetSector" value="$HQSector" comment="Sector to which to deliver the fleet"/>
                      <param name="TargetOffset" value="$HQPosition" comment="Location to which to deliver the fleet"/>
                      <param name="TargetRadius" value="1.5km" comment="Radius around location in which we need to put the fleet"/>
                      <param name="CriteriaResultCue" value="Phase_TheExperiment_Criteria_Reaction"/>
                      <param name="AdditionCheckCue" value="Phase_TheExperiment_Additional_Ship_Checks" comment="Cue to signal instantly to run additional checks on the object. event.param = [namespace, $ship]. Result saved to namespace.$CheckCueResult"/>
                    </cue>
                    <cue name="Phase_TheExperiment_Deliver_Fleet_Patch" onfail="cancel">
                      <conditions>
                        <cue_is_complete cue="Phase_TheExperiment_Deliver_Fleet_Ref"/>
                      </conditions>
                      <actions>
                        <set_value name="Phase_TheExperiment_Deliver_Fleet_Ref.$CriteriaResultCue" exact="Phase_TheExperiment_Criteria_Reaction"/>
                        <set_value name="Phase_TheExperiment_Deliver_Fleet_Ref.$AdditionCheckCue" exact="Phase_TheExperiment_Additional_Ship_Checks"/>
                      </actions>
                    </cue>
                    <!--event.param = table of ships as keys. contained values of table entry states if a ship matched the criteria or not
                    table[ {$ship} = 'success' or 'no_equipment' or 'failed_additional_checks']-->
                    <cue name="Phase_TheExperiment_Criteria_Reaction" instantiate="true">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <set_value name="$SuitableShip" exact="null"/>
                        <set_value name="$MissingEquipment" exact="false"/>
                        <set_value name="$DeliverFleetKeys" exact="event.param.keys.list"/>
                        <do_all exact="$DeliverFleetKeys.count" counter="$i">
                          <do_if value="event.param.{$DeliverFleetKeys.{$i}} == 'no_equipment'">
                            <set_value name="$MissingEquipment" exact="true"/>
                          </do_if>
                          <do_elseif value="event.param.{$DeliverFleetKeys.{$i}} == 'failed_additional_checks'">
                            <!--a suitable ship has failed additional checks. it will be commented on in Phase_TheExperiment_Additional_Ship_Checks-->
                            <set_value name="$MissingEquipment" exact="false"/>
                            <break/>
                          </do_elseif>
                          <do_elseif value="event.param.{$DeliverFleetKeys.{$i}} == 'success'">
                            <!--a suitable ship is in position. the mission should continue elsewhere-->
                            <set_value name="$MissingEquipment" exact="false"/>
                            <set_value name="$SuitableShip" exact="$DeliverFleetKeys.{$i}"/>
                            <break/>
                          </do_elseif>
                        </do_all>
                        <do_if value="$MissingEquipment and player.age ge Phase_TheExperiment_Deliver_Fleet_Ref.time + 5min and (not @$IncorrectWaresWarningTime or player.age ge $IncorrectWaresWarningTime + 2min)">
                          <set_value name="$IncorrectWaresWarningTime" exact="player.age"/>
                          <speak actor="$Boron_Mentor" priority="100" line="30201070" comment="The ship is in the correct position but is missing some of the required equipment. Please take a look at the details I have provided."/>
                        </do_if>
                      </actions>
                    </cue>
                    <!--event.param = [namespace, $ship]. Result saved to namespace.$CheckCueResult-->
                    <cue name="Phase_TheExperiment_Additional_Ship_Checks" instantiate="true" namespace="this">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <set_value name="$Success" exact="true"/>
                        <set_value name="$PotentialShip" exact="event.param.{2}"/>
                        <do_if value="$PotentialShip.isoperational">
                          <set_value name="$WarnAboutNoOtherShip" exact="false"/>
                          <set_value name="$NoOtherShipWarningTimeout" exact="5min"/>
                          <do_if value="not Start.$SingleShipWarningTime? or player.age lt Start.$SingleShipWarningTime + 2min or player.age gt Start.$SingleShipWarningTime + $NoOtherShipWarningTimeout">
                            <find_ship_by_true_owner name="$OtherShip" faction="faction.player" excluded="$PotentialShip" unit="false" space="player.galaxy">
                              <match class="[class.spacesuit, class.ship_xs]" negate="true"/>
                            </find_ship_by_true_owner>
                            <do_if value="not $OtherShip">
                              <set_value name="$WarnAboutNoOtherShip" exact="true"/>
                            </do_if>
                            <!--If we're in this section because a lot of time has passed, remove the old timestamp so the warning triggers again.-->
                            <do_if value="Start.$SingleShipWarningTime? and player.age gt Start.$SingleShipWarningTime + $NoOtherShipWarningTimeout">
                              <remove_value name="Start.$SingleShipWarningTime"/>
                            </do_if>
                          </do_if>
                          <do_if value="not $WarnAboutNoOtherShip">
                            <find_object_component name="$ContainedPerson" object="$PotentialShip" class="[class.npc, class.player]"/>
                            <do_if value="$ContainedPerson or $PotentialShip.people.count">
                              <do_if value="Phase_TheExperiment_Contained_Person_Comment.state == cuestate.waiting">
                                <signal_cue_instantly cue="Phase_TheExperiment_Contained_Person_Comment" param="$PotentialShip" check="false"/>
                                <set_value name="$Success" exact="false"/>
                              </do_if>
                              <do_elseif value="Start.$PersonWarningTime? and player.age lt Start.$PersonWarningTime + 3min">
                                <set_value name="$Success" exact="false"/>
                              </do_elseif>
                            </do_if>
                          </do_if>
                          <do_else>
                            <set_value name="$Success" exact="false"/>
                            <do_if value="not Start.$SingleShipWarningTime?">
                              <speak actor="Start.$Boron_Mentor" priority="100" line="[30201060,30201061]"/>
                              <set_value name="Start.$SingleShipWarningTime" exact="player.age"/>
                            </do_if>
                            <do_elseif value="not Start.$ShipReplacementWharf? and player.age gt Start.$SingleShipWarningTime + 1min">
                              <set_value name="Start.$ShipReplacementWharf" exact="null"/>
                              <find_cluster_in_range name="$NearClusters" object="Start.$HQSector" maxdistance="2" multiple="true"/>
                              <do_for_each name="$NearCluster" in="$NearClusters">
                                <find_station name="Start.$ShipReplacementWharf" space="$NearCluster" canbuildclass="class.ship_s">
                                  <match_relation_to object="player.entity" comparison="not" relation="enemy"/>
                                </find_station>
                                <do_if value="Start.$ShipReplacementWharf">
                                  <break/>
                                </do_if>
                              </do_for_each>
                              <do_if value="Start.$ShipReplacementWharf">
                                <set_known object="Start.$ShipReplacementWharf" known="true" updatesnapshot="true"/>
                                <set_known object="Start.$ShipReplacementWharf.zone" known="true"/>
                                <set_known object="Start.$ShipReplacementWharf.sector" known="true"/>
                                <set_known object="Start.$ShipReplacementWharf.cluster" known="true"/>
                                <speak actor="Start.$Boron_Mentor" priority="100" line="[30201062,30201063]"/>
                              </do_if>
                            </do_elseif>
                          </do_else>
                        </do_if>
                        <do_else>
                          <set_value name="$Success" exact="false"/>
                        </do_else>
                        <set_value name="event.param.{1}.$CheckCueResult" exact="$Success"/>
                      </actions>
                    </cue>
                    <!--event.param = $ship-->
                    <cue name="Phase_TheExperiment_Contained_Person_Comment" version="2">
                      <conditions>
                        <event_cue_signalled/>
                        <check_value value="event.param"/>
                      </conditions>
                      <actions>
                        <set_value name="$PotentialShip" exact="event.param"/>
                        <speak actor="$Boron_Mentor" priority="100" line="30201069" caninterrupt="false" comment="Be sure that the ship is evacuated. It's far too early in this experiment for needless casualties."/>
                        <set_value name="$PersonWarningTime" exact="player.age"/>
                      </actions>
                      <patch sinceversion="2">
                        <set_value name="$PersonWarningTime" exact="Phase_TheExperiment_Contained_Person_Comment.time"/>
                        <debug_text text="'Setting $PersonWarningTime to ' + $PersonWarningTime"/>
                      </patch>
                      <cues>
                        <cue name="Phase_TheExperiment_Contained_Person_Hint" onfail="cancel">
                          <conditions>
                            <!--subcue was added in a later version so make sure it doesn't activate after the ship is gone-->
                            <check_value value="@$PotentialShip.isoperational"/>
                          </conditions>
                          <delay exact="7s"/>
                          <actions>
                            <find_object_component name="$ContainedPeople" temporaryentity="false" object="$PotentialShip" class="[class.npc, class.player]" multiple="true"/>
                            <set_value name="$PeopleCount" exact="$ContainedPeople.count + $PotentialShip.people.count"/>
                            <do_if value="$PeopleCount">
                              <substitute_text text="$PeopleHint" source="readtext.{30201}.{if $PeopleCount == 1 then 224 else 225}">
                                <replace string="'$NUM$'" with="$PeopleCount"/>
                              </substitute_text>
                              <show_help custom="$PeopleHint" comment="The ship currently has $NUM$ people on board."/>
                              <remove_value name="$PeopleHint"/>
                            </do_if>
                            <remove_value name="$PeopleCount"/>
                            <remove_value name="$ContainedPeople"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="Phase_TheExperiment_Deliver_Fleet_Achieved">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <debug_text text="player.age + ' ship ' + $SuitableShip + ' is in position'" chance="$DebugChance"/>
                        <!--
                        30201071: Very good. We seem to be ready for the initial test. I would advise that you clear the area as there are a number of unknowns.
                        10419: Fly to the following position.
                        -->
                        <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201071, 0s], [10419, 0.6s]]"/>
                        <signal_cue cue="Mentor_Speak_Helper"/>
                      </actions>
                      <cues>
                        <cue name="Phase_TheExperiment_FlyTo_Experiment_Position_Check">
                          <delay exact="4s"/>
                          <actions>
                            <set_value name="$AtLocation" exact="false"/>
                            <do_if value="player.sector == $HQSector and player.ship">
                              <set_value name="$Distance" exact="player.ship.distanceto.[$HQSector, $HQPosition]"/>
                              <do_if value="player.ship.distanceto.[$HQSector, $HQPosition]" min="5km" max="10km">
                                <set_value name="$AtLocation" exact="true"/>
                              </do_if>
                            </do_if>
                            <do_if value="$AtLocation">
                              <signal_cue cue="Phase_TheExperiment_Pt_1"/>
                            </do_if>
                            <do_else>
                              <signal_cue cue="Phase_TheExperiment_FlyTo_Experiment_Position"/>
                            </do_else>
                          </actions>
                        </cue>
                        <cue name="Phase_TheExperiment_FlyTo_Experiment_Position">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <actions>
                            <!--HACK - tried using the following the the co-ordinates did not translate to 'value'
                            <get_safe_pos result="$ExperimentPos" sector="$HQSector" value="$HQPosition" z="7km"/>-->
                            <get_safe_pos result="$ExperimentPos" sector="$HQSector" x="$HQPosition.x" y="$HQPosition.y" z="$HQPosition.z + 7km"/>
                            <update_mission cue="$MissionCue">
                              <briefing>
                                <objective step="4" action="objective.flyto" text="{30201, 1012}" object="$HQSector" offset="$ExperimentPos" comment="Observation area"/>
                              </briefing>
                            </update_mission>
                            <set_objective cue="$MissionCue" step="4" action="objective.flyto" text="{30201, 1012}" object="$HQSector" offset="$ExperimentPos" radius="1km" comment="Observation area"/>
                          </actions>
                          <cues>
                            <cue name="Phase_TheExperiment_FlyTo_Experiment_Position_Finished" checkinterval="1s">
                              <conditions>
                                <check_value value="player.sector == $HQSector and player.ship and player.ship.distanceto.[$HQSector, $ExperimentPos] lt 1km"/>
                              </conditions>
                              <actions>
                                <signal_cue cue="Phase_TheExperiment_Pt_1"/>
                              </actions>
                            </cue>
                          </cues>
                        </cue>
                        <!--TODO @Owen
                        (Player ship gets too close)
                        {10201, 30201072} - Boron: "The area must be clear of any obstacles!"-->
                        <!--TODO @Owen
                        (Something goes wrong e.g. the player destroys the ship)
            
                        {10201, 30201073} - Boron: "(something goes wrong)Well then... I suppose we will have to try again."-->
                        <cue name="Phase_TheExperiment_Pt_1">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <actions>
                            <speak actor="$Boron_Mentor" priority="100" line="30201074" comment="I have successfully interfaced with the ship. I am increasing the output of the power-plant while reducing the shielding of the antimatter containers to see if that affects the anomaly."/>
                            <play_music music="'music_hq_experiment'" comment="142s"/>
                          </actions>
                          <cues>
                            <cue name="Phase_TheExperiment_Pt2">
                              <conditions>
                                <event_speak_finished actor="$Boron_Mentor" line="30201074"/>
                              </conditions>
                              <actions>
                                <!--
                                ###
                                Effects playing over the ship?
                                ###-->
                              </actions>
                              <cues>
                                <cue name="Phase_TheExperiment_Pt_3">
                                  <delay exact="3s"/>
                                  <actions>
                                    <speak actor="$Boron_Mentor" priority="100" line="30201075" comment="Wonderful, we are getting a reaction! The ship is beginning to show strain but I will continue to push it further. Keep your distance."/>
                                  </actions>
                                  <cues>
                                    <cue name="Phase_TheExperiment_Pt_4">
                                      <conditions>
                                        <event_speak_finished actor="$Boron_Mentor" line="30201075"/>
                                      </conditions>
                                      <delay exact="3s"/>
                                      <actions>
                                        <speak actor="$Boron_Mentor" priority="100" line="30201076" comment="The tear is expanding, it is about to reach the ship! The antimatter will most likely detonate!"/>
                                      </actions>
                                      <cues>
                                        <cue name="Phase_TheExperiment_Pt_5">
                                          <conditions>
                                            <event_speak_finished actor="$Boron_Mentor" line="30201076"/>
                                          </conditions>
                                          <actions>
                                            <signal_cue cue="Phase_TheExperiment_Music_Handler"/>
                                            <!--
                                            ###
                                            Cutscene of the tear expanding engulfing the ship?
                                            Flash of light
                                            Flash fade
                                            HQ is in position
                                            ###-->
                                          </actions>
                                          <cues>
                                            <cue name="Phase_TheExperiment_HQ_Arriving">
                                              <delay exact="3s"/>
                                              <cues>
                                                <cue name="Phase_TheExperiment_HQ_Start_Effect">
                                                  <conditions>
                                                    <event_cue_completed cue="Phase_TheExperiment_HQ_Arriving"/>
                                                  </conditions>
                                                  <actions>
                                                    <set_objective cue="$MissionCue" action="objective.none"/>
                                                    <get_zone_at_position name="$HQZone" value="$HQPosition" sector="$HQSector"/>
                                                    <do_if value="not $HQZone">
                                                      <create_ship macro="macro.ship_gen_xs_escapepod_01_a_macro" name="$TempEffectObject" sector="$HQSector">
                                                        <owner exact="faction.ownerless"/>
                                                        <position value="$HQPosition"/>
                                                      </create_ship>
                                                    </do_if>
                                                    <do_if value="@$TempEffectObject.exists">
                                                      <set_value name="$HQZone" exact="$TempEffectObject.zone"/>
                                                      <set_value name="$EffectPos" exact="$TempEffectObject.position"/>
                                                    </do_if>
                                                    <do_else>
                                                      <set_value name="$HQZone" exact="player.zone"/>
                                                      <create_position name="$EffectPos" object="$HQSector" space="$HQZone" value="$HQPosition"/>
                                                    </do_else>
                                                    <debug_text text="'HQ Zone will be: ' +  + ' ' + $HQZone.knownname + ' playing effect at ' + $EffectPos" chance="$DebugChance"/>
                                                    <find_ship_by_true_owner name="$PlayerShipsInZone" faction="faction.player" space="$HQSector" masstraffic="false" multiple="true">
                                                      <match_distance space="$HQSector" value="$HQPosition" max="3.5km"/>
                                                    </find_ship_by_true_owner>
                                                    <create_list name="$PossibleShips"/>
                                                    <do_all exact="$PlayerShipsInZone.count" counter="$s" reverse="true">
                                                      <set_value name="$currentship" exact="$PlayerShipsInZone.{$s}"/>
                                                      <run_actions ref="md.LIB_Generic.CheckShipMatches" result="$shipmatches">
                                                        <param name="currentship" value="$currentship"/>
                                                        <param name="shipmatches" value="true"/>
                                                        <param name="shipwares" value="table[{ware.antimattercells} = 3]"/>
                                                      </run_actions>
                                                      <do_if value="$shipmatches" exact="true">
                                                        <append_to_list name="$PossibleShips" exact="$currentship"/>
                                                      </do_if>
                                                    </do_all>
                                                    <do_if value="$PossibleShips.count ge 1">
                                                      <sort_list list="$PossibleShips" sortbyvalue="loop.element.position.distanceto.{$HQPosition}"/>
                                                      <set_value name="$SuitableShip" exact="$PossibleShips.{1}"/>
                                                    </do_if>
                                                    <do_if value="$SuitableShip">
                                                      <destroy_object object="$SuitableShip" explosion="true"/>
                                                    </do_if>
                                                    <!--Add the effect name here-->
                                                    <add_effect object="$HQZone" effect="'hq_warpin'">
                                                      <position value="$EffectPos"/>
                                                    </add_effect>
                                                    <set_value name="$EffectLength" exact="11s"/>
                                                    <do_if value="@$TempEffectObject.exists">
                                                      <destroy_object object="$TempEffectObject"/>
                                                    </do_if>
                                                  </actions>
                                                  <cues>
                                                    <cue name="Phase_TheExperiment_HQ_Spawn">
                                                      <delay exact="$EffectLength"/>
                                                      <actions>
                                                        <!--TODO @Owen - make sure that an ownerless station is fine-->
                                                        <create_station name="$HQ" macro="macro.station_pla_headquarters_base_01_macro" sector="$HQSector" constructionplan="'x4ep1_playerheadquarters'" owner="faction.ownerless" state="componentstate.operational">
                                                          <position value="$HQPosition"/>
                                                        </create_station>
                                                        <set_object_name object="$HQ" page="20102" line="5001" comment="'Unknown Station'"/>
                                                      </actions>
                                                      <cues>
                                                        <cue name="Phase_TheExperiment_End" version="2">
                                                          <conditions>
                                                            <event_cue_completed cue="Phase_TheExperiment_HQ_Spawn"/>
                                                          </conditions>
                                                          <delay exact="3s"/>
                                                          <actions>
                                                            <unlock_achievement name="PLOT_2"/>
                                                            <set_value name="userdata.unlock_x4gamestart_trade" exact="1"/>
                                                            <set_value name="userdata.unlock_x4gamestart_scientist" exact="1"/>
                                                            <signal_cue cue="Phase_Claiming_The_HQ"/>
                                                            <reset_cue cue="Phase_TheExperiment"/>
                                                          </actions>
                                                          <patch sinceversion="2" state="complete">
                                                            <do_if value="not userdata.unlock_x4gamestart_trade?">
                                                            <set_value name="userdata.unlock_x4gamestart_trade" exact="1"/>
                                                            </do_if>
                                                            <do_if value="not userdata.unlock_x4gamestart_scientist?">
                                                            <set_value name="userdata.unlock_x4gamestart_scientist" exact="1"/>
                                                            </do_if>
                                                          </patch>
                                                        </cue>
                                                      </cues>
                                                    </cue>
                                                  </cues>
                                                </cue>
                                              </cues>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="Phase_TheExperiment_Music_Handler">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <play_music music="'music_hq_reveal'" comment="48s"/>
          </actions>
          <delay exact="48s"/>
          <actions>
            <play_music music="'music_hq_investigate'" comment="160s"/>
          </actions>
        </cue>
        <cue name="SHORTCUT_Claiming_The_HQ">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <signal_cue cue="Debug_Create_HQ"/>
          </actions>
          <cues>
            <cue name="SHORTCUT_Claiming_The_HQ_Delay">
              <delay exact="2s"/>
              <actions>
                <signal_cue cue="Phase_Claiming_The_HQ"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <cue name="Phase_Claiming_The_HQ">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <include_actions ref="ActivatePhase"/>
            <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
            <!--'Interesting' positions near the surface of the HQ-->
            <!--The first point is either one of these two. Which ever is closer.-->
            <set_value name="$HQ_FlytoPos_1_Points" exact="[position.[-4108.516m, 89.525m,  -2034.546m],                                                             position.[-4617.208m, 46.397m,  147.017m],                                                             position.[-1425.243m, 859.180m, 735.058m]]"/>
            <set_value name="$HQ_FlytoPos_2_Points" exact="[position.[-621.844m,  166.227m, 4608.570m],                                                             position.[-3510.050m, 69.812m,  2620.939m],                                                             position.[-1425.243m, 859.180m, 735.058m]]"/>
            <do_if value="not $MissionCue.hasmission">
              <create_mission cue="$MissionCue" name="{30201,230}" description="{30201,231}" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false"/>
            </do_if>
            <update_mission cue="$MissionCue" name="{30201,230}" description="{30201,231}" icon="'briefing_boso_ta_02'" iconcaption="{30201,2}">
              <briefing replace="true">
                <objective step="1" action="objective.custom" customaction="{30201,1013}" text="{30201,1014}" comment="Perform: Experiment"/>
                <objective step="2" action="objective.investigate" object="$HQ"/>
              </briefing>
            </update_mission>
          </actions>
          <cues>
            <cue name="Phase_Claiming_The_HQ_Introduction">
              <delay exact="3s"/>
              <actions>
                <!--
                <text line="30201090" comment="What is this? Some large artificial structure? So, this is what was on the other side of the tear? It does seem that our investigation has lead to some potentially ground-breaking discovery!"/>
                <text line="30201091" comment="Now my friend, this is where we must proceed with both haste and caution. While I admit, tearing through space-time with an antimatter explosion was far from restrained, we now have something in front of us of untold scientific value. We would be fools to continue carelessly."/>
                <text line="30201092" comment="For the benefit of the universe, let us hurry and claim our prize before someone can beat us to it! I'll be damned if some passing Teladi junk dealer decides to break it down for spare parts. Or worse yet, the Ministry of Finance Science Division."/>
                <text line="30201093" comment="I will begin to interface with the structure remotely. Do you mind flying around it so I can make some additional readings."/>-->
                <set_value name="Mentor_Speak_Helper.$Lines" exact="[30201090, 30201091, 30201092, 30201093]"/>
                <signal_cue cue="Mentor_Speak_Helper"/>
              </actions>
            </cue>
            <cue name="Phase_Claiming_The_HQ_Fly_To_Points">
              <conditions>
                <event_speak_finished actor="$Boron_Mentor" line="30201093"/>
              </conditions>
              <delay exact="1s"/>
              <actions>
                <speak actor="$Boron_Mentor" priority="100" line="30201094" comment="Let's start over here."/>
                <do_if value="player.sector == $HQ.sector">
                  <do_if value="player.entity.distanceto.[$HQ, $HQ_FlytoPos_1_Points.{1}] lt player.entity.distanceto.[$HQ, $HQ_FlytoPos_2_Points.{1}]">
                    <set_value name="$PositionList" exact="$HQ_FlytoPos_1_Points"/>
                  </do_if>
                  <do_else>
                    <set_value name="$PositionList" exact="$HQ_FlytoPos_2_Points"/>
                  </do_else>
                </do_if>
                <do_else>
                  <set_value name="$PositionList" exact="$HQ_FlytoPos_1_Points"/>
                </do_else>
                <set_value name="$Idx" exact="1"/>
                <assert value="$PositionList.count == 3" text="'Mission is designed to have 3 points to fly to.'"/>
                <update_mission cue="$MissionCue">
                  <briefing>
                    <objective action="objective.investigate" step="2" object="$HQ"/>
                  </briefing>
                </update_mission>
                <set_objective cue="$MissionCue" step="2" action="objective.approach" object="$HQ" offset="$PositionList.{$Idx}"/>
              </actions>
              <cues>
                <cue name="Phase_Claiming_The_HQ_Fly_To_Points_Check" checkinterval="2s">
                  <conditions>
                    <cue_is_complete cue="Phase_Claiming_The_HQ_Fly_To_Points"/>
                    <!--TODO @Owen check the distance calculation for what feels best-->
                    <check_value value="player.sector == $HQ.sector and player.ship and player.ship.bboxdistanceto.[$HQ, $PositionList.{$Idx}] lt 100m"/>
                  </conditions>
                  <actions>
                    <do_if value="$Idx == 3">
                      <speak actor="$Boron_Mentor" priority="100" line="30201099" comment="I cannot yet ascertain the function of this asteroid like mass in regards to the rest of the station. Given these readings, it may well be a power source. How interesting."/>
                    </do_if>
                    <do_else>
                      <do_if value="$Idx == 1">
                        <speak actor="$Boron_Mentor" priority="100" line="30201097" comment="These markings are not quite as 'alien' as I would have expected from such an object. Could this be a top-secret installation? Oh my. I do hope we haven't hijacked some distant Terran station."/>
                      </do_if>
                      <do_elseif value="$Idx == 2">
                        <speak actor="$Boron_Mentor" priority="100" line="30201098" comment="It does seem somewhat unfinished, and the materials it is constructed from are quite strange. Even the computer pathways I am navigating are unconventional."/>
                      </do_elseif>
                      <set_value name="$Idx" operation="add"/>
                      <reset_cue cue="Phase_Claiming_The_HQ_Fly_To_Points_Check"/>
                    </do_else>
                  </actions>
                </cue>
                <cue name="Phase_Claiming_The_HQ_Fly_To_Points_Next" instantiate="true">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor"/>
                    <check_value value="event.param2 == 30201097 or event.param2 == 30201098"/>
                  </conditions>
                  <actions>
                    <set_objective cue="$MissionCue" step="2" action="objective.flyto" object="$HQ" offset="$PositionList.{$Idx}"/>
                  </actions>
                </cue>
                <cue name="Phase_Claiming_The_HQ_Ownership_Speak">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor" line="30201099"/>
                  </conditions>
                  <delay exact="3s"/>
                  <actions>
                    <speak actor="$Boron_Mentor" priority="100" line="30201100" comment="Ah, progress. It seems that this station is in an emergency state, possibly due to our actions. However, it appears that there is a backdoor protocol to resolve this. Give me a moment."/>
                  </actions>
                  <cues>
                    <cue name="Phase_Claiming_The_HQ_Ownership_Speak_2">
                      <conditions>
                        <event_cue_completed cue="Phase_Claiming_The_HQ_Ownership_Speak"/>
                      </conditions>
                      <actions>
                        <speak actor="$Boron_Mentor" priority="100" line="30201101" comment="Wonderful! You see? The station is now under our control. I have access to much of its systems, although some are so alien I will need to take time to investigate them."/>
                        <set_owner object="$HQ" faction="faction.player" overridenpc="true"/>
                        <include_actions ref="SetupHQ"/>
                        <signal_cue cue="Manage_PlayerOffice_Room"/>
                      </actions>
                      <cues>
                        <cue name="Phase_Claiming_The_HQ_Ownership_Speak_3">
                          <conditions>
                            <event_speak_finished actor="$Boron_Mentor" line="30201101"/>
                          </conditions>
                          <delay exact="2s"/>
                          <actions>
                            <!--
                            <text line="30201102" comment="Wonderful! You see? The station is now under our control. I have access to much of its systems, although some are so alien I will need to take time to investigate them."/>
                            <text line="30201120" comment="(plot as in plot of land)Allow me to cover the cost of the plot licence."/>
                            <text line="30201103" comment="Oh, it appears I must go. My Split employers are approaching and they sound aggitated."/>
                            <text line="30201104" comment="I will be in touch when I am able. As I have said, see if you are able to merge their technology with our own by building a dock."/>
                            <text line="30201105" comment="Take care my friend."/>-->
                            <set_value name="Mentor_Speak_Helper.$Lines" exact="[30201102, 30201103, 30201104, 30201105]"/>
                            <signal_cue cue="Mentor_Speak_Helper"/>
                          </actions>
                        </cue>
                        <cue name="Phase_Claiming_The_HQ_Build_Dock">
                          <conditions>
                            <event_speak_finished actor="$Boron_Mentor" line="30201105"/>
                          </conditions>
                          <actions>
                            <update_mission cue="$MissionCue">
                              <briefing>
                                <objective step="3" action="objective.build_module" text="{20104,70001}" object="$HQ"/>
                              </briefing>
                            </update_mission>
                            <set_objective cue="$MissionCue" step="3" action="objective.build_module" text="{20104,70001}" object="$HQ"/>
                          </actions>
                          <cues>
                            <cue name="Phase_Claiming_The_HQ_Build_Dock_Hint">
                              <delay exact="4s"/>
                              <actions>
                                <show_help custom="{30201,232}" comment="You need blueprints to build station modules. If you have the credits, you can buy blueprints from a Faction Representitive."/>
                              </actions>
                            </cue>
                            <cue name="Phase_Claiming_The_HQ_War_Hint">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <delay exact="30s"/>
                              <actions>
                                <show_help line="802" force="true" comment="Building the HQ dock will take some time."/>
                                <show_help line="803" force="true" comment="Use this time to find OTHER MISSIONS"/>
                                <show_help line="804" force="true" comment="Explore the universe and improve your REPUTATION."/>
                                <substitute_text text="$ReputationHintText" source="{1012,810}">
                                  <replace string="'$REPUTATION$'" with="10" comment="value for promotion ceremony / subscription missions"/>
                                </substitute_text>
                                <show_help custom="$ReputationHintText" comment="Get your REPUTATION with at least one faction to LEVEL 10."/>
                                <show_help line="811" force="true" comment="Follow their INVITATION mission for your PROMOTION ceremony."/>
                                <show_help line="820" force="true" comment="Join a WAR effort!"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Claiming_The_HQ_Build_Dock_Tutorial" ref="HQ_Tutorial_Build">
                              <param name="Station" value="$HQ"/>
                              <param name="MinStartTime" value="Phase_Claiming_The_HQ_Build_Dock.time + 2min"/>
                              <param name="EndSignalCue" value="Phase_Claiming_The_HQ_War_Hint"/>
                            </cue>
                            <cue name="Phase_Claiming_The_HQ_Build_Dock_Done">
                              <conditions>
                                <event_build_finished_components object="$HQ.buildingmodule"/>
                                <count_object_components object="$HQ" class="[class.dockarea, class.pier]" min="1"/>
                              </conditions>
                              <cues>
                                <cue name="Phase_Claiming_The_HQ_Build_Dock_Done_Speak">
                                  <delay exact="2s"/>
                                  <actions>
                                    <!--
                                    Boron: (30201121)"Well done! I have been watching your progress with much interest."
                                    Boron: (30201122)"When you dock see if you can access any of the internal structure from an elevator."-->
                                    <set_value name="Mentor_Speak_Helper.$Lines" exact="[30201121, 30201122]"/>
                                    <signal_cue cue="Mentor_Speak_Helper"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Claiming_The_HQ_Land">
                                  <conditions>
                                    <event_speak_finished actor="$Boron_Mentor" line="30201121"/>
                                  </conditions>
                                  <actions>
                                    <update_mission cue="$MissionCue">
                                      <briefing>
                                        <objective step="4" action="objective.dockat" object="$HQ"/>
                                      </briefing>
                                    </update_mission>
                                    <set_objective cue="$MissionCue" step="4" action="objective.dockat" object="$HQ"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Claiming_The_HQ_Landed" checkinterval="1s">
                                  <conditions>
                                    <check_value value="player.entity.hascontext.{$HQ}"/>
                                  </conditions>
                                  <actions>
                                    <!--find nearest elevator-->
                                    <set_value name="$ElevatorDistTable" exact="table[]"/>
                                    <find_npc_waypoint name="$ElevatorSlots" object="$HQ" tags="tag.npctransport" excludeblocked="false" multiple="true"/>
                                    <do_if value="$ElevatorSlots.count">
                                      <do_all exact="$ElevatorSlots.count" counter="$i">
                                        <set_value name="$ElevatorDistTable.{$ElevatorSlots.{$i}}" exact="player.entity.distanceto.{$ElevatorSlots.{$i}}"/>
                                      </do_all>
                                      <set_value name="$ElevatorSlot" exact="$ElevatorDistTable.keys.sorted.{1}"/>
                                      <!--TODO @Owen get the button-->
                                      <update_mission cue="$MissionCue">
                                        <briefing>
                                          <objective step="4" action="objective.custom" customaction="{30201,1015}" text="{20007,2002}" slot="$ElevatorSlot"/>
                                        </briefing>
                                      </update_mission>
                                      <set_objective cue="$MissionCue" step="4" action="objective.custom" customaction="{30201,1015}" text="{20007,2002}" slot="$ElevatorSlot"/>
                                    </do_if>
                                    <do_else>
                                      <!--Shouldn't ever happen. Just skip to the next part.-->
                                      <signal_cue cue="Phase_Escape"/>
                                      <reset_cue cue="Phase_Claiming_The_HQ_End"/>
                                    </do_else>
                                  </actions>
                                  <cues>
                                    <cue name="Phase_Claiming_The_HQ_Landed_Reset" checkinterval="1s">
                                      <conditions>
                                        <check_value value="not player.entity.hascontext.{$HQ}"/>
                                      </conditions>
                                      <actions>
                                        <update_mission cue="$MissionCue">
                                          <briefing>
                                            <objective step="4" action="objective.dockat" object="$HQ"/>
                                          </briefing>
                                        </update_mission>
                                        <set_objective cue="$MissionCue" step="4" action="objective.dockat" object="$HQ"/>
                                        <reset_cue cue="Phase_Claiming_The_HQ_Landed"/>
                                      </actions>
                                    </cue>
                                    <cue name="Phase_Claiming_The_HQ_Elevator_Button">
                                      <conditions>
                                        <event_ui_triggered screen="'TransporterMenu'"/>
                                        <check_value value="@event.param3.{3}.station == $HQ or @event.param3.{3}.hascontext.{$HQ}"/>
                                      </conditions>
                                      <actions>
                                        <!--
                                        Boron: (30201123)"Hmm, no. It appears we are still locked out from direct access."
                                        Boron: (30201124)"It seems I have no choice. I must leave my current location and join you on that station."-->
                                        <set_value name="Mentor_Speak_Helper.$Lines" exact="[30201123, 30201124]"/>
                                        <signal_cue cue="Mentor_Speak_Helper"/>
                                      </actions>
                                    </cue>
                                    <cue name="Phase_Claiming_The_HQ_End" version="2">
                                      <conditions>
                                        <event_speak_finished actor="$Boron_Mentor" line="30201124"/>
                                      </conditions>
                                      <actions>
                                        <signal_cue cue="Phase_Escape"/>
                                        <reset_cue cue="Phase_Claiming_The_HQ"/>
                                      </actions>
                                      <patch sinceversion="2" state="waiting">
                                        <do_if value="Phase_Escape.state == cuestate.complete">
                                          <reset_cue cue="Phase_Claiming_The_HQ"/>
                                        </do_if>
                                      </patch>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="SHORTCUT_Terranborn">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <signal_cue cue="Debug_Create_HQ"/>
          </actions>
          <cues>
            <cue name="SHORTCUT_Terranborn_Delay">
              <delay exact="2s"/>
              <actions>
                <signal_cue cue="Phase_Terranborn"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <!--event.param - the handover table with values passed from the 'other mission'
        $hq - The HQ station-->
        <cue name="Phase_Terranborn">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="this.$HandoverTable" exact="event.param"/>
            <set_value name="$HQ" exact="Phase_Terranborn.$HandoverTable.$hq"/>
            <set_value name="$TerranVariant" exact="true"/>
            <include_actions ref="ActivatePhase"/>
          </actions>
          <cues>
            <cue name="Phase_Terranborn_Introduction">
              <delay exact="3s"/>
              <actions>
                <!--(background)
                Boso 30201090: What is this? Some large artificial structure? So, this is what was on the other side of the tear? It does seem that our investigation has lead to some potentially ground-breaking discovery!
                Boso 30223001: Assistant. Assistant? Can you hear me?
                Boso 30223002: Oh dear. It seems like they were either vaporized or pulled through the rift themselves.
                Boso 30223003: Hmm, and what is this?-->
                <speak actor="$Boron_Mentor" line="[30201090, 1s, 30223001, 2s, 30223002, 1s, 30223003]" backgroundcomm="true" broadcast="true" priority="100"/>
              </actions>
            </cue>
            <cue name="Phase_Terranborn_Intro_Conv">
              <conditions>
                <event_speak_finished actor="$Boron_Mentor" line="30201090"/>
              </conditions>
              <delay exact="1s"/>
              <actions>
                <!--(at player)
                Boso 30223004: You there. Are you alright?
                  player: Where am I?
                    Boso 30223005: You are in Teladi space. Assuming you know what a Teladi is.
                  player: Who are you?
                    Boso 30223006: My name is Boso Ta. Some would call me one of the foremost minds of the current age, if anyone knew I existed that is.
                Boso 30223007: But never mind that. Did you perhaps get pulled through the rift along with this station?
                  player: You did this?
                Boso 30223008: Now now. Let's keep a calm attitude otherwise your oxygen intake may increase rapidly.
                Boso 30223009: I will remotly send a ship to your location.
                Boso 30223010: I do hope you will consider aiding me in my research.
                Boso 30223011: First, let's get you to safety.-->
                <start_conversation actor="$Boron_Mentor" conversation="Terranborn_Intro"/>
                <allow_conversation_escape enabled="false"/>
              </actions>
            </cue>
            <cue name="Phase_Terranborn_Intro_Conv_Start">
              <conditions>
                <event_conversation_started actor="$Boron_Mentor" conversation="Terranborn_Intro"/>
              </conditions>
              <actions>
                <set_value name="Phase_Terranborn_Intro_Conv.$WhereAsked" exact="false"/>
                <set_value name="Phase_Terranborn_Intro_Conv.$WhoAsked" exact="false"/>
                <add_npc_line speaker="$Boron_Mentor" line="30223004" comment="You there. Are you alright?" hidechoices="true"/>
                <add_player_choice text="{30223,3100}" section="where_am_i" position="top_left"/>
                <add_player_choice text="{30223,3101}" section="who_are_you" position="left"/>
              </actions>
              <cues>
                <cue name="Phase_Terranborn_Intro_Conv_Next" instantiate="true">
                  <conditions>
                    <event_conversation_next_section actor="$Boron_Mentor"/>
                  </conditions>
                  <actions>
                    <do_if value="event.param == 'where_am_i' or event.param == 'who_are_you'">
                      <do_if value="event.param == 'where_am_i'">
                        <set_value name="Phase_Terranborn_Intro_Conv.$WhereAsked" exact="true"/>
                        <add_npc_line speaker="$Boron_Mentor" line="30223005" comment="You are in Teladi space. Assuming you know what a Teladi is." hidechoices="true"/>
                      </do_if>
                      <do_else>
                        <set_value name="Phase_Terranborn_Intro_Conv.$WhoAsked" exact="true"/>
                        <add_npc_line speaker="$Boron_Mentor" line="30223006" comment="My name is Boso Ta. Some would call me one of the foremost minds of the current age, if anyone knew I existed that is." hidechoices="true"/>
                      </do_else>
                      <do_if value="Phase_Terranborn_Intro_Conv.$WhereAsked and Phase_Terranborn_Intro_Conv.$WhoAsked">
                        <add_npc_line speaker="$Boron_Mentor" line="30223007" comment="But never mind that. Did you perhaps get pulled through the rift along with this station?" hidechoices="true"/>
                        <add_player_choice text="{30223,3102}" section="you_did_this" position="top_left"/>
                      </do_if>
                      <do_elseif value="Phase_Terranborn_Intro_Conv.$WhereAsked">
                        <add_player_choice text="{30223,3101}" section="who_are_you" position="left"/>
                      </do_elseif>
                      <do_elseif value="Phase_Terranborn_Intro_Conv.$WhoAsked">
                        <add_player_choice text="{30223,3100}" section="where_am_i" position="top_left"/>
                      </do_elseif>
                    </do_if>
                    <do_elseif value="event.param == 'you_did_this'">
                      <add_npc_line speaker="$Boron_Mentor" line="30223008" comment="Now now. Let's keep a calm attitude otherwise your oxygen intake may increase rapidly." hidechoices="true"/>
                      <add_npc_line speaker="$Boron_Mentor" line="30223009" delay="0.5s" comment="I will remotly send a ship to your location." hidechoices="true"/>
                      <add_npc_line speaker="$Boron_Mentor" line="30223010" delay="0.1s" comment="I do hope you will tell me where you have come from." hidechoices="true"/>
                      <add_npc_line speaker="$Boron_Mentor" line="30223011" delay="0.1s" comment="First, let's get you to safety." hidechoices="true"/>
                    </do_elseif>
                  </actions>
                </cue>
                <cue name="Phase_Terranborn_Intro_Conv_End">
                  <conditions>
                    <event_conversation_finished actor="$Boron_Mentor"/>
                  </conditions>
                  <actions>
                    <cancel_cue cue="Phase_Terranborn_Intro_Conv_Next"/>
                  </actions>
                </cue>
                <cue name="Phase_Terranborn_Ownership_Speak_2">
                  <conditions>
                    <event_cue_completed cue="Phase_Terranborn_Intro_Conv_End"/>
                  </conditions>
                  <actions>
                    <do_if value="$HQ.sector == player.sector and player.entity.distanceto.{$HQ} lt 30km">
                      <get_safe_pos result="$RescueShipPos" radius="500m" object="player.entity" directionobject="$HQ" direction="quadrant.front" direction2="quadrant.right" sector="player.sector"/>
                    </do_if>
                    <do_else>
                      <get_safe_pos result="$RescueShipPos" radius="500m" object="player.entity" sector="player.sector"/>
                    </do_else>
                    <create_ship name="$RescueShip" sector="player.sector">
                      <select faction="faction.teladi" tags="tag.scout"/>
                      <owner exact="faction.player" overridenpc="true"/>
                      <position value="$RescueShipPos" space="player.sector"/>
                    </create_ship>
                    <create_mission cue="$MissionCue" name="{30201,500}" description="{30201,501}" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false"/>
                    <set_objective cue="$MissionCue" step="1" action="objective.dockat" object="$RescueShip" updatebriefing="true"/>
                  </actions>
                  <cues>
                    <cue name="Phase_Terranborn_Ship_Reminder">
                      <delay exact="2min"/>
                      <actions>
                        <speak actor="$Boron_Mentor" priority="100" line="30223012" comment="Please get aboard the ship that I have directed to your location."/>
                      </actions>
                    </cue>
                    <cue name="Phase_Terranborn_On_Ship" checkinterval="1s">
                      <conditions>
                        <check_value value="player.ship and not player.spacesuit"/>
                      </conditions>
                      <actions>
                        <cancel_cue cue="Phase_Terranborn_Ship_Reminder"/>
                        <speak actor="$Boron_Mentor" priority="100" line="30223013" comment="It appears you are sufficiently safe."/>
                        <remove_from_group group="md.NPC_Instantiation.Instantiation.$ExcludedObjects" object="$HQ"/>
                        <set_owner object="$HQ" faction="faction.player" overridenpc="true"/>
                        <include_actions ref="SetupHQ"/>
                        <signal_cue cue="Manage_PlayerOffice_Room"/>
                      </actions>
                    </cue>
                    <cue name="Phase_Terranborn_Ownership_Speak_3">
                      <conditions>
                        <event_speak_finished actor="$Boron_Mentor" line="30223013"/>
                      </conditions>
                      <delay exact="2s"/>
                      <actions>
                        <!--
                        Boso: Am I correct in assuming you have some connection to this station?
                        Boso: I have already begun to remotely interface with its systems and appear to have significant access.
                        Boso: I have oh so many questions I would like answered but unfortunately it seems I must go. You see, I am not currently supposed to be working on this project.
                        Boso: It appears I am at a disadvantage and find myself entrusting stewardship of the station to you.
                        Boso: Ha. For all I know, you are an enemy agent already privy to the inner workings of this facility.
                        Boso: Please do not use it for nefarious purposes before I return.-->
                        <set_value name="Mentor_Speak_Helper.$Lines" exact="[30223014, 30223015, 30223016, 30223017, 30223018, 30223019]"/>
                        <signal_cue cue="Mentor_Speak_Helper"/>
                      </actions>
                    </cue>
                    <cue name="Phase_Terranborn_Build_Dock" version="2">
                      <conditions>
                        <event_speak_finished actor="$Boron_Mentor" line="30223019"/>
                      </conditions>
                      <actions>
                        <set_objective cue="$MissionCue" step="2" action="objective.build_module" text="{20104,70001}" object="$HQ" updatebriefing="true"/>
                        <add_blueprints wares="ware.module_arg_dock_m_01"/>
                      </actions>
                      <patch sinceversion="2">
                        <add_blueprints wares="ware.module_arg_dock_m_01"/>
                      </patch>
                      <cues>
                        <cue name="Phase_Terranborn_Build_Dock_Hint">
                          <delay exact="4s"/>
                          <actions>
                            <show_help custom="{30201,232}" comment="You need blueprints to build station modules. If you have the credits, you can buy blueprints from a Faction Representitive."/>
                          </actions>
                        </cue>
                        <cue name="Phase_Terranborn_Build_Dock_Tutorial" ref="HQ_Tutorial_Build">
                          <param name="Station" value="$HQ"/>
                          <param name="MinStartTime" value="Phase_Terranborn_Build_Dock.time + 2min"/>
                        </cue>
                        <cue name="Phase_Terranborn_Build_Dock_Done">
                          <conditions>
                            <event_build_finished_components object="$HQ.buildingmodule"/>
                            <count_object_components object="$HQ" class="class.dockarea" min="1"/>
                          </conditions>
                          <cues>
                            <cue name="Phase_Terranborn_Build_Dock_Done_Speak">
                              <delay exact="2s"/>
                              <actions>
                                <!--
                                Boso: Ah, I see you have been rather busy.-->
                                <speak actor="$Boron_Mentor" priority="100" line="30223020" comment="Ah, I see you have been rather busy."/>
                              </actions>
                            </cue>
                            <cue name="Phase_Terranborn_Land">
                              <conditions>
                                <event_speak_finished actor="$Boron_Mentor" line="30223020"/>
                              </conditions>
                              <actions>
                                <update_mission cue="$MissionCue">
                                  <briefing>
                                    <objective step="3" action="objective.dockat" object="$HQ"/>
                                  </briefing>
                                </update_mission>
                                <set_objective cue="$MissionCue" step="3" action="objective.dockat" object="$HQ"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Terranborn_Landed" checkinterval="1s">
                              <conditions>
                                <check_value value="player.entity.hascontext.{$HQ}"/>
                              </conditions>
                              <actions>
                                <!--find nearest elevator-->
                                <set_value name="$ElevatorDistTable" exact="table[]"/>
                                <find_npc_waypoint name="$ElevatorSlots" object="$HQ" tags="tag.npctransport" excludeblocked="false" multiple="true"/>
                                <do_if value="$ElevatorSlots.count">
                                  <do_all exact="$ElevatorSlots.count" counter="$i">
                                    <set_value name="$ElevatorDistTable.{$ElevatorSlots.{$i}}" exact="player.entity.distanceto.{$ElevatorSlots.{$i}}"/>
                                  </do_all>
                                  <set_value name="$ElevatorSlot" exact="$ElevatorDistTable.keys.sorted.{1}"/>
                                  <!--TODO @Owen get the button-->
                                  <update_mission cue="$MissionCue">
                                    <briefing>
                                      <objective step="3" action="objective.custom" customaction="{30201,1015}" text="{20007,2002}" slot="$ElevatorSlot"/>
                                    </briefing>
                                  </update_mission>
                                  <set_objective cue="$MissionCue" step="3" action="objective.custom" customaction="{30201,1015}" text="{20007,2002}" slot="$ElevatorSlot"/>
                                </do_if>
                                <do_else>
                                  <!--Shouldn't ever happen. Just skip to the next part.-->
                                  <signal_cue cue="Phase_Escape"/>
                                  <reset_cue cue="Phase_Terranborn_End"/>
                                </do_else>
                              </actions>
                              <cues>
                                <cue name="Phase_Terranborn_Landed_Reset" checkinterval="1s">
                                  <conditions>
                                    <check_value value="not player.entity.hascontext.{$HQ}"/>
                                  </conditions>
                                  <actions>
                                    <update_mission cue="$MissionCue">
                                      <briefing>
                                        <objective step="3" action="objective.dockat" object="$HQ"/>
                                      </briefing>
                                    </update_mission>
                                    <set_objective cue="$MissionCue" step="3" action="objective.dockat" object="$HQ"/>
                                    <reset_cue cue="Phase_Terranborn_Landed"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Terranborn_Elevator_Button">
                                  <conditions>
                                    <event_ui_triggered screen="'TransporterMenu'"/>
                                    <check_value value="@event.param3.{3}.station == $HQ or @event.param3.{3}.hascontext.{$HQ}"/>
                                  </conditions>
                                  <actions>
                                    <!--
                                        Boron: (30201123)"Hmm, no. It appears we are still locked out from direct access."
                                        Boron: (30201124)"It seems I have no choice. I must leave my current location and join you on that station."-->
                                    <set_value name="Mentor_Speak_Helper.$Lines" exact="[30201123, 30201124]"/>
                                    <signal_cue cue="Mentor_Speak_Helper"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Terranborn_End">
                                  <conditions>
                                    <event_speak_finished actor="$Boron_Mentor" line="30201124"/>
                                  </conditions>
                                  <actions>
                                    <signal_cue cue="Phase_Escape"/>
                                    <reset_cue cue="Phase_Terranborn"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="SHORTCUT_Escape">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <signal_cue cue="Debug_Create_HQ"/>
          </actions>
          <cues>
            <cue name="SHORTCUT_Escape_Delay">
              <delay exact="2s"/>
              <actions>
                <signal_cue cue="Phase_Escape"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <cue name="Phase_Escape" version="5">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <include_actions ref="ActivatePhase"/>
            <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
            <do_if value="not $MissionCue.hasmission">
              <create_mission cue="$MissionCue" name="{30201,240}" description="{30201,241}" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false"/>
            </do_if>
            <!--Clear previous objective steps-->
            <update_mission cue="$MissionCue" name="{30201,240}" description="{30201,241}" icon="'briefing_boso_ta_02'" iconcaption="{30201,2}">
              <briefing replace="true">
                <objective step="1" action="objective.investigate" object="$HQ"/>
              </briefing>
            </update_mission>
            <!--Create Split characters-->
            <!--Split 1: Ko t'Pa-->
            <create_cue_actor name="$Split_1" cue="namespace" macro="character_split_male_plot_hq_01_macro">
              <page exact="10401"/>
              <!--TODO @Owen better owner?-->
              <owner exact="faction.civilian"/>
            </create_cue_actor>
            <set_entity_traits entity="$Split_1" missionactor="true"/>
            <!--Split 2: Fyi t'Pa-->
            <create_cue_actor name="$Split_2" cue="namespace" macro="character_split_male_plot_hq_02_macro">
              <page exact="10402"/>
              <!--TODO @Owen better owner?-->
              <owner exact="faction.civilian"/>
            </create_cue_actor>
            <set_entity_traits entity="$Split_2" missionactor="true"/>
          </actions>
          <patch sinceversion="2" state="complete">
            <!--Split 1: Ko t'Pa-->
            <create_cue_actor name="$Split_1" cue="namespace" macro="character_split_male_plot_hq_01_macro">
              <page exact="10401"/>
              <!--TODO @Owen better owner?-->
              <owner exact="faction.civilian"/>
            </create_cue_actor>
            <set_entity_traits entity="$Split_1" missionactor="true"/>
            <!--Split 2: Fyi t'Pa-->
            <create_cue_actor name="$Split_2" cue="namespace" macro="character_split_male_plot_hq_02_macro">
              <page exact="10402"/>
              <!--TODO @Owen better owner?-->
              <owner exact="faction.civilian"/>
            </create_cue_actor>
            <set_entity_traits entity="$Split_2" missionactor="true"/>
          </patch>
          <patch sinceversion="5" state="complete">
            <do_if value="Boron_Arrives.state == cuestate.waiting">
              <!--This part of the mission still needs to be completed. Check that everything is still fine as $SplitStation may have been destroyed before the $DecoyShip was spawned-->
              <set_value name="$HasSuitableSplitStation" exact="false"/>
              <do_if value="$SplitStation.isoperational">
                <check_object object="$SplitStation" result="$HasSuitableSplitStation">
                  <match_content class="class.dockarea" min="1" checkoperational="true"/>
                </check_object>
              </do_if>
              <do_if value="not $HasSuitableSplitStation and Phase_Escape_Find_Station_Actions.state != cuestate.waiting">
                <set_value name="$PatchingSplitStation" exact="true"/>
                <include_actions ref="Phase_Escape_Find_Station_Actions"/>
                <remove_value name="$PatchingSplitStation"/>
                <do_if value="@$DecoyShip.isoperational">
                  <create_order object="$DecoyShip" id="'MoveDie'" immediate="true"/>
                </do_if>
                <do_if value="$SplitStation and $SplitStationSector">
                  <debug_text text="'Replacement Split station: ' + $SplitStation + ' ' + $SplitStation.knownname" filter="savegame"/>
                  <set_value name="$PatchSplitStation" exact="true"/>
                  <!--Split station found. Continue the mission-->
                  <get_safe_pos result="$FlyToPos" sector="$SplitStationSector" object="$SplitStation" z="if $SplitStation.position.z lt 0 then 25km else -25km" max="5km"/>
                  <!--If a new station was selected, restart the whole section where the player has to fly to a position in that sector-->
                  <update_mission cue="$MissionCue" name="{30201,240}" description="{30201,241}">
                    <briefing replace="true">
                      <objective step="1" action="objective.investigate" object="$HQ"/>
                      <objective step="2" action="objective.flyto" object="$SplitStationSector" offset="$FlyToPos"/>
                    </briefing>
                  </update_mission>
                  <set_objective cue="$MissionCue" step="2" action="objective.flyto" object="$SplitStationSector" offset="$FlyToPos"/>
                  <do_if value="$ProtectGroup?">
                    <clear_group group="$ProtectGroup"/>
                  </do_if>
                  <reset_cue cue="Phase_Escape_At_Location"/>
                </do_if>
                <do_else>
                  <reset_cue cue="Phase_Escape_Find_Station"/>
                  <reset_cue cue="Phase_Escape_Introduction"/>
                </do_else>
              </do_if>
            </do_if>
          </patch>
          <cues>
            <cue name="Patch_Phase_Escape_Split_Station" onfail="cancel">
              <conditions>
                <check_value value="$PatchSplitStation?"/>
              </conditions>
              <actions>
                <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                  <param name="Object" value="$SplitStation"/>
                  <param name="RequesterCue" value="Phase_Escape"/>
                  <param name="DebugChance" value="$DebugChance"/>
                </run_actions>
              </actions>
              <delay exact="30s"/>
              <actions>
                <speak actor="$Boron_Mentor" line="1000301" delay="5s"/>
                <write_incoming_message title="{30201,12}" text="{30201,13}" source="$Boron_Mentor" highpriority="true" read="false"/>
              </actions>
            </cue>
            <library name="Phase_Escape_Find_Station_Actions">
              <actions>
                <set_value name="$SplitStation" exact="null"/>
                <set_value name="$SplitStationSector" exact="null"/>
                <do_if value="$LeakStation.exists and $LeakStation.sector.extension == '' and $LeakStation.sector != $HQ.sector">
                  <!--Check that the station is still suitable-->
                  <debug_text text="'Checking if leakstation ' + $LeakStation + ' ' + $LeakStation.knownname + ' is suitable for this phase.'" chance="$DebugChance"/>
                  <check_object result="$Result" object="$LeakStation">
                    <match owner="[faction.player, faction.xenon, faction.xenon1, faction.xenon2, faction.xenon3, faction.xenon4, faction.xenon5, faction.xenon6, faction.khaak]" negate="true"/>
                    <match_content class="class.dockarea" min="1" checkoperational="true"/>
                  </check_object>
                  <do_if value="$Result">
                    <set_value name="$SplitStation" exact="$LeakStation"/>
                  </do_if>
                  <do_else>
                    <debug_text text="'Leakstation ' + $LeakStation + ' ' + $LeakStation.knownname + ' is no longer suitable for this phase. Finding new station in ' + $LeakStationSector.knownname" chance="$DebugChance"/>
                    <find_station name="$SplitStation" space="$LeakStationSector">
                      <match_context class="class.sector" extension="''"/>
                      <match owner="[faction.player, faction.xenon, faction.xenon1, faction.xenon2, faction.xenon3, faction.xenon4, faction.xenon5, faction.xenon6, faction.khaak]" negate="true"/>
                      <match_content class="class.dockarea" min="1" checkoperational="true"/>
                    </find_station>
                  </do_else>
                  <do_if value="$SplitStation">
                    <set_value name="$SplitStationSector" exact="$SplitStation.sector"/>
                  </do_if>
                </do_if>
                <do_if value="not $SplitStationSector">
                  <do_if value="@$PatchingSplitStation and player.sector and player.sector != $HQ.sector">
                    <find_sector name="$PotentialSplitStationSectors" sortbygatedistanceto="player.sector" sortdescending="false" excluded="$HQ.sector" extension="''" multiple="true"/>
                  </do_if>
                  <do_else>
                    <find_sector name="$PotentialSplitStationSectors" extension="''" excluded="$HQ.sector" multiple="true"/>
                  </do_else>
                  <do_for_each name="$PotentialSplitStationSector" in="$PotentialSplitStationSectors">
                    <find_station name="$SplitStation" space="$PotentialSplitStationSector">
                      <match owner="[faction.player, faction.xenon, faction.xenon1, faction.xenon2, faction.xenon3, faction.xenon4, faction.xenon5, faction.xenon6, faction.khaak]" negate="true"/>
                      <match_content class="class.dockarea" min="1" checkoperational="true"/>
                    </find_station>
                    <do_if value="$SplitStation">
                      <set_value name="$SplitStationSector" exact="$SplitStation.sector"/>
                      <break/>
                    </do_if>
                  </do_for_each>
                </do_if>
                <debug_text text="'$SplitStation: ' + $SplitStation + ' ' + @$SplitStation.knownname" chance="$DebugChance"/>
                <assert value="$SplitStation and $SplitStationSector" text="'Unable to find suitable station for mission phase.'"/>
              </actions>
            </library>
            <cue name="Phase_Escape_Find_Station">
              <actions>
                <include_actions ref="Phase_Escape_Find_Station_Actions"/>
                <do_if value="$SplitStation and $SplitStationSector">
                  <!--Split station found. Continue the mission-->
                  <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                    <param name="Object" value="$SplitStation"/>
                    <param name="RequesterCue" value="Phase_Escape"/>
                    <param name="DebugChance" value="$DebugChance"/>
                  </run_actions>
                  <get_safe_pos result="$FlyToPos" sector="$SplitStationSector" object="$SplitStation" z="if $SplitStation.position.z lt 0 then 25km else -25km" max="5km"/>
                  <do_if value="$SplitStation.owner.primaryrace == race.argon">
                    <set_value name="$AbandonedShipMacro" exact="macro.ship_arg_m_frigate_01_b_macro"/>
                  </do_if>
                  <do_elseif value="$SplitStation.owner.primaryrace == race.paranid">
                    <set_value name="$AbandonedShipMacro" exact="macro.ship_par_m_frigate_01_a_macro"/>
                  </do_elseif>
                  <do_elseif value="$SplitStation.owner.primaryrace == race.teladi">
                    <set_value name="$AbandonedShipMacro" exact="macro.ship_tel_m_frigate_01_a_macro"/>
                  </do_elseif>
                  <do_else>
                    <do_any>
                      <set_value name="$AbandonedShipMacro" exact="macro.ship_arg_m_frigate_01_b_macro"/>
                      <set_value name="$AbandonedShipMacro" exact="macro.ship_par_m_frigate_01_a_macro"/>
                      <set_value name="$AbandonedShipMacro" exact="macro.ship_tel_m_frigate_01_a_macro"/>
                    </do_any>
                  </do_else>
                  <create_ship name="$AbandonedShip" sector="$SplitStationSector" macro="$AbandonedShipMacro">
                    <owner exact="faction.ownerless"/>
                    <safepos value="$FlyToPos" min="3km" max="4km"/>
                  </create_ship>
                  <signal_cue cue="Phase_Escape_Introduction"/>
                  <cancel_cue cue="Phase_Escape_Find_Station"/>
                </do_if>
              </actions>
              <cues>
                <!--Fallback reset in case no suitable station exists-->
                <cue name="Phase_Escape_Find_Station_Reset">
                  <delay exact="10s"/>
                  <actions>
                    <reset_cue cue="Phase_Escape_Find_Station"/>
                  </actions>
                </cue>
              </cues>
            </cue>
            <cue name="Phase_Escape_Introduction">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <delay exact="2s"/>
              <actions>
                <!--
                Boron: (30201126)"Your help would be greatly appreciated. I will send instructions."
                Boron: (30201125)"I didn't expect I would need to enact this escape plan so abruptly."
                Boron: (30201127)"A fast combat ship is preferable."-->
                <!--
                Boso: (30223021) Oh, did I forget to divulge that information?
                Boso: (30223022) I am currently a captive of some Split fellows.
                Boso: (30223023) If you aid me then I will gladly offer my services to unlock the potential of that facility.
                -->
                <do_if value="@$TerranVariant">
                  <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30223021, 0s], [30223022, 0.7s], [30223023, 0.7s]]"/>
                  <signal_cue cue="Mentor_Speak_Helper"/>
                </do_if>
                <do_else>
                  <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201126, 0s], [30201125, 0.7s], [30201127, 0.7s]]"/>
                  <signal_cue cue="Mentor_Speak_Helper"/>
                </do_else>
              </actions>
              <cues>
                <cue name="Phase_Escape_Intro_Briefing">
                  <conditions>
                    <event_cue_completed cue="Phase_Escape_Introduction"/>
                  </conditions>
                  <delay exact="4s"/>
                  <actions>
                    <!--
                    Title: Escape Plan
                    Description: Details to follow. A fast combat ship is preferable. -->
                    <update_mission cue="$MissionCue" name="{30201,240}" description="{30201,241}">
                      <briefing>
                        <objective step="2" action="objective.flyto" object="$SplitStationSector" offset="$FlyToPos"/>
                      </briefing>
                    </update_mission>
                    <set_objective cue="$MissionCue" step="2" action="objective.flyto" object="$SplitStationSector" offset="$FlyToPos"/>
                  </actions>
                </cue>
              </cues>
            </cue>
            <cue name="Phase_Escape_Chatter">
              <conditions>
                <event_speak_finished actor="$Boron_Mentor"/>
                <check_any>
                  <check_value value="event.param2 == 30201127"/>
                  <check_value value="event.param2 == 30223023"/>
                </check_any>
              </conditions>
              <cues>
                <cue name="Phase_Escape_Chatter_1">
                  <conditions>
                    <event_object_changed_zone object="player.entity"/>
                    <check_value value="player.entity.hascontext.{$SplitStationSector}"/>
                  </conditions>
                  <delay exact="5s"/>
                  <actions>
                    <!--Boron: (30201128)"I must admit, I am beginning to feel a bit tense. I do hope this goes to plan."-->
                    <speak actor="$Boron_Mentor" priority="100" line="30201128"/>
                  </actions>
                </cue>
              </cues>
            </cue>
            <cue name="Phase_Escape_At_Location" checkinterval="1s">
              <conditions>
                <check_value value="player.sector == $SplitStationSector and player.entity.distanceto.[$SplitStationSector, $FlyToPos] lt 2km"/>
              </conditions>
              <actions>
                <!--TODO @Owen better positioning or spawning.-->
                <create_position name="$DecoyShipSpawnPos" object="player.ship" z="25km" space="player.sector"/>
                <!--Boron: (30201129)"I have further refined the plan. Please take a look."-->
                <speak actor="$Boron_Mentor" priority="100" line="30201129"/>
                <update_mission cue="$MissionCue" name="{30201,240}" description="{30201,242}" comment="Second briefing description text">
                  <briefing>
                    <objective step="3" action="objective.escort" text="{30201,1016}" comment="Escort: Ship to station"/>
                    <objective step="4" action="objective.wait" text="{30201,1017}" comment="Wait: For ship to launch"/>
                    <objective step="5" action="objective.escort" text="{30201,1018}" comment="Escort: Ship out of sector"/>
                  </briefing>
                </update_mission>
                <!--Action: "Open briefing"-->
                <set_objective cue="$MissionCue" step="3" action="objective.custom" customaction="{30201,1019}" text="{30201,1020}"/>
              </actions>
              <cues>
                <cue name="Phase_Escape_Briefing_Observed_UI">
                  <conditions>
                    <event_ui_triggered/>
                    <check_any>
                      <check_value value="event.param == 'MissionBriefingMenu' and event.param2 == $MissionCue"/>
                      <!--TODO @Owen add UI trigger when player selects mission on the map list. 'other' tab triggers with params MapMenu other null-->
                    </check_any>
                  </conditions>
                  <actions>
                    <signal_cue cue="Phase_Escape_Briefing_Observed"/>
                  </actions>
                </cue>
                <cue name="Phase_Escape_Briefing_Observed_Fallback">
                  <delay exact="15s"/>
                  <actions>
                    <signal_cue cue="Phase_Escape_Briefing_Observed"/>
                  </actions>
                </cue>
                <cue name="Phase_Escape_Briefing_Observed">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <cancel_cue cue="Phase_Escape_Briefing_Observed_Fallback"/>
                    <!--
                    Boron: (30201130)"As you can see, I wish to escape the station via a chartered freighter."
                    Boron: (30201131)"There are actually multiple ships involved as to confound anyone wishing to track me."
                    Boron: (30201132)"I would like you to protect any ship which should get into trouble."-->
                    <set_value name="Mentor_Speak_Helper.$Lines" exact="[30201130, 30201131, 30201132]"/>
                    <signal_cue cue="Mentor_Speak_Helper"/>
                  </actions>
                </cue>
                <!--event.param == delay-->
                <cue name="Phase_Escape_Briefing_Observed_Finished_Reset" instantiate="true">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <set_value name="this.$Delay" exact="event.param"/>
                    <reset_cue cue="Phase_Escape_Briefing_Observed_Finished"/>
                  </actions>
                  <cues>
                    <!--TODO @Owen this should have the player fly to a new location or something. Boron line on something going wrong, change of plan-->
                    <cue name="Phase_Escape_Briefing_Observed_Finished_Reset_Trigger">
                      <delay exact="parent.$Delay"/>
                      <actions>
                        <signal_cue cue="Phase_Escape_Briefing_Observed_Finished"/>
                      </actions>
                    </cue>
                  </cues>
                </cue>
                <cue name="Phase_Escape_Briefing_Observed_Finished">
                  <conditions>
                    <check_any>
                      <event_speak_finished actor="$Boron_Mentor" line="30201132"/>
                      <event_cue_signalled/>
                    </check_any>
                  </conditions>
                  <delay exact="3s"/>
                  <actions>
                    <!--TODO @Owen Spawn ship at nearby station in internal storage. (if not, other side of nearby gate)-->
                    <create_ship name="$DecoyShip" sector="$SplitStationSector" capturable="false">
                      <select size="class.ship_m" faction="$SplitStation.owner" tags="tag.trader"/>
                      <owner exact="$SplitStation.owner" overridenpc="true"/>
                      <safepos value="$DecoyShipSpawnPos"/>
                    </create_ship>
                    <do_if value="not $DecoyShip">
                      <!--fallback-->
                      <create_ship name="$DecoyShip" sector="$SplitStationSector" capturable="false">
                        <select size="class.ship_m" faction="faction.argon" tags="tag.trader"/>
                        <owner exact="faction.argon" overridenpc="true"/>
                        <safepos value="$DecoyShipSpawnPos"/>
                      </create_ship>
                    </do_if>
                    <assert value="$DecoyShip" text="'No ship could be spawned [Owen]'"/>
                    <create_order object="$DecoyShip" name="$DockOrder" id="'DockAndWait'" immediate="true">
                      <param name="destination" value="$SplitStation"/>
                      <param name="debugchance" value="$DebugChance"/>
                    </create_order>
                    <add_to_group groupname="$ProtectGroup" object="$DecoyShip"/>
                  </actions>
                  <cues>
                    <cue name="Phase_Escape_Briefing_Observed_Finished_Delay">
                      <conditions>
                        <event_cue_completed cue="Phase_Escape_Briefing_Observed_Finished"/>
                      </conditions>
                      <cues>
                        <cue name="Phase_Escape_Escort_Reset">
                          <conditions>
                            <event_object_destroyed object="$DecoyShip"/>
                          </conditions>
                          <actions>
                            <signal_cue_instantly cue="Phase_Escape_Briefing_Observed_Finished_Reset" param="30s"/>
                          </actions>
                        </cue>
                        <cue name="Phase_Escape_Escort_Delay">
                          <delay exact="3s"/>
                        </cue>
                        <cue name="Phase_Escape_Escort_Start">
                          <conditions>
                            <event_cue_completed cue="Phase_Escape_Escort_Delay"/>
                          </conditions>
                          <actions>
                            <set_value name="$ShipDocked" exact="false"/>
                          </actions>
                          <cues>
                            <cue name="Phase_Escape_Escort_Ref" ref="md.RML_Escort_Convoy.RMLEscortConvoy">
                              <param name="EndSignalCue" value="Phase_Escape_Escort_End"/>
                              <param name="MissionCue" value="$MissionCue"/>
                              <param name="StartStep" value="3" comment="Briefing step to start the mission on"/>
                              <param name="UpdateBriefing" value="false" comment="Update the briefing objective step when the objective is updated"/>
                              <param name="ConvoyGroup" value="$ProtectGroup"/>
                              <param name="DebugChance" value="$DebugChance"/>
                            </cue>
                          </cues>
                        </cue>
                        <!--TODO @Owen #important there is a case where the ship can lose the DockAndWait order. May need to have a persistent failsafe until we find the cause.-->
                        <cue name="Phase_Escape_Escort_Docked" version="3">
                          <conditions>
                            <check_any>
                              <check_all>
                                <event_object_docked object="$DecoyShip"/>
                                <check_value value="event.param == $SplitStation"/>
                              </check_all>
                              <event_object_order_finished object="$DecoyShip" order="$DockOrder" comment="fallback in case the ship is unable to dock"/>
                            </check_any>
                          </conditions>
                          <actions>
                            <signal_objects object="$DecoyShip" param="'RML_Escort_Convoy'"/>
                          </actions>
                          <patch sinceversion="3" state="waiting">
                            <do_if value="$DecoyShip.order.id == 'DockAndWait'">
                              <debug_text text="'Setting current dock and wait order ' + $DecoyShip.order + ' of plot freighter ' + $DecoyShip + ' as the order the plot will listen to to procede.'" filter="savegame"/>
                              <set_value name="$DockOrder" exact="$DecoyShip.order"/>
                            </do_if>
                            <do_else>
                              <create_order object="$DecoyShip" name="$DockOrder" id="'DockAndWait'" immediate="true">
                                <param name="destination" value="$SplitStation"/>
                                <param name="debugchance" value="$DebugChance"/>
                              </create_order>
                              <debug_text text="'Fixing stuck plot freighter ' + $DecoyShip + ' which may have had the dock order timeout. New order: ' + $DockOrder" filter="savegame"/>
                            </do_else>
                          </patch>
                        </cue>
                        <cue name="Phase_Escape_Escort_End">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <actions>
                            <do_if value="Phase_Escape_Escort_End.$EndFeedbackValue gt 0">
                              <!--Success-->
                              <set_value name="$ShipDocked" exact="true"/>
                            </do_if>
                            <do_else>
                              <!--Failure-->
                            </do_else>
                          </actions>
                          <cues>
                            <!--TODO @Owen - not so ugly reset-->
                            <cue name="Phase_Escape_Escort_Fail" onfail="cancel">
                              <conditions>
                                <check_value value="not $ShipDocked"/>
                              </conditions>
                              <actions>
                                <!--
                                Boron (30201142): "Oh. That is rather unfortunate."-->
                                <speak actor="$Boron_Mentor" priority="100" line="30201142"/>
                                <signal_cue_instantly cue="Phase_Escape_Briefing_Observed_Finished_Reset" param="1min"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Ship_Lost">
                              <conditions>
                                <event_object_destroyed object="$DecoyShip"/>
                              </conditions>
                              <delay exact="5s"/>
                              <actions>
                                <!--
                                Boron (30201142): "Oh. That is rather unfortunate."-->
                                <speak actor="$Boron_Mentor" priority="100" line="30201142"/>
                                <signal_cue cue="Phase_Escape_Split_Intro"/>
                                <cancel_cue cue="Phase_Escape_Await_Ship"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Await_Ship" onfail="cancel">
                              <conditions>
                                <check_value value="$ShipDocked"/>
                              </conditions>
                              <actions>
                                <!--TODO @Owen Store ship? Can we trigger this to happen?-->
                                <set_objective cue="$MissionCue" step="4" action="objective.wait" text="{30201,1017}"/>
                              </actions>
                              <cues>
                                <cue name="Phase_Escape_Await_Ship_Speak">
                                  <delay exact="2s"/>
                                  <actions>
                                    <!--
                                    Boron: (30201133)"Please wait for the ship to conclude its 'business'. It will launch shortly."-->
                                    <speak actor="$Boron_Mentor" priority="100" line="30201133"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Escape_Launch_Ship" version="3">
                                  <delay exact="30s"/>
                                  <actions>
                                    <!--If the player loses the ship at this point, don't reset-->
                                    <cancel_cue cue="Phase_Escape_Escort_Reset"/>
                                    <!--Find the furthest jumpgame or superhighway gate-->
                                    <find_object name="$DestinationGates" class="class.gate" active="true" space="$SplitStationSector" multiple="true"/>
                                    <find_object name="$DestinationGates" class="class.highwayentrygate" space="$SplitStationSector" multiple="true" append="true"/>
                                    <set_value name="$GateDistTable" exact="table[]"/>
                                    <do_all exact="$DestinationGates.count" counter="$i">
                                      <do_if value="$DestinationGates.{$i}.isclass.gate or $DestinationGates.{$i}.highway.issuperhighway">
                                        <set_value name="$GateDistTable.{$DestinationGates.{$i}}" exact="$SplitStation.distanceto.{$DestinationGates.{$i}}"/>
                                      </do_if>
                                    </do_all>
                                    <cancel_all_orders object="$DecoyShip"/>
                                    <do_if value="$GateDistTable.keys.count">
                                      <set_value name="$FurthestGate" exact="$GateDistTable.keys.sorted.last"/>
                                      <create_order name="$LeaveStationOrder" object="$DecoyShip" id="'MoveGeneric'">
                                        <param name="destination" value="$FurthestGate"/>
                                        <param name="position" value="position.[0m, 0m, -10km]"/>
                                        <param name="noboost" value="true"/>
                                        <param name="debugchance" value="$DebugChance"/>
                                      </create_order>
                                    </do_if>
                                    <do_else>
                                      <assert value="$GateDistTable.keys.count" text="'Unable to find an active gate or superhighway entry gate in sector ' + $SplitStationSector + ' ' + $SplitStationSector.knownname + '. Mission will auto complete at some point. [Owen]'"/>
                                      <create_order name="$LeaveStationOrder" object="$DecoyShip" id="'MoveGeneric'">
                                        <param name="destination" value="$SplitStationSector"/>
                                        <param name="position" value="$DecoyShipSpawnPos"/>
                                        <param name="noboost" value="true"/>
                                        <param name="debugchance" value="$DebugChance"/>
                                      </create_order>
                                    </do_else>
                                  </actions>
                                  <patch sinceversion="2" state="complete">
                                    <do_if value="not @$FurthestGate or ($FurthestGate.isclass.gate and not $FurthestGate.isactive)">
                                      <find_object name="$DestinationGates" class="class.gate" active="true" space="$SplitStationSector" multiple="true"/>
                                      <find_object name="$DestinationGates" class="class.highwayentrygate" space="$SplitStationSector" multiple="true" append="true"/>
                                      <set_value name="$GateDistTable" exact="table[]"/>
                                      <do_all exact="$DestinationGates.count" counter="$i">
                                        <do_if value="$DestinationGates.{$i}.isclass.gate or $DestinationGates.{$i}.highway.issuperhighway">
                                          <set_value name="$GateDistTable.{$DestinationGates.{$i}}" exact="$SplitStation.distanceto.{$DestinationGates.{$i}}"/>
                                        </do_if>
                                      </do_all>
                                      <do_if value="$GateDistTable.keys.count">
                                        <debug_text text="'patching gate from ' + $FurthestGate + ' to ' + $GateDistTable.keys.sorted.last + ' ' + $GateDistTable.keys.sorted.last.knownname" filter="savegame"/>
                                        <set_value name="$FurthestGate" exact="$GateDistTable.keys.sorted.last"/>
                                        <set_value name="$Patch__FurthestGate" exact="true"/>
                                      </do_if>
                                    </do_if>
                                  </patch>
                                  <patch sinceversion="3" state="complete">
                                    <do_if value="Phase_Escort_Cleared_Station.state != cuestate.complete">
                                      <!--Find the MoveGeneric order-->
                                      <debug_text text="'Attempt to set $LeaveStationOrder'" filter="savegame"/>
                                      <set_value name="$LeaveStationOrder" exact="null"/>
                                      <do_for_each name="$Patch_Order" in="$DecoyShip.orders">
                                        <do_if value="$Patch_Order.id == 'MoveGeneric'">
                                          <set_value name="$LeaveStationOrder" exact="$Patch_Order"/>
                                          <debug_text text="'Setting $LeaveStationOrder to ' + $LeaveStationOrder" filter="savegame"/>
                                          <break/>
                                        </do_if>
                                      </do_for_each>
                                    </do_if>
                                  </patch>
                                  <cues>
                                    <cue name="Phase_Escort_Ship_Launched" checkinterval="1s">
                                      <conditions>
                                        <check_value value="not $DecoyShip.dock"/>
                                      </conditions>
                                      <delay exact="2s"/>
                                      <actions>
                                        <!--
                                        Boron: (30201134)"Please protect this ship from any harm. While it is a decoy, I would rather no harm comes to the crew."-->
                                        <speak actor="$Boron_Mentor" priority="100" line="30201134"/>
                                        <set_objective cue="$MissionCue" step="5" action="objective.escort" text="{30201,1018}" object="$DecoyShip"/>
                                      </actions>
                                      <cues>
                                        <cue name="Phase_Escort_Cleared_Station" checkinterval="1s" version="2">
                                          <conditions>
                                            <check_value value="$DecoyShip.distanceto.{$SplitStation} gt 10km or $DecoyShip.distanceto.[$SplitStationSector, $DecoyShipSpawnPos] lt 1km or not $LeaveStationOrder.exists"/>
                                          </conditions>
                                          <actions>
                                            <signal_cue cue="Phase_Escape_Split_Intro"/>
                                          </actions>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="Phase_Escape_Split_Killed_Early">
                              <conditions>
                                <check_any>
                                  <event_object_destroyed object="$Split_1"/>
                                  <event_object_destroyed object="$Split_2"/>
                                </check_any>
                              </conditions>
                              <actions>
                                <signal_cue_instantly cue="Boron_Arrives" param="30s"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Split_Intro">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <!--Handling taken care of in Phase_Escape_Ship_Lost_2-->
                                <cancel_cue cue="Phase_Escape_Ship_Lost"/>
                                <create_ship name="$SplitShip" groupname="$SplitShips" dock="$SplitStation" capturable="false">
                                  <select size="class.ship_s" faction="$SplitStation.owner" tags="tag.fighter"/>
                                  <pilot actor="$Split_1"/>
                                  <owner exact="$Split_1.owner"/>
                                </create_ship>
                                <do_if value="$SplitShip">
                                  <do_all exact="1">
                                    <create_ship groupname="$SplitShips" dock="$SplitStation" capturable="false">
                                      <select size="class.ship_s" faction="$SplitStation.owner" tags="tag.scout"/>
                                      <owner exact="$Split_1.owner"/>
                                    </create_ship>
                                  </do_all>
                                </do_if>
                                <do_else>
                                  <!--fallback-->
                                  <create_ship groupname="$SplitShips" dock="$SplitStation" capturable="false">
                                    <select size="class.ship_s" faction="[faction.argon, faction.paranid, faction.teladi]" tags="tag.fighter"/>
                                    <pilot actor="$Split_1"/>
                                    <owner exact="$Split_1.owner"/>
                                  </create_ship>
                                  <do_all exact="1">
                                    <create_ship groupname="$SplitShips" dock="$SplitStation" capturable="false">
                                      <select size="class.ship_s" faction="[faction.argon, faction.paranid, faction.teladi]" tags="tag.scout"/>
                                      <owner exact="$Split_1.owner"/>
                                    </create_ship>
                                  </do_all>
                                </do_else>
                                <!--
                                Boron (30201135): "I am successfully aboard my transport and enroute to the installation."-->
                                <speak actor="$Boron_Mentor" priority="100" line="30201135"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Launch_Split_2">
                              <conditions>
                                <event_speak_finished actor="$Boron_Mentor" line="30201135"/>
                              </conditions>
                              <delay exact="1s"/>
                              <actions>
                                <!--TODO @Owen test if this should be 'broadcast'-->
                                <!--
                                Split #1 (distorted radio filter)(30201005): "Where is the Boron?!"-->
                                <speak actor="$Split_1" priority="100" line="30201005"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Launch_Split_3">
                              <conditions>
                                <event_speak_finished actor="$Split_1" line="30201005"/>
                              </conditions>
                              <actions>
                                <!--
                                Split #2 (distorted radio filter)(30201001): "I will check security logs."-->
                                <speak actor="$Split_2" priority="100" line="30201001"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Launch_Split_4">
                              <conditions>
                                <event_speak_finished actor="$Split_2" line="30201001"/>
                              </conditions>
                              <delay exact="1s"/>
                              <actions>
                                <!--
                                Boron: (30201136)"Oh, that didn't take long at all. It seems that my disappearence has been noticed."
                                Boron: (30201137)"I expect my ship is at a safe distance. I can't say the same for the others. Please be alert."-->
                                <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201136, 0s], [30201137, 0.4s]]"/>
                                <signal_cue cue="Mentor_Speak_Helper"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Launch_Split_5">
                              <conditions>
                                <event_speak_finished actor="$Boron_Mentor" line="30201137"/>
                              </conditions>
                              <actions>
                                <!--
                                Split #1 (distorted radio filter)(30201006): "I will order our ships to intercept targets."-->
                                <speak actor="$Split_1" priority="100" line="30201006"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Launch_Split_6">
                              <conditions>
                                <event_speak_finished actor="$Split_1" line="30201006"/>
                              </conditions>
                              <actions>
                                <!--
                                Split #2 (distorted radio filter)(30201002): "You will join them while I investigate further."-->
                                <speak actor="$Split_2" priority="100" line="30201002"/>
                              </actions>
                            </cue>
                            <cue name="Phase_Escape_Launch_Split_7">
                              <conditions>
                                <event_speak_finished actor="$Split_2" line="30201002"/>
                              </conditions>
                              <actions>
                                <!--
                                Split #1 (distorted radio filter)(30201007): "Yes brother."-->
                                <speak actor="$Split_1" priority="100" line="30201007"/>
                                <!--Split #1 and other ships head to the ship the player is defending or the player ship-->
                                <do_if value="$DecoyShip.isoperational" comment="Queue orders to attack the decoy ship first and then the player">
                                  <signal_cue cue="Phase_Escape_Defend_Ship"/>
                                </do_if>
                                <do_else>
                                  <signal_cue cue="Phase_Escape_Return_To_HQ"/>
                                </do_else>
                                <set_value name="$AttackStart" exact="false"/>
                                <signal_cue_instantly cue="Boron_Arrives" param="30s"/>
                                <cancel_cue cue="Phase_Escape_Split_Killed_Early"/>
                              </actions>
                              <cues>
                                <cue name="Phase_Escape_Ran_Away" checkinterval="1s">
                                  <conditions>
                                    <check_value value="$DecoyShip.isoperational"/>
                                  </conditions>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="Phase_Escape_Defend_Ship">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <do_all exact="$SplitShips.count" counter="$i">
                                  <create_order object="$SplitShips.{$i}" id="'Follow'">
                                    <param name="target" value="$DecoyShip"/>
                                    <param name="debugchance" value="$DebugChance"/>
                                  </create_order>
                                </do_all>
                                <!--Objective is still escort-->
                              </actions>
                              <cues>
                                <cue name="Phase_Escape_Split_Near" checkinterval="1s">
                                  <conditions>
                                    <check_any exact="$SplitShips.count" counter="$i">
                                      <check_value value="$DecoyShip.isoperational and $DecoyShip.sector and $SplitShips.{$i}.sector == $DecoyShip.sector and $SplitShips.{$i}.distanceto.{$DecoyShip} lt 7km"/>
                                    </check_any>
                                  </conditions>
                                  <actions>
                                    <set_value name="$AttackStart" exact="true"/>
                                    <!--
                                    Split #1 (30201008): "You! Halt and prepare for scan!"-->
                                    <speak actor="$Split_1" priority="100" line="30201008"/>
                                  </actions>
                                  <cues>
                                    <cue name="Phase_Escape_Split_Near_2">
                                      <actions>
                                        <do_if value="@$DecoyShip.pilot">
                                          <!--
                                          Pilot: (5016) "No, that's not happening!"-->
                                          <speak actor="$DecoyShip.pilot" priority="100" line="5016"/>
                                        </do_if>
                                        <do_else>
                                          <signal_cue cue="Phase_Escape_Return_To_HQ"/>
                                          <cancel_cue cue="Phase_Escape_Defend_Ship"/>
                                        </do_else>
                                      </actions>
                                      <cues>
                                        <cue name="Phase_Escape_Split_Attack">
                                          <conditions>
                                            <event_speak_finished actor="$Split_1" line="30201009"/>
                                          </conditions>
                                          <actions>
                                            <do_all exact="$SplitShips.count" counter="$i">
                                              <cancel_all_orders object="$SplitShips.{$i}"/>
                                              <set_owner object="$SplitShips.{$i}" faction="faction.criminal" overridenpc="true"/>
                                              <create_order object="$SplitShips.{$i}" id="'Attack'">
                                                <param name="primarytarget" value="$DecoyShip"/>
                                                <param name="pursuetargets" value="true"/>
                                              </create_order>
                                            </do_all>
                                          </actions>
                                        </cue>
                                        <cue name="Phase_Escape_Split_Near_3">
                                          <conditions>
                                            <event_speak_finished actor="$DecoyShip.pilot" line="5016"/>
                                          </conditions>
                                          <actions>
                                            <!--
                                            Split #1 (30201009): "Then prepare to die!"-->
                                            <speak actor="$Split_1" priority="100" line="30201009"/>
                                          </actions>
                                          <cues>
                                            <cue name="Phase_Escape_Split_Run">
                                              <delay exact="30s"/>
                                              <actions>
                                                <do_if value="$SplitShips.count">
                                                  <!--
                                                  Split #2 (30201003): "Brother. The Boron is not on-board that ship. Return to base."-->
                                                  <speak actor="$Split_2" priority="100" line="30201003"/>
                                                </do_if>
                                                <do_else>
                                                  <!--Let ship continue to the end-->
                                                </do_else>
                                              </actions>
                                            </cue>
                                            <cue name="Phase_Escape_Split_Run_2">
                                              <conditions>
                                                <event_speak_finished actor="$Split_2" line="30201003"/>
                                              </conditions>
                                              <delay exact="1s"/>
                                              <actions>
                                                <do_if value="$Split_1.exists">
                                                  <!--
                                                  Split #1: (2105) "Acknoledged."-->
                                                  <speak actor="$Split_1" priority="100" line="2105"/>
                                                </do_if>
                                                <do_all exact="$SplitShips.count" counter="$i">
                                                  <cancel_all_orders object="$SplitShips.{$i}"/>
                                                  <create_order object="$SplitShips.{$i}" id="'DockAndWait'" immediate="true">
                                                    <param name="destination" value="$SplitStation"/>
                                                    <param name="debugchance" value="$DebugChance"/>
                                                  </create_order>
                                                </do_all>
                                              </actions>
                                            </cue>
                                            <cue name="Phase_Escape_Split_Run_3">
                                              <conditions>
                                                <event_speak_finished actor="$Split_1" line="2105"/>
                                              </conditions>
                                              <delay exact="1s"/>
                                              <actions>
                                                <!--
                                                Split #1 (30201010): "You will regret crossing us!-->
                                                <speak actor="$Split_1" priority="100" line="30201010"/>
                                              </actions>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                                <cue name="Phase_Escape_Head_Through_Gate" checkinterval="1s" version="2">
                                  <conditions>
                                    <check_value value="@$FurthestGate and (Phase_Escape_Split_Run_2.state == cuestate.complete or $FurthestGate.distanceto.{$DecoyShip} lt 15km or @$Patch__FurthestGate)"/>
                                  </conditions>
                                  <actions>
                                    <set_value name="$GateDestinationSector" exact="$FurthestGate.destination"/>
                                    <find_station name="$DecoyShipTarget" space="$GateDestinationSector">
                                      <match_relation_to object="$DecoyShip" comparison="ge" relation="dock"/>
                                    </find_station>
                                    <cancel_all_orders object="$DecoyShip"/>
                                    <do_if value="$DecoyShipTarget">
                                      <create_order object="$DecoyShip" id="'DockAndWait'" immediate="true">
                                        <param name="destination" value="$DecoyShipTarget"/>
                                        <param name="debugchance" value="$DebugChance"/>
                                      </create_order>
                                    </do_if>
                                    <do_else>
                                      <!--Position shouldn't matter too much-->
                                      <create_order object="$DecoyShip" id="'MoveGeneric'">
                                        <param name="destination" value="$GateDestinationSector"/>
                                        <param name="position" value="position.[0m, 0m, 0m]"/>
                                        <param name="noboost" value="true"/>
                                        <param name="debugchance" value="$DebugChance"/>
                                      </create_order>
                                    </do_else>
                                  </actions>
                                </cue>
                                <cue name="Patch__Phase_Restart_Movement" onfail="cancel">
                                  <conditions>
                                    <check_value value="@$Patch__FurthestGate and Phase_Escape_Return_To_HQ.state == cuestate.waiting and Phase_Escape_Head_Through_Gate.state == cuestate.complete"/>
                                  </conditions>
                                  <actions>
                                    <debug_text text="'Furthest gate was reevaluated during patching. Ship will restart its movement.'" filter="savegame"/>
                                    <reset_cue cue="Phase_Escape_Head_Through_Gate"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Escape_No_Destination" onfail="cancel">
                                  <conditions>
                                    <check_value value="not @$FurthestGate"/>
                                  </conditions>
                                  <actions>
                                    <assert value="@$FurthestGate" text="'No destination was found for escort ship in sector ' + $SplitStationSector + ' ' + $SplitStationSector.knownname + ' [Owen]'"/>
                                    <signal_cue cue="Phase_Escape_Return_To_HQ"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Escape_Ship_Destoyed">
                                  <conditions>
                                    <event_object_destroyed object="$DecoyShip"/>
                                  </conditions>
                                  <actions>
                                    <signal_cue cue="Phase_Escape_Return_To_HQ"/>
                                    <cancel_cue cue="Phase_Escape_Defend_Ship"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Escape_Ship_Escaped">
                                  <conditions>
                                    <event_object_changed_sector object="$DecoyShip"/>
                                  </conditions>
                                  <delay exact="3s"/>
                                  <actions>
                                    <!--
                                    Pilot: Thanks for your help-->
                                    <speak actor="$DecoyShip.pilot" priority="100" line="2111"/>
                                    <signal_cue cue="Phase_Escape_Return_To_HQ"/>
                                    <cancel_cue cue="Phase_Escape_Defend_Ship"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="Phase_Escape_Return_To_HQ">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <!--No ship to defend. Just escape.-->
                                <update_mission cue="$MissionCue">
                                  <briefing>
                                    <objective step="5" action="objective.dockat" object="$HQ"/>
                                  </briefing>
                                </update_mission>
                                <set_objective cue="$MissionCue" step="5" action="objective.dockat" object="$HQ"/>
                                <do_if value="Phase_Escape_Defend_Ship.state == cuestate.waiting">
                                  <debug_text text="player.age + ' set orders'" chance="$DebugChance"/>
                                  <do_for_each name="$AttackingSplit" in="$SplitShips">
                                    <cancel_all_orders object="$AttackingSplit"/>
                                    <do_if value="player.ship and player.sector and player.sector == $AttackingSplit.sector">
                                      <create_order object="$AttackingSplit" id="'Attack'">
                                        <param name="primarytarget" value="player.ship"/>
                                        <param name="pursuetargets" value="true"/>
                                      </create_order>
                                    </do_if>
                                    <do_else>
                                      <create_order object="$AttackingSplit" id="'Patrol'">
                                        <param name="range" value="class.sector"/>
                                      </create_order>
                                    </do_else>
                                  </do_for_each>
                                </do_if>
                              </actions>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
            <!--                   

                                    
                Ships are safe
                Boron (30201141): "Good work."
                If not
                Boron (30201142): "Oh. That is rather unfortunate."
                                    
                -->
          </cues>
        </cue>
        <!--event.param = delay-->
        <cue name="Boron_Arrives">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <delay exact="event.param"/>
          <actions>
            <!--
            Boron (30201138): "I am successfully docked. I will begin my work."
            Boron (30201139): "My, this structure is far more impressive in person than I expected."-->
            <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201138, 0s], [30201139, 0.4s]]"/>
            <do_if value="$AttackStart">
              <!--
              Boron (30201140): "Once the ships are safe, please join me."-->
              <append_to_list name="Mentor_Speak_Helper.$Lines" exact="[30201140, 0.4s]"/>
            </do_if>
            <signal_cue cue="Mentor_Speak_Helper"/>
            <signal_cue cue="Manage_Boron_Tank_Room"/>
            <set_entity_traits entity="$Boron_Mentor" customhandler="true"/>
          </actions>
          <cues>
            <cue name="Meet_Hint" checkinterval="1s" version="2">
              <conditions>
                <check_value value="player.sector == $HQ.sector"/>
              </conditions>
              <delay exact="2s"/>
              <actions>
                <!--
                Boron (30201143): "When you land, enter the elevator."-->
                <speak actor="$Boron_Mentor" priority="100" line="30201143"/>
                <signal_cue cue="Phase_Escape_Return_To_HQ" check="false"/>
              </actions>
              <delay exact="1s"/>
              <actions>
                <reset_cue cue="Phase_Escape"/>
                <!--TODO @Owen some backup cleanup e.g. the Split ships and the decoy ship-->
              </actions>
              <patch sinceversion="2" state="complete">
                <do_if value="Phase_Escape.state == cuestate.waiting and Meet_Speak.state == cuestate.waiting">
                  <debug_text text="'Updating objective to fly to HQ as Escape Plan mission has ended'" filter="savegame"/>
                  <update_mission cue="$MissionCue">
                    <briefing>
                      <objective step="5" action="objective.dockat" object="$HQ"/>
                    </briefing>
                  </update_mission>
                  <set_objective cue="$MissionCue" step="5" action="objective.dockat" object="$HQ"/>
                </do_if>
              </patch>
            </cue>
            <cue name="Meet_Speak" checkinterval="1s">
              <conditions>
                <check_value value="player.room == $Boron_Mentor.room"/>
              </conditions>
              <actions>
                <!-- Meet mentor for the first time -->
                <play_cutscene key="'Story_Mentor_Intro'">
                  <param name="BosoTa" object="$Boron_Mentor"/>
                </play_cutscene>
                <!-- Boron (30201144): "Ahha! At last, we meet face to face!"-->
                <speak actor="$Boron_Mentor" priority="100" line="30201144" delay="2s"/>
              </actions>
              <delay exact="4s"/>
              <actions>
                <set_objective cue="$MissionCue" step="5" updatebriefing="true" action="objective.talkto" object="$Boron_Mentor"/>
              </actions>
            </cue>
            <cue name="Meet_Room_Guidance" checkinterval="1s">
              <conditions>
                <check_value value="player.entity.hascontext.{$HQ}"/>
              </conditions>
              <actions>
                <set_objective cue="$MissionCue" step="5" updatebriefing="true" action="objective.goto" object="$Boron_Mentor.room" text="$Boron_Mentor.room.parent.knownname" offset="position.[0m, 0m, -3m]"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <cue name="Patch__HQ_Name" onfail="cancel">
          <conditions>
            <check_value value="@player.entity.$x4ep1_hq_research_unlocked"/>
          </conditions>
          <actions>
            <clear_object_name object="$HQ"/>
            <debug_text text="'Renaming $HQ to ' + $HQ.knownname" filter="savegame"/>
          </actions>
        </cue>
        <!--Cue to signal if another story handled the finding/creation of the HQ and needs to inform this script (excluding the Terran Pioneer start which handles it in Phase_Terranborn)-->
        <cue name="Other_Story_HQ_Handover">
          <conditions>
            <!--event.param - the handover table with values passed from the 'other mission'
            $hq - The HQ station,
            $initialise - if true, initialise the HQ, based on its current owner,
            $addboso - if true, add Boso's room-->
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$HQ" exact="event.param.$hq"/>
            <do_if value="$HQ">
              <set_value name="$HQSector" exact="$HQ.sector"/>
              <set_value name="$HQOwner" exact="$HQ.owner"/>
              <!--Initialise-->
              <do_if value="@event.param.$initialise">
                <do_if value="not $HQ.tradenpc">
                  <create_control_entity object="$HQ" post="controlpost.manager">
                    <select tags="controlpost.manager.tag" faction="$HQOwner"/>
                    <owner exact="$HQOwner"/>
                  </create_control_entity>
                </do_if>
                <do_if value="not $HQ.defencenpc">
                  <create_control_entity object="$HQ" post="controlpost.defence">
                    <select tags="controlpost.defence.tag" faction="$HQOwner"/>
                    <owner exact="$HQOwner"/>
                  </create_control_entity>
                </do_if>
                <do_if value="not $HQ.engineer">
                  <create_control_entity object="$HQ" post="controlpost.engineer">
                    <select tags="controlpost.engineer.tag" faction="$HQOwner"/>
                    <owner exact="$HQOwner"/>
                  </create_control_entity>
                </do_if>
                <do_if value="not $HQ.paidbuildplot.exists">
                  <set_value name="$Patch__BuildPlot" exact="$HQ.buildplot.max"/>
                  <set_build_plot object="$HQ" paid="true" x="$Patch__BuildPlot.x" y="$Patch__BuildPlot.y" z="$Patch__BuildPlot.z"/>
                  <remove_value name="$Patch__BuildPlot"/>
                </do_if>
                <do_if value="$HQOwner == faction.player">
                  <signal_cue cue="Manage_PlayerOffice_Room"/>
                </do_if>
              </do_if>
              <!--Add Boso's room-->
              <do_if value="@event.param.$addboso">
                <signal_cue cue="Manage_Boron_Tank_Room"/>
              </do_if>
            </do_if>
          </actions>
        </cue>
        <!-- Boron DLC Variant - Skipping HQ Story unless already active or Terran Gamestart -->
        <cue name="Phase_Boron_HQ_Encounter">
          <conditions>
            <check_all>
              <event_cue_signalled/>
              <check_value value="@$BoronVariant"/>
              <!--TODO @Owen a more solid check for whether the player's started the base game variant mission-->
              <check_value value="not $MissionCue.hasmission and not @$TerranVariant and not @$BoronMet"/>
            </check_all>
          </conditions>
          <delay exact="2s"/>
          <actions>
            <find_sector name="$HereticsEndSector" macro="macro.cluster_31_sector001_macro" required="true"/>
            <get_safe_pos result="$HQPosition" sector="$HereticsEndSector" value="position.[9000m, 0m, 93404m]" radius="10km" allowyaxis="false"/>
            <set_value name="$ExpeditionLeaderActor" exact="md.$PersistentCharacters.$ExpeditionLeaderActor"/>
            <set_value name="$MissionSpecialistActor" exact="md.Story_Boron.Start.$MissionSpecialistActor"/>
            <!-- Grab an up to date MissionActors table from Story_Boron -->
            <set_value name="$MissionActors" exact="md.Story_Boron.Start.$MissionActors"/>
            <set_value name="$MissionActors.$Boron_Mentor" exact="table[                                               $entity = $Boron_Mentor,                                               $monitor = table[                                                 $cutscenekey = 'ShowCharacterBoron',                                                 $forceonplayer = true,                                                 $ignoredistance = true                                               ]                                             ]"/>
            <set_value name="$EffectLength" exact="11s"/>
            <!-- If the player was offered Boso's mission, but they haven't accepted it yet, remove it -->
            <do_if value="$MissionCue.hasmissionoffer">
              <remove_offer cue="$MissionCue"/>
            </do_if>
          </actions>
          <cues>
            <cue name="Phase_Boron_HQ_Encounter_Completed">
              <conditions>
                <event_cue_completed cue="Phase_Boron_HQ_Encounter"/>
              </conditions>
              <cues>
                <!-- A one-time check to see if the player is still in HE when the Boron game starts -->
                <cue name="Phase_Boron_OnDLCActivation_Check" onfail="cancel">
                  <conditions>
                    <check_value value="player.sector == $HereticsEndSector and not @$BoronMet"/>
                  </conditions>
                  <actions>
                    <signal_cue cue="Phase_Boron_Player_Enters_Heretics_End"/>
                  </actions>
                </cue>
                <cue name="Phase_Boron_PlayerDistance_Check" checkinterval="1s">
                  <conditions>
                    <check_all>
                      <check_value value="player.sector == $HereticsEndSector and not @$BoronMet"/>
                      <check_value value="player.entity.distanceto.{[$HereticsEndSector, $HQPosition]} le 130km"/>
                    </check_all>
                  </conditions>
                  <actions>
                    <signal_cue cue="Phase_Boron_Player_Enters_Heretics_End"/>
                  </actions>
                </cue>
                <cue name="Phase_Boron_Player_Enters_Heretics_End">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <cancel_cue cue="Phase_Boron_OnDLCActivation_Check"/>
                    <cancel_cue cue="Phase_Boron_PlayerDistance_Check"/>
                    <!-- Boso will give a brief warning to signal that something is about to happen, if if the player is on the map -->
                    <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[                                                                             $caller = this, $preset = '$plot', $actors = $MissionActors, $debugchance = 0, $priority = 99, $nofullscreenmenu = false,                                                                             $script = [                                                                                       table [$actor = '$Boron_Mentor', $speak = 30253010, $broadcast = true, $monitor = false, $speakcallbackcue = Phase_Boron_HQ_BosoSpeak_Finished],                                                                                       ],                                                                                       $abortcallbackcue = Phase_Boron_HQ_BosoSpeak_Finished,                                                                           ]"/>
                  </actions>
                  <cues>
                    <!-- The rest of the Boso lines will only continue once the player has closed the map -->
                    <cue name="Phase_Boron_HQ_BosoSpeak_Finished">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[                                                                             $caller = this, $preset = '$plot', $actors = $MissionActors, $debugchance = 0,                                                                             $script = [                                                                                       2s,                                                                                       table [$actor = '$MissionSpecialistActor', $speak = 30253007, $broadcast = true, $monitor = false, $speakcallbackcue = Phase_Boron_HQ_Warps_Into_HE],                                                                                       table [$actor = '$MissionSpecialistActor', $speak = 30253008, $broadcast = true, $monitor = false],                                                                                       table [$actor = '$ExpeditionLeaderActor', $speak = 30253040, $broadcast = true, $monitor = false],                                                                                       ],                                                                                       $abortcallbackcue = Phase_Boron_HQ_Warps_Into_HE,                                                                           ]"/>
                      </actions>
                    </cue>
                    <cue name="Phase_Boron_HQ_Comms_Cutscene">
                      <conditions>
                        <event_cue_signalled cue="Phase_Boron_HQ_Warps_Into_HE"/>
                      </conditions>
                      <delay exact="2s"/>
                      <actions>
                        <play_cutscene result="this.$CutsceneID" key="'Story_Mentor_WarpIn'" targetmonitor="true" abortable="false">
                          <param name="target_object" object="$TempEffectObject"/>
                        </play_cutscene>
                      </actions>
                    </cue>
                    <cue name="Phase_Boron_End_CommsCutscene">
                      <conditions>
                        <event_cue_completed cue="Phase_Boron_HQ_In_Heretics_End_Spawn_v2"/>
                      </conditions>
                      <delay exact="4s"/>
                      <actions>
                        <stop_cutscene cutscene="Phase_Boron_HQ_Comms_Cutscene.$CutsceneID"/>
                      </actions>
                    </cue>
                    <cue name="Phase_Boron_HQ_Warps_Into_HE">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <delay exact="1s"/>
                      <actions>
                        <set_value name="$MissionCue_Temp" exact="this"/>
                        <play_music music="'music_hq_reveal'" comment="48s"/>
                        <get_zone_at_position name="$HQZone" value="$HQPosition" sector="$HereticsEndSector"/>
                        <!-- save which mission was active before -->
                        <do_if value="player.hasactivemission">
                          <set_value name="$PreviousHasPlayerMission" exact="true"/>
                        </do_if>
                        <do_if value="not $HQZone">
                          <create_object macro="macro.env_deco_nav_beacon_t1_macro" name="$TempEffectObject" sector="$HereticsEndSector" owner="faction.civilian">
                            <position value="$HQPosition"/>
                          </create_object>
                          <disable_collision_response object="$TempEffectObject"/>
                        </do_if>
                        <do_if value="@$TempEffectObject.exists">
                          <set_value name="$HQZone" exact="$TempEffectObject.zone"/>
                          <set_value name="$EffectPos" exact="$TempEffectObject.position"/>
                        </do_if>
                        <do_else>
                          <set_value name="$HQZone" exact="player.zone"/>
                          <create_position name="$EffectPos" object="$HereticsEndSector" space="$HQZone" value="$HQPosition"/>
                          <create_object macro="macro.env_deco_nav_beacon_t1_macro" name="$TempEffectObject" sector="$HereticsEndSector" owner="faction.civilian">
                            <position value="$HQPosition"/>
                          </create_object>
                          <disable_collision_response object="$TempEffectObject"/>
                        </do_else>
                        <debug_text text="'HQ Zone will be: ' +  + ' ' + $HQZone.knownname + ' playing effect at ' + $EffectPos" chance="$DebugChance"/>
                        <create_mission name="{30201,600}" description="{30201,601}" rewardtext="{30201,602}" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}" faction="faction.civilian" difficulty="level.veryeasy" cue="$MissionCue_Temp" abortable="false" type="missiontype.plot" activate="false">
                          <briefing>
                            <objective step="1" action="objective.observe" object="$HereticsEndSector" offset="$HQPosition" text="{20109,4901}"/>
                          </briefing>
                        </create_mission>
                        <set_objective_from_briefing cue="$MissionCue_Temp" step="1"/>
                        <activate_mission cue="$MissionCue_Temp"/>
                        <!-- TODO: Make sure the effect is more noticeable from further away (secondary effect on player camera?) -->
                        <add_effect object="$HQZone" effect="'hq_warpin'">
                          <position value="$EffectPos"/>
                        </add_effect>
                      </actions>
                      <delay exact="12s"/>
                      <actions>
                        <do_if value="player.ship.exists">
                          <do_if value="player.ship.parent.isclass.zone                             and (player.ship.isclass.ship_s or player.ship.isclass.ship_m)                            and player.sector == $HereticsEndSector                            and player.ship.distanceto.{$HQZone} le 140km">
                            <add_object_velocity object="player.ship">
                              <linear x="-0.4m" y="0.2m" z="-2m"/>
                              <angular x="1.9m" y="-0.6m" z="-0.9m"/>
                            </add_object_velocity>
                          </do_if>
                          <do_elseif value="player.ship.parent.isclass.zone                             and (player.ship.isclass.ship_l)                            and player.sector == $HereticsEndSector                            and player.ship.distanceto.{$HQZone} le 140km">
                            <add_object_velocity object="player.ship">
                              <linear x="-0.15m" y="0.05m" z="-0.6m"/>
                              <angular x="0.5m" y="-0.2m" z="-0.3m"/>
                            </add_object_velocity>
                          </do_elseif>
                        </do_if>
                      </actions>
                      <delay exact="1s"/>
                      <actions>
                        <do_if value="player.ship.exists">
                          <do_if value="player.ship != player.occupiedship">
                            <set_value name="$ShipPilot" exact="player.ship.pilot"/>
                            <speak actor="$ShipPilot" line="4025" recipient="$ShipPilot"/>
                          </do_if>
                          <signal_cue_instantly cue="Phase_Boron_BringShipToHalt"/>
                        </do_if>
                      </actions>
                      <cues>
                        <cue name="Phase_Boron_BringShipToHalt">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <cues>
                            <cue name="Phase_Boron_ForceStopLibrary_Ref" ref="md.LIB_Generic.ForceShipHalt">
                              <param name="Ship" value="player.ship"/>
                              <param name="BreakingTime" value="4s"/>
                              <param name="RequiresPlayerowned" value="false"/>
                            </cue>
                          </cues>
                        </cue>
                        <cue name="Phase_Boron_HQ_In_Heretics_End_Spawn_v2">
                          <delay exact="$EffectLength"/>
                          <actions>
                            <!--TODO @Owen - make sure that an ownerless station is fine-->
                            <create_station name="$HQ" macro="macro.station_pla_headquarters_base_01_macro" sector="$HereticsEndSector" constructionplan="'x4ep1_playerheadquarters'" owner="faction.civilian" state="componentstate.operational">
                              <position value="$HQPosition"/>
                            </create_station>
                            <set_object_name object="$HQ" page="20102" line="5001" comment="'Unknown Station'"/>
                            <set_objective cue="$MissionCue_Temp" action="objective.observe" object="$HereticsEndSector" offset="$HQPosition" text="$HQ.knownname" silent="true"/>
                          </actions>
                          <cues>
                            <cue name="Phase_Boron_Add_Dock">
                              <conditions>
                                <event_cue_completed cue="Phase_Boron_HQ_In_Heretics_End_Spawn_v2"/>
                              </conditions>
                              <actions>
                                <create_construction_sequence macros="[macro.dockarea_arg_m_station_01_macro]" station="$HQ" base="$HQ.plannedconstruction.sequence" comment="async calculation"/>
                                <add_blueprints macros="macro.dockarea_arg_m_station_01_macro"/>
                              </actions>
                              <delay exact="5s"/>
                              <actions>
                                <do_if value="@$TempEffectObject.exists">
                                  <destroy_object object="$TempEffectObject"/>
                                </do_if>
                                <do_if value="not $HQ.defencenpc">
                                  <create_cue_actor name="$DefenceComputer" cue="this">
                                    <select tags="controlpost.defence.tag"/>
                                    <owner exact="faction.civilian"/>
                                  </create_cue_actor>
                                  <do_if value="$DefenceComputer">
                                    <assign_control_entity object="$HQ" actor="$DefenceComputer" post="controlpost.defence" transfer="true"/>
                                    <remove_cue_actor actor="$DefenceComputer" cue="this"/>
                                    <remove_value name="$DefenceComputer"/>
                                  </do_if>
                                </do_if>
                                <do_if value="not $HQ.engineer">
                                  <create_cue_actor name="$EngineerComputer" cue="this">
                                    <select tags="controlpost.engineer.tag"/>
                                    <owner exact="faction.civilian"/>
                                  </create_cue_actor>
                                  <do_if value="$EngineerComputer">
                                    <assign_control_entity object="$HQ" actor="$EngineerComputer" post="controlpost.engineer" transfer="true"/>
                                    <remove_cue_actor actor="$EngineerComputer" cue="this"/>
                                    <remove_value name="$EngineerComputer"/>
                                  </do_if>
                                </do_if>
                                <do_if value="not $HQ.paidbuildplot.exists">
                                  <set_value name="$Patch__BuildPlot" exact="$HQ.buildplot.max"/>
                                  <set_build_plot object="$HQ" paid="true" x="$Patch__BuildPlot.x" y="$Patch__BuildPlot.y" z="$Patch__BuildPlot.z"/>
                                  <remove_value name="$Patch__BuildPlot"/>
                                </do_if>
                                <!-- Temporarily turn HQ invulnerable -->
                                <run_actions ref="md.LIB_Generic.RequestObjectInvincibility">
                                  <param name="Object" value="$HQ"/>
                                  <param name="RequesterCue" value="namespace"/>
                                  <param name="DebugChance" value="$DebugChance"/>
                                </run_actions>
                                <unlock_achievement name="PLOT_2"/>
                                <set_value name="userdata.unlock_x4gamestart_trade" exact="1"/>
                                <set_value name="userdata.unlock_x4gamestart_scientist" exact="1"/>
                                <signal_cue cue="Phase_Boron_Boso_JumpedIntoHE_Introductions"/>
                              </actions>
                              <cues>
                                <cue name="Phase_Boron_Create_HQ_With_Boso_and_Dockarea">
                                  <conditions>
                                    <event_object_construction_sequence_created object="$HQ"/>
                                  </conditions>
                                  <actions>
                                    <debug_text text="player.age + ' ' + event.param"/>
                                    <do_if value="event.param">
                                      <apply_construction_sequence station="$HQ" sequence="event.param"/>
                                      <signal_cue cue="Manage_Boron_Tank_Room"/>
                                      <set_entity_traits entity="$Boron_Mentor" customhandler="true"/>
                                    </do_if>
                                  </actions>
                                </cue>
                                <cue name="Phase_Boron_Player_Docks_At_HQ_First_Time">
                                  <conditions>
                                    <check_any>
                                      <event_object_changed_object object="player.entity" newobject="$HQ"/>
                                      <check_all>
                                        <event_object_docked_at container="$HQ"/>
                                        <check_value value="global.$PlayerOccupiedShipGroup.indexof.{event.param}"/>
                                      </check_all>
                                    </check_any>
                                  </conditions>
                                  <actions>
                                    <!-- TODO: Investigate why it does not work properly -->
                                    <find_room name="$HQRooms" object="$HQ" multiple="true"/>
                                    <do_for_each in="$HQRooms" name="$HQRoom">
                                      <set_room_locked room="$HQRoom" locked="true"/>
                                    </do_for_each>
                                    <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[                                                                         $caller = this, $preset = '$plot', $actors = $MissionActors, $debugchance = 0,                                                                          $script = [                                                                                   2s,                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253023],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253024],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253025],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253026],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253027],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253028],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253029],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253030],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253031],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253032, $speakcallbackcue = Phase_Boron_Player_Transfers_Ownership],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253033],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253034],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253035],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253036],                                                                                   ],                                                                                   $abortcallbackcue = Phase_Boron_Player_Transfers_Ownership,                                                                       ]"/>
                                  </actions>
                                </cue>
                                <cue name="Phase_Boron_Player_Transfers_Ownership">
                                  <conditions>
                                    <event_cue_signalled/>
                                  </conditions>
                                  <actions>
                                    <do_for_each in="$HQRooms" name="$HQRoom">
                                      <set_room_locked room="$HQRoom" locked="false"/>
                                    </do_for_each>
                                    <!-- Turn HQ vulnerable again -->
                                    <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                                      <param name="Object" value="$HQ"/>
                                      <param name="RequesterCue" value="namespace"/>
                                      <param name="DebugChance" value="$DebugChance"/>
                                    </run_actions>
                                    <run_actions ref="md.LIB_Generic.TransferStationOwnership">
                                      <param name="Station" value="$HQ"/>
                                      <param name="Faction" value="faction.player"/>
                                    </run_actions>
                                    <include_actions ref="SetupHQ"/>
                                    <clear_object_name object="$HQ"/>
                                    <signal_cue cue="Manage_PlayerOffice_Room"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="Phase_Boron_Boso_JumpedIntoHE_Introductions">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <set_entity_traits entity="$Boron_Mentor" missionactor="true" customhandler="true" subtitlename="true"/>
                        <signal_cue_instantly cue="md.NPC_UseCases.UseCase" param="table[                                                                         $caller = this, $preset = '$plot', $actors = $MissionActors, $debugchance = 0,                                                                         $script = [                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253011],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253012],                                                                                   1s,                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253013],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253015],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253016],                                                                                   1s,                                                                                    table [$actor = '$Boron_Mentor', $speak = 30253017, $comment='I am Boso Ta. As far as I am aware, I am the only Boron this side of the network schism.'],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253021],                                                                                   table [$actor = '$Boron_Mentor', $speak = 30253022, $speakcallbackcue = Phase_Boron_TalkToBoso_Mission]                                                                                   ],                                                                                   $abortcallbackcue = Phase_Boron_TalkToBoso_Mission,                                                                       ]"/>
                      </actions>
                      <cues>
                        <cue name="Phase_Boron_TalkToBoso_Mission">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <actions>
                            <do_if value="$PreviousHasPlayerMission? and player.hasactivemission">
                              <remove_mission cue="$MissionCue_Temp" activate="previous"/>
                            </do_if>
                            <do_else>
                              <remove_mission cue="$MissionCue_Temp"/>
                            </do_else>
                            <write_incoming_message result="$BosoInvitation" title="{30201,20}" text="{30201,21}" source="{30201,2}" highpriority="true" read="false" object="$HQ" interaction="guidance"/>
                            <set_known object="$HQ" known="true"/>
                            <set_object_forced_radar_visible object="$HQ" visible="true"/>
                            <create_mission name="{30201,600}" description="{30201,601}" rewardtext="{30201,602}" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}" faction="faction.civilian" difficulty="level.veryeasy" cue="$MissionCue" abortable="false" type="missiontype.plot" activate="false">
                              <briefing>
                                <objective step="1" action="objective.talkto" object="$Boron_Mentor"/>
                              </briefing>
                            </create_mission>
                            <set_objective_from_briefing cue="$MissionCue" step="1"/>
                            <do_if value="not player.hasactivemission">
                              <activate_mission cue="$MissionCue"/>
                            </do_if>
                          </actions>
                          <cues>
                            <cue name="Phase_Boron_BosoIntroduced">
                              <conditions>
                                <event_conversation_started actor="$Boron_Mentor"/>
                              </conditions>
                              <delay exact="1s"/>
                              <actions>
                                <remove_mission cue="$MissionCue" type="completed"/>
                              </actions>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="First_Meeting" version="2">
          <conditions>
            <event_conversation_started actor="$Boron_Mentor"/>
            <check_value value="$HQ? and not @$BoronMet and $Boron_Mentor.hascontext.{$HQ} and player.entity.hascontext.{$HQ} and not @$SuppressFirstMeeting"/>
          </conditions>
          <actions>
            <set_value name="$BoronMet" exact="true"/>
            <cancel_cue cue="Boron_Arrives"/>
            <allow_conversation_escape enabled="false"/>
            <do_if value="@$SplitStation.exists">
              <run_actions ref="md.LIB_Generic.RequestObjectVulnerability">
                <param name="Object" value="$SplitStation"/>
                <param name="RequesterCue" value="Phase_Escape"/>
                <param name="DebugChance" value="$DebugChance"/>
              </run_actions>
            </do_if>
            <!--
            Boron (30201145): "This installation is equipped for habitation of all races and this room seems to be some sort of research area."
            Boron (30201146): "I expect I could spend years pouring over the data contained in these systems."
            Player (3020105): "Is there anything I can help with?"-->
            <add_npc_line speaker="$Boron_Mentor" hidechoices="true" line="30201145"/>
            <add_npc_line speaker="$Boron_Mentor" hidechoices="true" line="30201146" delay="0.2s"/>
            <add_player_choice text="{1002,3020105}" section="can_i_help"/>
            <signal_cue_instantly cue="Add_Player_Office_Trophy" param="tag.trophy_story_mentor_boso"/>
          </actions>
          <patch sinceversion="2" state="complete">
            <cancel_cue cue="Boron_Arrives"/>
          </patch>
          <cues>
            <cue name="First_Meeting_Next_1">
              <conditions>
                <event_conversation_next_section actor="$Boron_Mentor" section="can_i_help"/>
              </conditions>
              <actions>
                <!--TODO @Owen - case if HQ does not have a manager
                
                <update_mission cue="$MissionCue" name="{30201,250}(Scientific Freedom)" description="{30201,251} + '\n' + {30201,252}">
                  <briefing replace="true">
                    <objective step="1" action="objective.dockat" object="$HQ"/>
                  </briefing>
                </update_mission>-->
                <!--
                If HQ has manager:
                Boron (30201149): "Yes, I already have made some progress."
                Boron (30201150): "There appears to be several things we can research at this facility."
                Boron (30201151): "Please take a look."-->
                <add_npc_line speaker="$Boron_Mentor" hidechoices="true" line="30201149"/>
                <add_npc_line speaker="$Boron_Mentor" hidechoices="true" line="30201150"/>
                <add_npc_line speaker="$Boron_Mentor" hidechoices="true" line="30201151"/>
                <signal_cue cue="UnlockResearch"/>
                <clear_object_name object="$HQ"/>
                <do_if value="not $MissionCue.hasmission">
                  <create_mission cue="$MissionCue" name="{30201,250}" description="{30201,251} + '\n' + {30201,253}" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false"/>
                </do_if>
                <update_mission cue="$MissionCue" name="{30201,250}" description="{30201,251} + '\n' + {30201,253}" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}">
                  <briefing replace="true">
                    <objective step="1" action="objective.custom" customaction="{1001,7825}" comment="Access Research Menu"/>
                  </briefing>
                </update_mission>
                <set_objective cue="$MissionCue" action="objective.custom" step="1" customaction="{1001,7825}" comment="Access Research Menu"/>
              </actions>
            </cue>
            <cue name="Research_Opened">
              <conditions>
                <event_ui_triggered screen="'ResearchMenu'"/>
              </conditions>
            </cue>
            <cue name="Start_Research_Phase" checkinterval="1s">
              <conditions>
                <check_value value="Research_Opened.state != cuestate.waiting"/>
              </conditions>
              <actions>
                <signal_cue cue="Phase_Research"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <cue name="Boron_Default_Comm" instantiate="true">
          <conditions>
            <event_conversation_started actor="$Boron_Mentor"/>
            <check_value value="@$BoronMet and not @$SuppressBosoConversation"/>
          </conditions>
          <actions>
            <add_npc_line speaker="$Boron_Mentor" line="2001"/>
          </actions>
          <cues>
            <cue name="Boron_Default_Comm_Finished">
              <conditions>
                <event_conversation_finished actor="$Boron_Mentor"/>
              </conditions>
              <actions>
                <set_value name="$NextBosoChatTime" min="player.age + 40s" max="player.age + 60s"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <cue name="Player_Entered_Lab" instantiate="true">
          <conditions>
            <event_object_changed_room object="player.entity" room="$MentorRoom"/>
          </conditions>
          <actions>
            <do_if value="@$NextBosoChatTime">
              <set_value name="$NextBosoChatTime" operation="add" min="30s" max="50s"/>
            </do_if>
          </actions>
        </cue>
        <cue name="Boso_Room_Chatter" checkinterval="5s">
          <conditions>
            <check_value value="@$BoronMet and @$NextBosoChatTime gt 0 and player.age gt $NextBosoChatTime"/>
            <check_value value="player.age ge (md.$LastMentorSpeak + 10min)" comment="don't start distracting small talk after big story things"/>
          </conditions>
          <actions>
            <do_if value="player.room != $MentorRoom or @$SuppressBosoConversation or player.isinconversation">
              <set_value name="$NextBosoChatTime" min="player.age + 30s" max="player.age + 50s"/>
            </do_if>
            <do_else>
              <do_any>
                <set_value name="this.$SelectedLines" exact="[30201501,30201502,30201503]" weight="if @$PreviousBosoConvLines.indexof.{30201501} then 0 else 100"/>
                <set_value name="this.$SelectedLines" exact="[30201511,30201512,30201513]" weight="if (@$PreviousBosoConvLines.indexof.{30201511}                                                                                                       or (md.Story_Diplomacy_Intro.Pt1_Create_Offer.state != cuestate.waiting                                                                                                       and md.Story_Diplomacy_Intro.Pt1_Offer_Accepted.state != cuestate.waiting)) then 0 else 100"/>
                <set_value name="this.$SelectedLines" exact="[30201521,30201522,30201523]" weight="if @$PreviousBosoConvLines.indexof.{30201521} then 0 else 100"/>
                <set_value name="this.$SelectedLines" exact="[30201531,30201532,30201533]" weight="if @$PreviousBosoConvLines.indexof.{30201531} then 0 else 100"/>
                <set_value name="this.$SelectedLines" exact="[30201541,30201542]" weight="if @$PreviousBosoConvLines.indexof.{30201541} then 0 else 100"/>
                <set_value name="this.$SelectedLines" exact="[30201551]" weight="if @$PreviousBosoConvLines.indexof.{30201551} then 0 else 100"/>
                <set_value name="this.$SelectedLines" exact="[30201561,30201562,30201563]" weight="if @$PreviousBosoConvLines.indexof.{30201561} then 0 else 100"/>
                <set_value name="this.$SelectedLines" exact="[30201571,30201572,30201573]" weight="if @$PreviousBosoConvLines.indexof.{30201571} then 0 else 100"/>
                <set_value name="this.$SelectedLines" exact="[30201581,30201582]" weight="if @$PreviousBosoConvLines.indexof.{30201581} then 0 else 100"/>
              </do_any>
              <speak actor="$Boron_Mentor" line="this.$SelectedLines" priority="80"/>
              <do_if value="not $PreviousBosoConvLines?">
                <set_value name="$PreviousBosoConvLines" exact="[]"/>
              </do_if>
              <append_to_list name="$PreviousBosoConvLines" exact="this.$SelectedLines.{1}"/>
              <do_if value="$PreviousBosoConvLines.count gt 5">
                <remove_value name="$PreviousBosoConvLines.{1}"/>
              </do_if>
              <set_value name="$NextBosoChatTime" min="player.age + 3min" max="player.age + 5min"/>
            </do_else>
            <reset_cue cue="this"/>
          </actions>
        </cue>
        <!--
                                       
        If HQ has no manager yet:
        Boron (30201147): "I believe we will need help to run this station effectivly. You could look to employ a manager."
                                    
          On hiring manager:
          Boron (30201148): "Come see me when you have a moment. I have made some progress."
                                    
        Open research menu
        - Teleportation
        - Storage Module
        - Production Module
        - Dock Module
        - Engine Mods MK1
        - Chassis Mods MK1
        - Shield Mods MK1
        - Weapon Mods MK1
                                    
                
        -->
        <cue name="SHORTCUT_Research">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <signal_cue cue="Debug_Create_HQ_With_Boso"/>
            <signal_cue cue="Mentor_Speak_Helper"/>
            <signal_cue cue="Manage_Boron_Tank_Room"/>
          </actions>
          <cues>
            <cue name="SHORTCUT_Research_Delay">
              <delay exact="2s"/>
              <actions>
                <signal_cue cue="Phase_Research"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <cue name="Phase_Research" version="2">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <include_actions ref="ActivatePhase"/>
            <set_value name="md.Signal_Leaks.Manager.$SuppressSignalLeakGeneration" exact="false"/>
            <do_if value="not $MissionCue.hasmission">
              <create_mission cue="$MissionCue" name="{30201,250}" description="{30201,251} + '\n' + {30201,252}" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false"/>
            </do_if>
            <update_mission cue="$MissionCue" name="{30201,250}" description="{30201,251} + '\n' + {30201,252}" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}">
              <briefing replace="true">
                <objective step="1" action="objective.research" text="{30201,255}" object="$HQ"/>
              </briefing>
            </update_mission>
            <set_objective cue="$MissionCue" action="objective.research" text="{30201,255}" object="$HQ"/>
          </actions>
          <patch sinceversion="2" state="complete">
            <set_value name="$PatchedUnlocks" exact="[]"/>
            <do_if value="ware.research_mod_weapon_mk1.research.unlocked">
              <append_to_list name="$PatchedUnlocks" exact="ware.mod_weapon_surfaceelement_01_mk1"/>
            </do_if>
            <do_if value="ware.research_mod_weapon_mk2.research.unlocked">
              <append_to_list name="$PatchedUnlocks" exact="ware.mod_weapon_surfaceelement_01_mk2"/>
            </do_if>
            <do_if value="ware.research_mod_weapon_mk3.research.unlocked">
              <append_to_list name="$PatchedUnlocks" exact="ware.mod_weapon_surfaceelement_01_mk3"/>
            </do_if>
            <do_for_each name="$PatchedUnlock" in="$PatchedUnlocks">
              <add_encyclopedia_entry item="$PatchedUnlock.id" type="equipmentmods"/>
              <add_blueprints wares="$PatchedUnlock"/>
              <debug_text text="'Patching missing unlocked weapon mod for ' + $PatchedUnlock" filter="savegame"/>
            </do_for_each>
            <remove_value name="$PatchedUnlocks"/>
          </patch>
          <cues>
            <cue name="Phase_Research_Intro">
              <delay exact="2s"/>
              <actions>
                <!--
                Boron (30201152): "As you can see, there is much to do."               
                Boron (30201153): "I personally find mention of this 'Teleportation' irresistible but I leave it to you to decide what we research first."
                Boron (30201154): "Please note that these research items have certain requirements."-->
                <set_value name="Mentor_Speak_Helper.$Lines" exact="[30201152, 30201153, 30201154]"/>
                <signal_cue cue="Mentor_Speak_Helper"/>
              </actions>
            </cue>
            <cue name="Phase_Research_Keep_Alive">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <!--Cue to keep this branch alive for future cues-->
            </cue>
            <!--UI Event
                {1} 'ResearchMenu'
                {2} 'research_module_dock'
                {3} null-->
            <!--Module Venture
                Selected #1 (30201186): "This seems to be the primary focus of this facility; research into parallel universes. This confirms my theory that we have pulled this object from a universe similar to our own."
                Selected #2 (30201187): "I believe this will enable us to send objects to other universes."
                Started: <Research started (Special)>
                Finished #1 (30201188): "I am finally done with the research! You should now be able to construct a module capable of sending objects to other universes."
                Finished #2 (30201189): "This is an astounding development."-->
            <!--
                Parallel missions:
                Boron (30201190): "I see you have made quite the discovery."
                Boron (30201191): "I am always in the search of knowledge."
                Boron (30201192): "I have added a secondary task to your mission interface."
                Boron (30201193): "Quite the achievement. Well done."
                                    
                Boron (30201194): "I must say, I'm glad that we met. I have had so much fun working alongside you."
                Boron (30201195): "You will find that new research items available."
                                    
                Potential Split conclusion lines (Split #1 may have been killed)
                Split #2 (30201004): "We have found you Boron scum!"
                Boron (30201196): "Oh, it appears the my former captors have found us."
                Boron (30201197): "Do you mind taking care of this? I'm afraid that I'm of little use in this situation."
                Boron (30201198): "I will at least activate our defences."
                Split #2 (30201005): "We will take this station as our own!"
                Boron (30201199): "You will do no such thing!"
                                    
                Split #2 (30201006): "You will pay for what you did to my brother!"
                                    
                End
                Boron (30201200): "Well. I don't expect they'll be bothering us again."
                Boron (30201201): "Well. That was anticlimactic. I'll get back to work."-->
            <!--
                Boron (30201202): "Please deliver 75,000 microchips for my research."
                Boron (30201203): "That is a joke."-->
            <!--
              TODO @Owen
              30201049: "It has been a great many years since I've had such a feeling of freedom. While the Split moved me to several locations as a part of my work, nothing quite beats going on a scientific expedition."
              -->
          </cues>
        </cue>
        <cue name="Research_Entry_Selected" instantiate="true">
          <conditions>
            <event_ui_triggered screen="'ResearchMenu'"/>
            <check_value value="event.param2 == 'research_selected' and player.age ge @$LastResearchSpeak + 2s and (not $LastResearchCancellation? or player.age gt $LastResearchCancellation + 1s) and not ware.{event.param3}.research.unlocked and $HQ.research.count == 0"/>
          </conditions>
          <actions>
            <set_value name="$ResearchWare" exact="ware.{event.param3}"/>
            <debug_text text="$ResearchWare"/>
            <set_value name="$ResearchLineDelay" exact="30s"/>
            <do_if value="not $ResearchLineTable?">
              <set_value name="$ResearchLineTable" exact="table[]"/>
            </do_if>
            <!--*General research lines*
                Research selected but resources needed
                Boron (30201160): "If you could, please gather the required materials."
                Boron (30201161): "I will need some materials to get started."
                                    
                Research selected but other type of requirements needed
                Boron (30201162): "There are certain requirements for me to start that research."
                Boron (30201163): "This research requires certain things to be fulfilled first."   -->
            <do_if value="$ResearchWare == ware.research_mod_ship_mk1">
              <!--If we wish to improve the fundamental capabilities of a ship, we must be able to tear it apart and put it together again.-->
              <set_value name="$Line" exact="30222035"/>
              <do_if value="$ResearchLineTable.keys.count == 0 or player.age ge @$ResearchLineTable.{$Line} + $ResearchLineDelay">
                <!--$Line + followup line-->
                <speak actor="$Boron_Mentor" line="[$Line, 30222036]" priority="85" recipient="player.entity"/>
                <set_value name="$ResearchLineTable.{$Line}" exact="player.age"/>
                <set_value name="$LastResearchSpeak" exact="player.age"/>
              </do_if>
            </do_if>
            <do_elseif value="$ResearchWare == ware.research_mod_engine_mk1">
              <!--To help us develop effective engine modifications, we must be sure to have the best in antimatter sensor technology.-->
              <set_value name="$Line" exact="30222000"/>
              <do_if value="$ResearchLineTable.keys.count == 0 or player.age ge @$ResearchLineTable.{$Line} + $ResearchLineDelay">
                <speak actor="$Boron_Mentor" line="[$Line, 30222001]" priority="85" recipient="player.entity"/>
                <set_value name="$ResearchLineTable.{$Line}" exact="player.age"/>
                <set_value name="$LastResearchSpeak" exact="player.age"/>
              </do_if>
            </do_elseif>
            <do_elseif value="$ResearchWare == ware.research_mod_shield_mk1">
              <!--To best develop shield technologies, you must first understand warfare.-->
              <set_value name="$Line" exact="30222025"/>
              <do_if value="$ResearchLineTable.keys.count == 0 or player.age ge @$ResearchLineTable.{$Line} + $ResearchLineDelay">
                <!--$Line + followup line-->
                <speak actor="$Boron_Mentor" line="[$Line, 30222026]" priority="85" recipient="player.entity"/>
                <set_value name="$ResearchLineTable.{$Line}" exact="player.age"/>
                <set_value name="$LastResearchSpeak" exact="player.age"/>
              </do_if>
            </do_elseif>
            <do_elseif value="$ResearchWare == ware.research_mod_weapon_mk1">
              <!--I suggest we acquire a number of particle regulators so I can better test weapon components in a controlled environment.-->
              <set_value name="$Line" exact="30222049"/>
              <do_if value="$ResearchLineTable.keys.count == 0 or player.age ge @$ResearchLineTable.{$Line} + $ResearchLineDelay">
                <!--$Line + followup line-->
                <speak actor="$Boron_Mentor" line="$Line" priority="85" recipient="player.entity"/>
                <set_value name="$ResearchLineTable.{$Line}" exact="player.age"/>
                <set_value name="$LastResearchSpeak" exact="player.age"/>
              </do_if>
            </do_elseif>
            <!--MK2 equipment mods
            Boron (30201166): "This will allow you to construct much improved equipment modifications."-->
            <do_elseif value="                     $ResearchWare == ware.research_mod_engine_mk2 or                     $ResearchWare == ware.research_mod_shield_mk2 or                     $ResearchWare == ware.research_mod_weapon_mk2 or                     $ResearchWare == ware.research_mod_ship_mk2">
              <set_value name="$Line" exact="30201166"/>
              <do_if value="$ResearchLineTable.keys.count == 0 or player.age ge @$ResearchLineTable.{$Line} + $ResearchLineDelay">
                <speak actor="$Boron_Mentor" line="$Line" priority="85" recipient="player.entity"/>
                <set_value name="$ResearchLineTable.{$Line}" exact="player.age"/>
                <set_value name="$LastResearchSpeak" exact="player.age"/>
              </do_if>
            </do_elseif>
            <!--MK3 equipment mods
            Boron (30201167): "This will allow you to construct superior equipment modifications."-->
            <do_elseif value="                     $ResearchWare == ware.research_mod_engine_mk3 or                     $ResearchWare == ware.research_mod_shield_mk3 or                     $ResearchWare == ware.research_mod_weapon_mk3 or                     $ResearchWare == ware.research_mod_ship_mk3">
              <set_value name="$Line" exact="30201167"/>
              <do_if value="$ResearchLineTable.keys.count == 0 or player.age ge @$ResearchLineTable.{$Line} + $ResearchLineDelay">
                <speak actor="$Boron_Mentor" line="$Line" priority="85" recipient="player.entity"/>
                <set_value name="$ResearchLineTable.{$Line}" exact="player.age"/>
                <set_value name="$LastResearchSpeak" exact="player.age"/>
              </do_if>
            </do_elseif>
            <!--Blueprint hack mods
            Boron (30201164): "This will allow you to gain blueprints by scanning leaks on certain modules."-->
            <do_elseif value="                     $ResearchWare == ware.research_module_defence or                     $ResearchWare == ware.research_module_habitation or                     $ResearchWare == ware.research_module_production or                     $ResearchWare == ware.research_module_storage or                     $ResearchWare == ware.research_module_dock or                     $ResearchWare == ware.research_module_build">
              <set_value name="$Line" exact="30201164"/>
              <do_if value="$ResearchLineTable.keys.count == 0 or player.age ge @$ResearchLineTable.{$Line} + $ResearchLineDelay">
                <speak actor="$Boron_Mentor" line="$Line" priority="85" recipient="player.entity"/>
                <set_value name="$ResearchLineTable.{$Line}" exact="player.age"/>
                <set_value name="$LastResearchSpeak" exact="player.age"/>
              </do_if>
            </do_elseif>
            <!--Teleportation Base
            Boron (30201180): "It appears some Terran technology was being used to research teleportation over long distances."-->
            <do_elseif value="$ResearchWare == ware.research_teleportation">
              <set_value name="$Line" exact="30201180"/>
              <do_if value="$ResearchLineTable.keys.count == 0 or player.age ge @$ResearchLineTable.{$Line} + $ResearchLineDelay">
                <speak actor="$Boron_Mentor" line="$Line" priority="85" recipient="player.entity"/>
                <set_value name="$ResearchLineTable.{$Line}" exact="player.age"/>
                <set_value name="$LastResearchSpeak" exact="player.age"/>
              </do_if>
            </do_elseif>
            <!--Teleportation Range-->
            <do_elseif value="                        $ResearchWare == ware.research_teleportation_range_01 or                        $ResearchWare == ware.research_teleportation_range_02 or                        $ResearchWare == ware.research_teleportation_range_03">
              <!--Nothing-->
            </do_elseif>
            <do_else>
              <signal_objects object="player.entity" param="'research_selected_no_speak'" param2="$ResearchWare"/>
            </do_else>
          </actions>
        </cue>
        <cue name="Research_Started" instantiate="true">
          <conditions>
            <event_player_production_started research="true"/>
          </conditions>
          <actions>
            <debug_text text="event.param + ' - ' + event.param2 + ' - ' + event.param3"/>
            <do_if value="Start.$MissionCue.hasmission">
              <!--This should only be the case if the objective is Research: Any Tech. Change if otherwise-->
              <remove_mission cue="Start.$MissionCue" type="completed"/>
            </do_if>
            <do_if value="event.param.iswaitingforresources">
              <do_if value="$ExcludeResearchStartedCommentList.indexof.{event.param2} != 0">
                <!--Nothing. Taken care of in their specific missions-->
              </do_if>
              <do_else>
                <!--
                If you could, please gather the required materials.
                I will need some materials to get started.-->
                <speak actor="$Boron_Mentor" line="[30201160,30201161].random" priority="90" recipient="player.entity"/>
                <assert value="RM_DeliverResources.state == cuestate.waiting" text="'Started research for ' + event.param2 + ' but cue to handle the resource mission is of state ' + RM_DeliverResources.state + ' [Owen]'"/>
                <signal_cue_instantly cue="RM_DeliverResources" param="event.param2"/>
              </do_else>
            </do_if>
            <do_else comment="patchmarker">
              <do_if value="                 event.param2 == ware.research_teleportation or                 event.param2 == ware.research_teleportation_range_01 or                 event.param2 == ware.research_teleportation_range_02 or                 event.param2 == ware.research_teleportation_range_03">
                <!--Research started (Special)
                Boron (30201170): "I look forward to seeing how this turns out."
                Boron (30201171): "I expect this will be revolutionary!"  -->
                <speak actor="$Boron_Mentor" line="[30201170,30201171].random" priority="90" recipient="player.entity"/>
              </do_if>
              <do_elseif value="$ExcludeResearchStartedCommentList.indexof.{event.param2} != 0">
                <!--Nothing. Taken care of in their specific missions-->
              </do_elseif>
              <do_elseif value="event.param2 == ware.research_erlking_core">
                <speak actor="$Boron_Mentor" line="30222228" priority="90" recipient="player.entity"/>
              </do_elseif>
              <do_else>
                <!--Research started (General)
                Boron (30201168): "Good choice. I will begin right away."
                Boron (30201169): "Very good. I will let you know when I am done."-->
                <speak actor="$Boron_Mentor" line="[30201168,30201169].random" priority="90" recipient="player.entity"/>
              </do_else>
            </do_else>
          </actions>
        </cue>
        <cue name="Research_Cancelled" instantiate="true">
          <conditions>
            <event_player_production_cancelled research="true"/>
          </conditions>
          <actions>
            <debug_text text="event.param + ' ' + event.param2 + ' ' + event.param3"/>
            <set_value name="$LastResearchCancellation" exact="player.age"/>
          </actions>
        </cue>
        <cue name="Research_Completed" instantiate="true">
          <conditions>
            <event_player_production_finished research="true"/>
          </conditions>
          <actions>
            <debug_text text="event.param + ' - ' + event.param2 + ' - ' + event.param3"/>
            <!--Note: Removing this mission is now also done when research starts. This is kept here for compatibility-->
            <do_if value="Start.$MissionCue.hasmission">
              <!--This should only be the case if the objective is Research: Any Tech. Change if otherwise-->
              <remove_mission cue="Start.$MissionCue" type="completed"/>
            </do_if>
            <!--Research finished (general)
                Boron (30201172): "I have concluded the research."
                Boron (30201173): "I have come to the end of my research."
                                    
                Research finished (special)
                Boron (30201174): "I have concluded my research and the results are astounding."
                Boron (30201175): "The results of my research are far beyond my expectations."-->
            <do_if value="event.param2 == ware.research_mod_engine_mk1">
              <!--"I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_if>
            <do_elseif value="event.param2 == ware.research_mod_engine_mk2">
              <!--"I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_engine_mk3">
              <!--"I have concluded my research and the results are astounding." / "The results of my research are far beyond my expectations."-->
              <speak actor="$Boron_Mentor" line="[30201174, 30201175].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_shield_mk1">
              <!--"I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_shield_mk2">
              <!--"I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_shield_mk3">
              <!--"I have concluded my research and the results are astounding." / "The results of my research are far beyond my expectations."-->
              <speak actor="$Boron_Mentor" line="[30201174, 30201175].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_weapon_mk1">
              <!--"I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_weapon_mk2">
              <!--"I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_weapon_mk3">
              <!--"I have concluded my research and the results are astounding." / "The results of my research are far beyond my expectations."-->
              <speak actor="$Boron_Mentor" line="[30201174, 30201175].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_ship_mk1">
              <!--"I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_ship_mk2">
              <!--"I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_mod_ship_mk3">
              <!--"I have concluded my research and the results are astounding." / "The results of my research are far beyond my expectations."-->
              <speak actor="$Boron_Mentor" line="[30201174, 30201175].random" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="event.param2 == ware.research_teleportation">
              <do_if value="not md.X4Ep1_Mentor_Subscriptions.Start.$ResearchTeleportIgnoreSpeak?" comment="ToA-DLC Ch7 Twins might set this and will then react with custom lines/actions">
                <!--Finished #1 (30201181): "I have finished the teleportation research."
                  Finished #2 (30201182): "I am yet to test it on a lifeform. Given that I am monitoring your lifesigns anyway, perhaps you could do the honours."-->
                <debug_text text="'Original Teleportation voicelines'"/>
                <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201181, 0s], [30201182, 0.6s]]"/>
                <signal_cue cue="Mentor_Speak_Helper"/>
              </do_if>
              <do_else>
                <debug_text text="'Ignoring default teleportation-research handling'"/>
              </do_else>
            </do_elseif>
            <do_elseif value="                        event.param2 == ware.research_teleportation_range_01 or                        event.param2 == ware.research_teleportation_range_02 or                        event.param2 == ware.research_teleportation_range_03">
              <!--Teleportation Range 1
              Finished #1 (30201184) "You should find the teleporter now has a much larger range."-->
              <speak actor="$Boron_Mentor" line="30201184" priority="100" recipient="player.entity"/>
            </do_elseif>
            <do_elseif value="                        event.param2 == ware.research_module_defence or                        event.param2 == ware.research_module_habitation or                        event.param2 == ware.research_module_production or                        event.param2 == ware.research_module_storage or                        event.param2 == ware.research_module_dock or                        event.param2 == ware.research_module_build">
              <!--Modules
              "I have concluded the research." / "I have come to the end of my research."-->
              <speak actor="$Boron_Mentor" line="[30201172, 30201173].random" priority="100" recipient="player.entity"/>
            </do_elseif>
          </actions>
        </cue>
        <cue name="Research_Added" instantiate="true">
          <conditions>
            <event_player_research_unlocked/>
          </conditions>
          <actions>
            <do_if value="$ResearchUserDataTable.{event.param}? and not userdatasigned.{$ResearchUserDataTable.{event.param}}?">
              <set_userdata storystate="$ResearchUserDataTable.{event.param}" value="1"/>
              <debug_text text="'Setting userdata ' + $ResearchUserDataTable.{event.param} + ' to ' + userdatasigned.{$ResearchUserDataTable.{event.param}}" chance="$DebugChance"/>
            </do_if>
          </actions>
        </cue>
        <cue name="Datavaults">
          <actions>
            <set_value name="$MissionCue_Datavaults" exact="this"/>
          </actions>
          <cues>
            <cue name="Datavaults_Start">
              <conditions>
                <event_object_signalled object="player.entity" param="'datavault_unlocked'"/>
                <check_value value="$CurrentPhase != Phase_SignalLeak"/>
              </conditions>
              <actions>
                <do_if value="md.PlacedObjects.Place_DataVaults.$UnlockedVaultsGroup.count ge md.PlacedObjects.Place_DataVaults.$VaultsGroup.count">
                  <!--This was the final datavault-->
                  <signal_cue cue="Datavaults_End"/>
                </do_if>
              </actions>
              <cues>
                <cue name="Datavaults_Start_Speak" onfail="cancel">
                  <conditions>
                    <check_value value="Datavaults_End.state == cuestate.waiting"/>
                  </conditions>
                  <delay exact="5s"/>
                  <actions>
                    <!--Parallel missions:
                    Boron (30201190): "I see you have made quite the discovery."
                    Boron (30201191): "I am always in the search of knowledge."
                    Boron (30201192): "I have added a secondary task to your mission interface."-->
                    <set_value name="Mentor_Speak_Helper.$Lines" exact="[[30201190, 0s], [30201191, 0.3s], [30201192, 0.5s]]"/>
                    <signal_cue cue="Mentor_Speak_Helper"/>
                  </actions>
                </cue>
                <cue name="Datavaults_Create_Mission">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor" line="30201192"/>
                  </conditions>
                  <actions>
                    <create_mission cue="$MissionCue_Datavaults" name="{30201,400}" description="{30201,401}" type="missiontype.plot" faction="faction.civilian" difficulty="level.hard" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}">
                      <briefing>
                        <objective step="1" action="objective.unlock" text="{20109,8901} + ' ' + md.PlacedObjects.Place_DataVaults.$UnlockedVaultsGroup.count + ' / ' + md.PlacedObjects.Place_DataVaults.$VaultsGroup.count"/>
                      </briefing>
                    </create_mission>
                    <set_objective cue="$MissionCue_Datavaults" action="objective.unlock" text="{20109,8901}">
                      <progress text="{20109,8901}" progress="md.PlacedObjects.Place_DataVaults.$UnlockedVaultsGroup.count" max="md.PlacedObjects.Place_DataVaults.$VaultsGroup.count"/>
                    </set_objective>
                  </actions>
                </cue>
                <cue name="Datavaults_Unlock" instantiate="true">
                  <conditions>
                    <event_object_signalled object="player.entity" param="'datavault_unlocked'"/>
                  </conditions>
                  <actions>
                    <do_if value="md.PlacedObjects.Place_DataVaults.$UnlockedVaultsGroup.count ge md.PlacedObjects.Place_DataVaults.$VaultsGroup.count">
                      <!--This was the final datavault-->
                      <signal_cue cue="Datavaults_End"/>
                    </do_if>
                    <do_else>
                      <!--Good work-->
                      <speak actor="$Boron_Mentor" line="30201141" priority="50" chance="20"/>
                      <update_mission cue="$MissionCue_Datavaults">
                        <briefing>
                          <objective step="1" action="objective.unlock" text="{20109,8901} + ' ' + md.PlacedObjects.Place_DataVaults.$UnlockedVaultsGroup.count + ' / ' + md.PlacedObjects.Place_DataVaults.$VaultsGroup.count"/>
                        </briefing>
                      </update_mission>
                      <set_objective cue="$MissionCue_Datavaults" action="objective.unlock" text="{20109,8901}">
                        <progress text="{20109,8901}" progress="md.PlacedObjects.Place_DataVaults.$UnlockedVaultsGroup.count" max="md.PlacedObjects.Place_DataVaults.$VaultsGroup.count"/>
                      </set_objective>
                    </do_else>
                  </actions>
                </cue>
                <cue name="Datavaults_End">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <!--
                    Boron (30201193): "Quite the achievement. Well done."-->
                    <speak actor="$Boron_Mentor" line="30201193" priority="100"/>
                    <set_value name="$All_Datavaults_Unlocked" exact="true"/>
                    <remove_mission cue="$MissionCue_Datavaults"/>
                  </actions>
                </cue>
                <cue name="Datavaults_KeepAlive">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <!--
        *****************
        RESEARCH MISSIONS
        *****************-->
        <!--event.param = research ware-->
        <cue name="RM_DeliverResources" namespace="this" version="2">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$MissionCue" exact="namespace"/>
            <set_value name="$ResearchWare" exact="event.param"/>
            <set_value name="$HQ" exact="namespace.parent.$HQ"/>
            <set_value name="$DebugChance" exact="100"/>
            <set_value name="$Resources" exact="$ResearchWare.research.resources.table"/>
            <set_value name="$WareStorageAmounts" exact="table[                        {waretransport.container}  = 0,                        {waretransport.solid}      = 0,                        {waretransport.liquid}     = 0]"/>
            <debug_text text="$ResearchWare + ' needs:'" chance="$DebugChance"/>
            <do_for_each name="$Ware" valuename="$Amount" in="$Resources">
              <debug_text text="$Amount + ' of ' + $Ware" chance="$DebugChance"/>
              <do_if value="$WareStorageAmounts.{$Ware.waretransport}?">
                <set_value name="$WareStorageAmounts.{$Ware.waretransport}" operation="add" exact="$Ware.volume * $Amount"/>
              </do_if>
            </do_for_each>
            <debug_text text="'Needed storage: ' + $WareStorageAmounts" chance="$DebugChance"/>
            <set_value name="$StorageTypes" exact="[]"/>
            <set_value name="$ExpansionNeeded" exact="false"/>
            <do_for_each name="$WareTransport" valuename="$TotalVolume" in="$WareStorageAmounts">
              <!--TODO @Owen $container.cargo.capacity.{$waretransport}-->
              <do_if value="$WareTransport == waretransport.container">
                <do_if value="$HQ.cargo.capacity.container lt $TotalVolume">
                  <set_value name="$ExpansionNeeded" exact="true"/>
                  <break/>
                </do_if>
              </do_if>
              <do_elseif value="$WareTransport == waretransport.liquid">
                <do_if value="$HQ.cargo.capacity.liquid lt $TotalVolume">
                  <set_value name="$ExpansionNeeded" exact="true"/>
                  <break/>
                </do_if>
              </do_elseif>
              <do_elseif value="$WareTransport == waretransport.solid">
                <do_if value="$HQ.cargo.capacity.solid lt $TotalVolume">
                  <set_value name="$ExpansionNeeded" exact="true"/>
                  <break/>
                </do_if>
              </do_elseif>
            </do_for_each>
            <do_if value="$ExpansionNeeded">
              <!--Convert the needed storage into station specs for the RML-->
              <set_value name="$Description" exact="$ResearchWare.description + '\n\n' + {1001,1605} + '.'"/>
              <set_value name="$StationSpecs" exact="table[]"/>
              <do_if value="$WareStorageAmounts.{waretransport.container}">
                <set_value name="$StationSpecs.$containerstorage" exact="$WareStorageAmounts.{waretransport.container}"/>
                <set_value name="$Description" operation="add" exact="'\n' + {30004,2004} + ' ' + $WareStorageAmounts.{waretransport.container}"/>
                <append_to_list name="$StorageTypes" exact="waretransport.container"/>
              </do_if>
              <do_if value="$WareStorageAmounts.{waretransport.solid}">
                <set_value name="$StationSpecs.$solidstorage" exact="$WareStorageAmounts.{waretransport.solid}"/>
                <set_value name="$Description" operation="add" exact="'\n' + {30004,2003} + ' ' + $WareStorageAmounts.{waretransport.solid}"/>
                <append_to_list name="$StorageTypes" exact="waretransport.solid"/>
              </do_if>
              <!--TODO @Owen Use waretransport type for the RML parameters-->
              <create_mission cue="$MissionCue" name="$ResearchWare.name + ' (' + {1001,6505} + ')'" description="$Description" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}"/>
            </do_if>
            <do_else>
              <reset_cue cue="RM_DeliverResources"/>
            </do_else>
          </actions>
          <patch sinceversion="2" state="complete">
            <set_value name="$StorageTypes" exact="[]"/>
            <do_if value="@$StationSpecs.$containerstorage">
              <append_to_list name="$StorageTypes" exact="waretransport.container"/>
            </do_if>
            <do_if value="@$StationSpecs.$solidstorage">
              <append_to_list name="$StorageTypes" exact="waretransport.solid"/>
            </do_if>
          </patch>
          <cues>
            <cue name="RM_DeliverResources_Production_Ended">
              <conditions>
                <check_any>
                  <event_player_production_cancelled research="true"/>
                  <event_player_production_finished research="true"/>
                </check_any>
              </conditions>
              <actions>
                <remove_mission cue="$MissionCue"/>
                <reset_cue cue="namespace"/>
              </actions>
            </cue>
            <cue name="RM_DeliverResources_Expand_Ref" ref="md.RML_BuildStation.BuildStation">
              <!-- always pass these -->
              <param name="EndSignalCue" value="RM_DeliverResources_Expand_End"/>
              <param name="MissionCue" value="$MissionCue"/>
              <param name="StartStep" value="1" comment="Briefing step to start the mission on"/>
              <param name="UpdateBriefing" value="true" comment="Update the briefing objective step when the objective is updated"/>
              <param name="DebugChance" value="$DebugChance"/>
              <!-- mission-related parameters -->
              <param name="Station" value="$HQ"/>
              <param name="StationSpecs" value="$StationSpecs"/>
              <param name="Objective" value="objective.extend"/>
              <!--param name="ResultTable"       value="$RML_Result_Table"/-->
            </cue>
            <cue name="RM_DeliverResources_Expand_End">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <!--TODO @Owen secondary mission to deliver the goods-->
                <remove_mission cue="$MissionCue"/>
                <remove_help_overlay id="'stationbuildst_storage'"/>
                <remove_help_overlay id="'confirm_modulechanges'"/>
                <remove_help_overlay id="'plot_resources_buyoffers'"/>
                <remove_help_overlay id="'construction_available_funds'"/>
                <remove_help_overlay id="'construction_builders_header'"/>
                <reset_cue cue="namespace"/>
              </actions>
            </cue>
            <cue name="RM_DeliverResources__Build_Storage_Tutorial" ref="HQ_Tutorial_Build_Storage">
              <param name="Station" value="$HQ"/>
              <param name="StorageTypes" value="$StorageTypes"/>
              <param name="MinStartTime" value="player.age"/>
            </cue>
          </cues>
        </cue>
        <!--TODO @Owen Boso: <t id="30200015">Why are you still here?</t>-->
        <cue name="RM_EngineMod" namespace="this">
          <conditions>
            <event_cue_completed cue="UnlockResearch"/>
          </conditions>
          <actions>
            <set_value name="$ResearchWare" exact="ware.research_mod_engine_mk1"/>
            <set_value name="$AlreadyResearched" exact="false"/>
            <do_for_each name="$Precursor" in="$ResearchWare.research.precursors.list">
              <do_if value="$Precursor.research.unlocked">
                <set_value name="$AlreadyResearched" exact="true"/>
                <debug_text text="'Research was already unlocked. Cancelling precursor mission for ' + $ResearchWare.name" filter="savegame"/>
                <break/>
              </do_if>
            </do_for_each>
          </actions>
          <cues>
            <cue name="RM_EngineMod_Mission" onfail="cancel">
              <conditions>
                <check_value value="not $AlreadyResearched"/>
              </conditions>
              <actions>
                <set_value name="$MissionCue" exact="namespace"/>
                <set_value name="$HQ" exact="namespace.parent.$HQ"/>
                <set_value name="$Boron_Mentor" exact="namespace.parent.$Boron_Mentor"/>
                <set_value name="$ResearchActive" exact="false"/>
                <set_value name="$DebugChance" exact="0"/>
                <set_value name="$InventoryWare" exact="ware.inv_antimatter_injection_sensor"/>
                <set_value name="$TimeTrialDone" exact="false"/>
                <set_value name="$ReceivedReward" exact="false"/>
                <set_value name="$BoughtShip" exact="false"/>
                <set_value name="$MainShip" exact="null"/>
                <set_value name="$RacingShip" exact="null"/>
                <set_value name="$MainShipWasCreated" exact="false"/>
                <find_sector name="$GrandExchangeI" macro="macro.cluster_01_sector001_macro"/>
                <find_sector name="$GrandExchangeII" macro="macro.cluster_01_sector002_macro"/>
                <create_group groupname="$MissionShips"/>
                <!--This value is to be properly set in two branches of the mission-->
                <set_value name="$Step_DeliverWare" exact="1"/>
              </actions>
              <cues>
                <cue name="RM_EngineMod_ProductionStarted" instantiate="true">
                  <conditions>
                    <event_player_production_started research="true"/>
                    <check_value value="$ResearchWare == event.param2"/>
                  </conditions>
                  <actions>
                    <set_value name="$ResearchActive" exact="true"/>
                    <debug_text text="'Started production for ware ' + $ResearchWare" chance="$DebugChance"/>
                    <assert value="not $MissionCue.hasmission" text="'Mission cue ' + $MissionCue + ' already has a mission [Owen]'"/>
                  </actions>
                  <delay exact="0.5s"/>
                  <actions>
                    <do_if value="$TimeTrialDone">
                      <!--Player already has done the time trial.-->
                      <signal_cue cue="RM_EngineMod_StartMission"/>
                    </do_if>
                    <do_else>
                      <!--
                      To encourage new racing talent and investment in the sport, several challenges have been set up where you can prove your skills.
                      The prize? Components for teams to incorporate into their racing craft, including the sensors we need.
                      I will direct you to one of these locations.-->
                      <speak actor="$Boron_Mentor" line="[30222002, 30222003, 0.2s, 30222004]" priority="100" caninterrupt="false"/>
                      <debug_text text="player.age + ' intro dialogue to mission'" chance="$DebugChance"/>
                    </do_else>
                  </actions>
                </cue>
                <cue name="RM_EngineMod_ProductionAborted" instantiate="true">
                  <conditions>
                    <event_player_production_cancelled research="true"/>
                    <check_value value="event.param3.indexof.{$ResearchWare}"/>
                  </conditions>
                  <actions>
                    <set_value name="$ResearchActive" exact="false"/>
                    <do_if value="$MissionCue.hasmission">
                      <remove_mission cue="$MissionCue" type="aborted"/>
                    </do_if>
                    <debug_text text="player.age + ' aborted production.'" chance="$DebugChance"/>
                    <signal_cue_instantly cue="RM_EngineMod_Deliver_Ref" param="['set_passive', true]"/>
                    <reset_cue cue="RM_EngineMod_StartMission"/>
                    <!--TODO @Owen #important make sure that nothing critical is being managed in RM_EngineMod_StartMission e.g. cleaning up the mission ships-->
                  </actions>
                </cue>
                <cue name="RM_EngineMod_ProductionStarted_SpeakEnd" instantiate="true">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor"/>
                    <!--Use $ResearchActive just in case another mission triggers the same lines-->
                    <check_value value="$ResearchActive and event.param2 == 30222002"/>
                  </conditions>
                  <actions>
                    <signal_cue cue="RM_EngineMod_StartMission"/>
                  </actions>
                </cue>
                <cue name="RM_EngineMod_StartMission">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <debug_text text="player.age + ' Start mission'" chance="$DebugChance"/>
                    <create_mission cue="$MissionCue" name="{30222,1001}" type="missiontype.plot" faction="faction.civilian" difficulty="level.hard" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}"/>
                  </actions>
                  <cues>
                    <cue name="RM_EngineMod_GoToStart" onfail="cancel">
                      <conditions>
                        <check_value value="not $TimeTrialDone"/>
                      </conditions>
                      <actions>
                        <!--TODO @Owen #important find some decent routes-->
                        <find_sector_in_range name="$StartSector" object="$GrandExchangeI" mindistance="0" maxdistance="1"/>
                        <find_sector_in_range name="$PotentialDestSectors" object="$StartSector" mindistance="1" maxdistance="1" multiple="true"/>
                        <do_if value="$PotentialDestSectors.count ge 2">
                          <!--Don't want the player going back and forth-->
                          <remove_from_list name="$PotentialDestSectors" exact="player.sector"/>
                        </do_if>
                        <set_value name="$DestSector" exact="$PotentialDestSectors.random"/>
                        <do_if value="$DestSector == player.sector">
                          <!--Player sector was selected as the destination, probably because the start sector has only one gate. Swap them to prevent the player going back on themselves-->
                          <set_value name="$DestSector" exact="$StartSector"/>
                          <set_value name="$StartSector" exact="player.sector"/>
                        </do_if>
                        <find_sector_in_range name="$PotentialSpawnSectors" object="$DestSector" mindistance="1" maxdistance="1" multiple="true"/>
                        <!--Don't spawn in the start sector-->
                        <remove_from_list name="$PotentialDestSectors" exact="$StartSector"/>
                        <do_if value="$PotentialSpawnSectors.count == 0">
                          <set_value name="$SpawnSector" exact="$DestSector"/>
                        </do_if>
                        <do_else>
                          <set_value name="$SpawnSector" exact="$PotentialSpawnSectors.random"/>
                        </do_else>
                        <assert value="$StartSector and $DestSector" text="'Unable to find start and end sectors for the time trial [Owen]'"/>
                        <do_if value="not $StartSector">
                          <set_value name="$StartSector" exact="$GrandExchangeI"/>
                        </do_if>
                        <do_if value="not $DestSector">
                          <set_value name="$DestSector" exact="$GrandExchangeII"/>
                        </do_if>
                        <!--TODO @Owen #important positioning to interesting objects-->
                        <get_safe_pos result="$StartSecPos" sector="$StartSector" x="[-100km, 100km].random" z="[-100km, 100km].random" max="5km"/>
                        <get_safe_pos result="$DestSecPos" sector="$DestSector" x="[-100km, 100km].random" z="[-100km, 100km].random" max="5km"/>
                        <set_value name="$StartRadius" exact="200m"/>
                        <set_value name="$LeftStartRadius" exact="250m"/>
                        <set_value name="$DestinationRadius" exact="1km"/>
                        <!--TODO @Owen #important get the estimated time of travel-->
                        <set_value name="$TrialTime" exact="110s"/>
                        <set_value name="$Step_FlyTo" exact="1"/>
                        <set_value name="$Step_TimeTrial" exact="2"/>
                        <set_value name="$Step_ToTotonis" exact="3"/>
                        <set_value name="$Step_DeliverWare" exact="4"/>
                        <set_value name="RM_EngineMod_Deliver_Ref.$StartStep" exact="$Step_DeliverWare"/>
                        <do_if value="player.entity.isfemale">
                          <update_mission cue="$MissionCue" description="{30222,1002} + ' ' + {30222,1003} + ' ' + {30222,1005} + '\n' + {30222,1007}"/>
                        </do_if>
                        <do_else>
                          <update_mission cue="$MissionCue" description="{30222,1002} + ' ' + {30222,1004} + ' ' + {30222,1006} + '\n' + {30222,1008}"/>
                        </do_else>
                        <update_mission cue="$MissionCue" description="{30222,1002} + ' ' + {30222,1004} + ' ' + {30222,1006} + '\n' + {30222,1008}">
                          <briefing replace="true">
                            <objective step="$Step_FlyTo" action="objective.flyto" text="$StartSector.knownname"/>
                            <objective step="$Step_TimeTrial" action="objective.custom" customaction="{30222,1062}" text="$DestSector.knownname"/>
                            <objective step="$Step_ToTotonis" action="objective.talkto" text="{30222,1050}"/>
                            <objective step="$Step_DeliverWare" action="objective.deliver" text="$InventoryWare.name"/>
                          </briefing>
                        </update_mission>
                        <set_objective cue="$MissionCue" step="$Step_FlyTo" action="objective.flyto" text="{30222,1053}" object="$StartSector" offset="$StartSecPos" updatebriefing="true" comment="Start position"/>
                      </actions>
                      <cues>
                        <cue name="RM_EngineMod_GoToStart_Comment" checkinterval="5s">
                          <conditions>
                            <check_value value="player.age gt RM_EngineMod_GoToStart.time + 30s and player.controlled"/>
                          </conditions>
                          <actions>
                            <speak actor="$Boron_Mentor" line="30222005" comment="This is essentially a time-trial so you will need a fast ship."/>
                          </actions>
                        </cue>
                        <cue name="RM_EngineMod_Race_Init">
                          <actions>
                            <signal_cue cue="RM_EngineMod_Race_Handler"/>
                          </actions>
                        </cue>
                        <cue name="RM_EngineMod_Race_Reset" instantiate="true">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <actions>
                            <!--Depending on the reset reason, have Boso say something-->
                            <do_if value="RM_EngineMod_GoToStart_Comment.state == cuestate.waiting or RM_EngineMod_GoToStart_Comment.state == cuestate.active">
                              <cancel_cue cue="RM_EngineMod_GoToStart_Comment"/>
                            </do_if>
                            <assert value="RM_EngineMod_Race_Handler.state == cuestate.waiting" text="'RM_EngineMod_Race_Handler is of state ' + RM_EngineMod_Race_Handler.state + ' [Owen]'"/>
                          </actions>
                          <delay exact="5s"/>
                          <actions>
                            <signal_cue cue="RM_EngineMod_Race_Handler"/>
                          </actions>
                        </cue>
                        <cue name="RM_EngineMod_Race_Handler">
                          <conditions>
                            <event_cue_signalled/>
                          </conditions>
                          <cues>
                            <cue name="RM_EngineMod_FlyToTest_Ref" ref="md.RML_FlyTo.FlyTo">
                              <param name="MissionCue" value="$MissionCue"/>
                              <param name="StartStep" value="$Step_FlyTo" comment="Briefing step to start the mission on"/>
                              <param name="Target" value="$StartSector"/>
                              <param name="Offset" value="$StartSecPos"/>
                              <param name="TargetAlias" value="{30222,1053}" comment="Start position"/>
                              <param name="Distance" value="$StartRadius"/>
                              <param name="LeftDistance" value="$LeftStartRadius + 2km" comment="Allow a bit of wiggle room if the player drifts off when decelerating"/>
                              <param name="EndOnCompletion" value="false" comment="End this RML when the player has reached the destination. WARNING: If false, the caller must end the library."/>
                              <param name="ReachedTargetSignalCue" value="RM_EngineMod_AtStart" comment="Cue to be signalled when player reaches the destination"/>
                              <param name="FireReachedTargetOnInit" value="true"/>
                              <param name="LeftTargetSignalCue" value="RM_EngineMod_LeftStart"/>
                              <param name="DebugChance" value="$DebugChance"/>
                            </cue>
                            <cue name="RM_EngineMod_LeftStart" instantiate="true">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <reset_cue cue="RM_EngineMod_AtStart"/>
                              </actions>
                            </cue>
                            <cue name="RM_EngineMod_AtStart">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <set_objective cue="$MissionCue" action="objective.await" text="{30222,1055}" object="$DestSector" offset="$DestSecPos" radius="$DestinationRadius" endtime="-1s" comment="Time-Trial Start"/>
                                <!--Don't say these lines so often-->
                                <do_if value="player.age gt @$LastStartSpeak + 1min">
                                  <!--
                                  I am marking the end position for you.
                                  You must simply reach the destination in the alotted time.-->
                                  <speak actor="$Boron_Mentor" line="[30222067, 30222007]" caninterrupt="false" priority="100"/>
                                  <set_value name="$LastStartSpeak" exact="player.age"/>
                                </do_if>
                                <do_else>
                                  <!--Queue a signal on Boso to trigger the prepare lines-->
                                  <signal_objects object="$Boron_Mentor" param="RM_EngineMod_AtStart" delay="2s"/>
                                </do_else>
                              </actions>
                              <cues>
                                <cue name="RM_EngineMod_AtStart_Prepare">
                                  <conditions>
                                    <check_any>
                                      <event_speak_finished actor="$Boron_Mentor" line="30222067"/>
                                      <event_object_signalled object="$Boron_Mentor" param="RM_EngineMod_AtStart"/>
                                    </check_any>
                                  </conditions>
                                  <delay exact="if event.name == 'event_speak_finished' then 1s else 0s"/>
                                  <actions>
                                    <!--
                                    Prepare yourself.
                                    Go!-->
                                    <speak actor="$Boron_Mentor" line="[30222008, 1s, 30222009]" caninterrupt="false" priority="100"/>
                                  </actions>
                                </cue>
                                <cue name="RM_EngineMod_AtStart_GoGoGo">
                                  <conditions>
                                    <event_speak_finished actor="$Boron_Mentor" line="30222008"/>
                                  </conditions>
                                  <actions>
                                    <cancel_cue cue="RM_EngineMod_FlyToTest_Ref"/>
                                    <set_value name="$StartTime" exact="player.age"/>
                                    <set_value name="$TargetEndTime" exact="$StartTime + $TrialTime"/>
                                    <set_objective cue="$MissionCue" action="objective.custom" customaction="{30222,1062}" text="$DestSector.knownname" object="$DestSector" offset="$DestSecPos" radius="$DestinationRadius" endtime="$TargetEndTime" comment="Target Area"/>
                                    <set_value name="$TrialShip" exact="player.controlled"/>
                                  </actions>
                                </cue>
                                <cue name="RM_EngineMod_AtStart_Wait">
                                  <conditions>
                                    <event_cue_completed cue="RM_EngineMod_AtStart_GoGoGo"/>
                                  </conditions>
                                  <cues>
                                    <cue name="RM_EngineMod_TrialInterrupted">
                                      <conditions>
                                        <check_any>
                                          <event_player_stopped_control/>
                                          <event_object_docked object="$TrialShip"/>
                                          <event_object_destroyed object="$TrialShip"/>
                                          <event_object_changed_room object="player.entity"/>
                                        </check_any>
                                      </conditions>
                                      <actions>
                                        <!--TODO Notification with reason-->
                                        <reset_cue cue="RM_EngineMod_FlyToTest_Ref"/>
                                        <reset_cue cue="RM_EngineMod_AtStart"/>
                                      </actions>
                                    </cue>
                                    <!--TODO @Owen
                                    <t id="30222010">You do not seem to be making good progress.</t>
                                    <t id="30222011">You seem to be doing well for time.</t>-->
                                    <cue name="RM_EngineMod_TimeOut">
                                      <delay exact="$TrialTime + 1s"/>
                                      <actions>
                                        <speak actor="$Boron_Mentor" line="30222013" comment="Your time is up."/>
                                      </actions>
                                    </cue>
                                    <cue name="RM_EngineMod_AtDestination" checkinterval="1ms">
                                      <conditions>
                                        <check_value value="player.sector == $DestSector and $TrialShip.distanceto.[$DestSector, $DestSecPos] le $DestinationRadius"/>
                                      </conditions>
                                      <actions>
                                        <cancel_cue cue="RM_EngineMod_TrialInterrupted"/>
                                        <set_value name="$TimeTrialDone" exact="player.age le $TargetEndTime"/>
                                      </actions>
                                      <cues>
                                        <cue name="RM_EngineMod_AtDestination_Achieved" onfail="cancel">
                                          <conditions>
                                            <check_value value="$TimeTrialDone"/>
                                          </conditions>
                                          <actions>
                                            <!--
                                            Very good work.
                                            I have submitted your results to the governing body of the sport.
                                            You can go and collect your prize.-->
                                            <speak actor="$Boron_Mentor" line="[30222012, 30222016, 30222017]" caninterrupt="false" priority="100"/>
                                          </actions>
                                          <cues>
                                            <cue name="RM_EngineMod_AtDestination_Trigger_Prize">
                                              <conditions>
                                                <event_speak_finished actor="$Boron_Mentor" line="30222012"/>
                                              </conditions>
                                              <actions>
                                                <signal_cue cue="RM_EngineMod_CollectPrize"/>
                                                <reset_cue cue="RM_EngineMod_AtStart"/>
                                              </actions>
                                            </cue>
                                          </cues>
                                        </cue>
                                        <cue name="RM_EngineMod_AtDestination_Failed" onfail="cancel">
                                          <conditions>
                                            <check_value value="not $TimeTrialDone"/>
                                          </conditions>
                                          <actions>
                                            <!--
                                            Unfortunately, you were unable to reach the destination in time.
                                            You can try again if you wish.-->
                                            <speak actor="$Boron_Mentor" line="[30222015, 30222006]" caninterrupt="false" priority="100"/>
                                          </actions>
                                          <cues>
                                            <cue name="RM_EngineMod_AtDestination_Reset">
                                              <conditions>
                                                <event_speak_finished actor="$Boron_Mentor" line="30222015"/>
                                              </conditions>
                                              <actions>
                                                <reset_cue cue="RM_EngineMod_FlyToTest_Ref"/>
                                                <reset_cue cue="RM_EngineMod_AtStart"/>
                                              </actions>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="RM_EngineMod_TimeTrialDone" onfail="cancel">
                      <conditions>
                        <check_value value="$TimeTrialDone"/>
                      </conditions>
                      <actions>
                        <set_value name="$Step_ToTotonis" exact="1"/>
                        <set_value name="$Step_DeliverWare" exact="2"/>
                        <set_value name="RM_EngineMod_Deliver_Ref.$StartStep" exact="$Step_DeliverWare"/>
                        <signal_cue_instantly cue="RM_EngineMod_Deliver_Ref" param="['set_passive', false]"/>
                        <do_if value="player.entity.isfemale">
                          <update_mission cue="$MissionCue" description="{30222,1002} + ' ' + {30222,1003} + ' ' + {30222,1005} + '\n' + {30222,1007}"/>
                        </do_if>
                        <do_else>
                          <update_mission cue="$MissionCue" description="{30222,1002} + ' ' + {30222,1004} + ' ' + {30222,1006} + '\n' + {30222,1008}"/>
                        </do_else>
                        <update_mission cue="$MissionCue" description="{30222,1002} + ' ' + {30222,1004} + ' ' + {30222,1006} + '\n' + {30222,1008}">
                          <briefing replace="true">
                            <objective step="$Step_ToTotonis" action="objective.talkto" text="{30222,1050}"/>
                            <objective step="$Step_DeliverWare" action="objective.deliver" text="$InventoryWare.name"/>
                          </briefing>
                        </update_mission>
                        <signal_cue cue="RM_EngineMod_CollectPrize"/>
                      </actions>
                    </cue>
                    <library name="RM_EngineMod_Create_Totonis">
                      <actions>
                        <create_cue_actor name="$Totonis" cue="$MissionCue" macro="macro.character_teladi_female_plot_totonis_macro">
                          <name name="'{30222,1050}'"/>
                          <owner exact="faction.teladi"/>
                          <page exact="10503"/>
                          <skills>
                            <skill type="management" exact="12"/>
                            <skill type="morale" exact="8"/>
                            <skill type="piloting" exact="9"/>
                            <skill type="engineering" exact="7"/>
                            <skill type="boarding" exact="3"/>
                          </skills>
                        </create_cue_actor>
                        <set_entity_traits entity="$Totonis" missionactor="true" customhandler="true" subtitlename="true"/>
                        <set_entity_overrides entity="$Totonis" title="'{30222,1052}'" icon="'shiptechnican'"/>
                        <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Totonis,                              table[                             $requestercue = namespace,                             $location = $ActorDock,                             $priority = 100,                             $position = position.[-12m, 0.2m, 19.7m],                             $rotation = rotation.[100deg, 0deg, 0deg],                             $debugchance = $DebugChance,                             $debugcaller = if $DebugChance == 100 then this else null]                             ]"/>
                      </actions>
                    </library>
                    <cue name="RM_EngineMod_CollectPrize">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <do_if value="$MainShip.isoperational">
                          <do_if value="player.entity.inventory.{$InventoryWare}.count">
                            <signal_cue_instantly cue="RM_EngineMod_Deliver_Ref" param="['set_passive', false]"/>
                          </do_if>
                          <do_else>
                            <do_if value="not $Totonis.exists">
                              <include_actions ref="RM_EngineMod_Create_Totonis"/>
                            </do_if>
                            <set_objective cue="$MissionCue" action="objective.talkto" object="$Totonis"/>
                          </do_else>
                        </do_if>
                        <do_else>
                          <do_if value="$SpawnSector == player.sector">
                            <!--Spawn away from the player-->
                            <create_position name="$PlayerSecPos" object="player.entity" space="$SpawnSector"/>
                            <set_value name="$CoreRadius" exact="$SpawnSector.coresize / 2"/>
                            <do_if value="$PlayerSecPos.x gt 0">
                              <set_value name="$Sec_X" min="0 - $CoreRadius" max="0 - ($CoreRadius / 2)"/>
                            </do_if>
                            <do_else>
                              <set_value name="$Sec_X" min="$CoreRadius / 2" max="$CoreRadius"/>
                            </do_else>
                            <do_if value="$PlayerSecPos.z gt 0">
                              <set_value name="$Sec_Z" min="0 - $CoreRadius" max="0 - ($CoreRadius / 2)"/>
                            </do_if>
                            <do_else>
                              <set_value name="$Sec_Z" min="$CoreRadius / 2" max="$CoreRadius"/>
                            </do_else>
                            <get_safe_pos result="$ShipSecPos" sector="$SpawnSector" x="$Sec_X" z="$Sec_Z" max="5km"/>
                          </do_if>
                          <do_else>
                            <get_safe_pos result="$ShipSecPos" sector="$SpawnSector" x="[-100km, 100km].random" z="[-100km, 100km].random" max="5km"/>
                          </do_else>
                          <create_ship name="$MainShip" groupname="$MissionShips" macro="macro.ship_tel_l_destroyer_01_a_macro" sector="$SpawnSector" capturable="false">
                            <owner exact="faction.teladi" overridenpc="true"/>
                            <loadout>
                              <level exact="0.9"/>
                            </loadout>
                            <pilot>
                              <select faction="faction.teladi" tags="tag.fighterpilot"/>
                            </pilot>
                            <drop ref="ship_large_military"/>
                            <people ref="teladi_military_crew"/>
                            <paint ware="ware.paintmod_0023"/>
                            <safepos value="$ShipSecPos"/>
                          </create_ship>
                          <set_value name="$MainShipWasCreated" exact="true"/>
                          <!--TODO @Owen #important order the ship to do something-->
                          <do_if value="not $BoughtShip">
                            <find_dockingbay name="$S_Docks" object="$MainShip" multiple="true">
                              <match_dock size="tag.dock_s" storage="false"/>
                            </find_dockingbay>
                            <assert value="$S_Docks.count == 2" text="'Expected 2 S docks [Owen]'"/>
                            <set_value name="$ActorDock" exact="$S_Docks.{1}"/>
                            <do_if value="$S_Docks.count ge 2">
                              <set_value name="$RacingShipDock" exact="$ActorDock"/>
                              <create_ship name="$RacingShip" groupname="$MissionShips" macro="macro.ship_par_s_fighter_01_b_macro" dock="$RacingShipDock">
                                <owner exact="faction.teladi" overridenpc="true"/>
                                <loadout>
                                  <level exact="0.9"/>
                                </loadout>
                                <pilot actor="null"/>
                                <drop ref="ship_small_military"/>
                                <paint ware="ware.paintmod_0091"/>
                              </create_ship>
                            </do_if>
                            <set_value name="$ShipPrice" exact="1500000Cr"/>
                          </do_if>
                          <include_actions ref="RM_EngineMod_Create_Totonis"/>
                          <set_objective cue="$MissionCue" action="objective.talkto" object="$Totonis"/>
                        </do_else>
                      </actions>
                      <cues>
                        <cue name="RM_EngineMod_TalkTo_Abort">
                          <conditions>
                            <check_any>
                              <event_object_destroyed object="$MainShip"/>
                              <event_object_destroyed object="$Totonis"/>
                              <event_object_changed_true_owner object="$MainShip"/>
                            </check_any>
                          </conditions>
                          <actions>
                            <debug_text text="'Aborted Mission (%s)'.[event.name]" chance="$DebugChance"/>
                            <remove_mission cue="$MissionCue" type="aborted"/>
                          </actions>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
                <cue name="RM_EngineMod_Object_Became_Player_Owned">
                  <conditions>
                    <event_object_changed_true_owner group="$MissionShips"/>
                  </conditions>
                </cue>
                <cue name="RM_EngineMod_Totonis_Conv_Started" instantiate="true">
                  <conditions>
                    <check_any>
                      <event_conversation_started/>
                      <event_conversation_returned_to_section/>
                    </check_any>
                    <check_value value="@$Totonis.exists and event.object == $Totonis"/>
                  </conditions>
                  <actions>
                    <do_if value="event.name == 'event_conversation_started'">
                      <add_npc_line speaker="$Totonis" line="2001"/>
                    </do_if>
                    <do_if value="$TimeTrialDone">
                      <do_if value="not $ReceivedReward">
                        <add_player_choice text="{30222,1031}" section="trial_prize"/>
                      </do_if>
                      <do_elseif value="player.entity.inventory.{$InventoryWare}.count == 0">
                        <!--Steal this line from the diplomatic mission page-->
                        <add_player_choice text="{30202,711}" section="trial_prize_lost" comment="Sorry. I lost it."/>
                      </do_elseif>
                      <do_if value="not $BoughtShip and $RacingShip.exists">
                        <add_player_choice text="{30222,1032}" section="trial_ask_ship"/>
                      </do_if>
                    </do_if>
                    <add_player_choice text="{1002,2}" section="trial_goodbye" position="bottom_left"/>
                  </actions>
                </cue>
                <cue name="RM_EngineMod_Totonis_Conv_Next" instantiate="true">
                  <conditions>
                    <event_conversation_next_section/>
                    <check_value value="@$Totonis.exists and event.object == $Totonis"/>
                  </conditions>
                  <actions>
                    <do_if value="event.param == 'trial_prize'">
                      <set_value name="$ReceivedReward" exact="true"/>
                      <!--TODO @Owen other 'racey' inventory wares-->
                      <add_npc_line speaker="$Totonis" line="2113"/>
                      <add_npc_line speaker="$Totonis" line="5022"/>
                      <add_inventory entity="player.entity" ware="$InventoryWare" exact="5"/>
                      <signal_cue_instantly cue="RM_EngineMod_Deliver_Ref" param="['set_passive', false]"/>
                    </do_if>
                    <do_elseif value="event.param == 'trial_prize_lost'">
                      <add_inventory entity="player.entity" ware="$InventoryWare" exact="1"/>
                      <add_npc_line speaker="$Totonis" line="5022"/>
                      <signal_cue_instantly cue="RM_EngineMod_Deliver_Ref" param="['set_passive', false]"/>
                    </do_elseif>
                    <do_elseif value="event.param == 'trial_ask_ship'">
                      <!--Player: That's a nice ship you have there-->
                      <substitute_text text="$BuyShipText" source="{30222,1033}">
                        <replace string="'$AMOUNT$'" with="$ShipPrice.formatted.default"/>
                      </substitute_text>
                      <add_npc_line speaker="$Totonis" line="2110" lookat="$RacingShip" hidechoices="true" comment="Thank you."/>
                      <add_npc_line speaker="$Totonis" line="10101" lookat="$RacingShip" delay="0.5s" hidechoices="true" comment="Perhaps we could maybe strike a deal."/>
                      <add_player_choice text="$BuyShipText" section="trial_buy_ship" selectable="player.money ge $ShipPrice"/>
                      <add_player_choice_return text="{1002,20}" position="bottom_right" comment="Back"/>
                    </do_elseif>
                    <do_elseif value="event.param == 'trial_goodbye' or event.param == 'g_cancel'">
                      <add_npc_line speaker="$Totonis" line="2008"/>
                    </do_elseif>
                    <do_elseif value="event.param == 'trial_buy_ship'">
                      <do_if value="player.money ge $ShipPrice">
                        <reward_player money="-$ShipPrice"/>
                        <add_npc_line speaker="$Totonis" line="2013" comment="Good doing business."/>
                        <set_value name="$BoughtShip" exact="true"/>
                        <set_owner object="$RacingShip" faction="faction.player"/>
                        <run_actions ref="md.LIB_Generic.TransferShipOwnership">
                          <param name="Ship" value="$RacingShip"/>
                          <param name="Faction" value="faction.player"/>
                        </run_actions>
                      </do_if>
                    </do_elseif>
                  </actions>
                </cue>
                <cue name="RM_EngineMod_Deliver_Ref" ref="md.RML_Deliver_Inventory.Deliver_Inventory">
                  <param name="EndSignalCue" value="RM_EngineMod_Delivered"/>
                  <param name="MissionCue" value="$MissionCue"/>
                  <param name="StartStep" value="$Step_DeliverWare"/>
                  <param name="IsPassive" value="true"/>
                  <!--Delivery params-->
                  <param name="WaresTableParam" value="table[{$InventoryWare} = 1]"/>
                  <param name="DeliveryNPC" value="$Boron_Mentor"/>
                  <param name="ProgressBarText" value="{30222,101}" comment="Delivered"/>
                  <param name="ConversationOptionText" value="{30222,102}" comment="Give: "/>
                  <param name="ConversationTipText" value="{30135,105}" comment="Collect the items before trying to deliver them."/>
                  <param name="PlaceNPC" value="false"/>
                  <param name="DebugChance" value="$DebugChance"/>
                </cue>
                <cue name="RM_EngineMod_Delivered">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <debug_text text="'Done EndFeedbackValue %s'.[RM_EngineMod_Delivered.$EndFeedbackValue]" chance="$DebugChance"/>
                    <!--
                    Now then. We should be able to begin our research.
                    I look forward to seeing how this turns out.-->
                    <!--TODO @Owen check that this triggers-->
                    <speak actor="$Boron_Mentor" line="[30222019, 30201170]" priority="100" caninterrupt="false"/>
                    <do_for_each name="$Precursor" in="$ResearchWare.research.precursors.list">
                      <add_research ware="$Precursor"/>
                    </do_for_each>
                    <remove_mission cue="$MissionCue" type="completed"/>
                    <cancel_cue cue="RM_EngineMod_Mission"/>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="RM_ShieldMod" namespace="this">
          <conditions>
            <event_cue_completed cue="UnlockResearch"/>
          </conditions>
          <actions>
            <set_value name="$ResearchWare" exact="ware.research_mod_shield_mk1"/>
            <set_value name="$AlreadyResearched" exact="false"/>
            <do_for_each name="$Precursor" in="$ResearchWare.research.precursors.list">
              <do_if value="$Precursor.research.unlocked">
                <set_value name="$AlreadyResearched" exact="true"/>
                <debug_text text="'Research was already unlocked. Cancelling precursor mission for ' + $ResearchWare.name" filter="savegame"/>
                <break/>
              </do_if>
            </do_for_each>
          </actions>
          <cues>
            <cue name="RM_ShieldMod_Mission" onfail="cancel">
              <conditions>
                <check_value value="not $AlreadyResearched"/>
              </conditions>
              <actions>
                <set_value name="$MissionCue" exact="namespace"/>
                <set_value name="$HQ" exact="namespace.parent.$HQ"/>
                <set_value name="$Boron_Mentor" exact="namespace.parent.$Boron_Mentor"/>
                <set_value name="$DebugChance" exact="0"/>
                <set_value name="$ResearchActive" exact="false"/>
                <set_value name="$LauncherTable" exact="table[]"/>
                <set_value name="$TargetHitAmount" exact="50"/>
                <set_value name="$TargetLauncherAmount" exact="3"/>
                <set_value name="$DoneLaunchers" exact="[]"/>
              </actions>
              <cues>
                <cue name="RM_ShieldMod_ProductionStarted" instantiate="true">
                  <conditions>
                    <event_player_production_started research="true"/>
                    <check_value value="$ResearchWare == event.param2"/>
                  </conditions>
                  <actions>
                    <set_value name="$ResearchActive" exact="true"/>
                    <debug_text text="'Started production for ware ' + $ResearchWare" chance="$DebugChance"/>
                    <assert value="not $MissionCue.hasmission" text="'Mission cue ' + $MissionCue + ' already has a mission [Owen]'"/>
                  </actions>
                  <delay exact="0.5s"/>
                  <actions>
                    <!--
                    We will need to submit a craft to the rigours of real combat.
                    As this is simply a fact-finding task, I implore you not to get killed.-->
                    <speak actor="$Boron_Mentor" line="[30222028, 0.2s, 30222027]" priority="100" caninterrupt="false"/>
                    <debug_text text="player.age + ' intro dialogue to mission'" chance="$DebugChance"/>
                  </actions>
                </cue>
                <cue name="RM_ShieldMod_ProductionAborted" instantiate="true">
                  <conditions>
                    <event_player_production_cancelled research="true"/>
                    <check_value value="event.param3.indexof.{$ResearchWare}"/>
                  </conditions>
                  <actions>
                    <set_value name="$ResearchActive" exact="false"/>
                    <do_if value="$MissionCue.hasmission">
                      <remove_mission cue="$MissionCue" type="aborted"/>
                    </do_if>
                    <debug_text text="player.age + ' aborted production.'" chance="$DebugChance"/>
                    <reset_cue cue="RM_ShieldMod_StartMission"/>
                  </actions>
                </cue>
                <cue name="RM_ShieldMod_ProductionStarted_SpeakEnd" instantiate="true">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor"/>
                    <!--Use $ResearchActive just in case another mission triggers the same lines-->
                    <check_value value="$ResearchActive and event.param2 == 30222028"/>
                  </conditions>
                  <actions>
                    <signal_cue cue="RM_ShieldMod_StartMission"/>
                  </actions>
                </cue>
                <cue name="RM_ShieldMod_StartMission">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <debug_text text="player.age + ' Start mission'" chance="$DebugChance"/>
                    <create_mission cue="$MissionCue" name="{30222,1101}" description="if player.entity.isfemale then {30222,1103} else {30222,1102}" type="missiontype.plot" faction="faction.civilian" difficulty="level.hard" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}"/>
                    <set_value name="$ShieldsPreviouslyDown" exact="false"/>
                    <set_value name="$LastRemainingAmount" exact="0"/>
                    <set_value name="$LastLauncher" exact="null"/>
                    <set_value name="$LastHit" exact="0s"/>
                    <set_value name="$LastShieldWarning" exact="0s"/>
                    <set_value name="$LastFriendlyFireWarning" exact="0s"/>
                    <include_actions ref="RM_ShieldMod_UpdateBriefing"/>
                  </actions>
                  <cues>
                    <cue name="RM_ShieldMod_Player_Hit" instantiate="true">
                      <conditions>
                        <event_player_ship_hit/>
                        <check_value value="event.param3.isclass.bullet and event.param3.launcher and (not $DoneLaunchers.count or not $DoneLaunchers.indexof.{event.param3.launcher.macro}) and event.param.isplayerowned"/>
                      </conditions>
                      <actions>
                        <set_value name="$ShieldPercentage" exact="event.param.shieldpercentage"/>
                        <do_if value="$ShieldPercentage ge 1">
                          <do_if value="event.param2.isplayerowned">
                            <!--Is player owned, ignore-->
                            <do_if value="$MissionCue.hasguidance and (not $LastFriendlyFireWarning or player.age gt $LastFriendlyFireWarning + 15min) and player.age gt $LastHit + 60s">
                              <!--Very clever, but I will require real combat data.-->
                              <speak actor="$Boron_Mentor" line="30222029" priority="80"/>
                              <debug_text text="'Player friendly fire warning'" chance="$DebugChance"/>
                              <set_value name="$LastFriendlyFireWarning" exact="player.age"/>
                            </do_if>
                          </do_if>
                          <do_else>
                            <set_value name="$LastHit" exact="player.age"/>
                            <set_value name="$LastLauncher" exact="event.param3.launcher.macro"/>
                            <set_value name="$LauncherTable.{$LastLauncher}" operation="add"/>
                            <do_if value="$ShieldPercentage lt 10">
                              <!--Be careful. This is pointless if you have no shields.-->
                              <do_if value="$MissionCue.hasguidance and (not $LastShieldWarning or player.age gt $LastShieldWarning + 15min)">
                                <speak actor="$Boron_Mentor" line="30222033" priority="80"/>
                                <debug_text text="'Player low shields warning'" chance="$DebugChance"/>
                                <set_value name="$LastShieldWarning" exact="player.age"/>
                              </do_if>
                            </do_if>
                          </do_else>
                        </do_if>
                      </actions>
                    </cue>
                    <cue name="RM_ShieldMod_Check_Hits" checkinterval="1s" instantiate="true">
                      <actions>
                        <set_value name="$PlayerControlled" exact="player.controlled"/>
                        <do_if value="$Step and $PlayerControlled and $PlayerControlled.shieldpercentage lt 1 and $PlayerControlled.maxshield">
                          <do_if value="not $ShieldsPreviouslyDown">
                            <set_value name="$ShieldsPreviouslyDown" exact="true"/>
                            <set_value name="$DisplayedLauncher" exact="null"/>
                            <!--TODO @Owen I don't like having to update the briefing for this temp objective-->
                            <set_objective cue="$MissionCue" step="$Step" action="objective.custom" customaction="{30222,1156}" updatebriefing="true" silent="player.age gt $LastHit + 5s"/>
                          </do_if>
                        </do_if>
                        <do_else>
                          <set_value name="this.$StartCount" exact="$DoneLaunchers.count"/>
                          <do_for_each name="$Macro" valuename="$Val" in="$LauncherTable">
                            <do_if value="$Val ge $TargetHitAmount">
                              <do_if value="not $DoneLaunchers.indexof.{$Macro}">
                                <append_to_list name="$DoneLaunchers" exact="$Macro"/>
                              </do_if>
                            </do_if>
                          </do_for_each>
                          <do_if value="$DoneLaunchers.count ge $TargetLauncherAmount">
                            <signal_cue cue="RM_ShieldMod_Done"/>
                            <break/>
                          </do_if>
                          <do_elseif value="$ShieldsPreviouslyDown or $DoneLaunchers.count != this.$StartCount or $DisplayedLauncher != $LastLauncher">
                            <include_actions ref="RM_ShieldMod_UpdateBriefing"/>
                          </do_elseif>
                          <do_else>
                            <include_actions ref="RM_ShieldMod_GetProgressBarData"/>
                            <do_if value="$DisplayedLauncher">
                              <update_objective_progress cue="$MissionCue" progress="$DisplayedLauncherValue" max="$TargetHitAmount"/>
                            </do_if>
                          </do_else>
                          <set_value name="$ShieldsPreviouslyDown" exact="false"/>
                        </do_else>
                      </actions>
                    </cue>
                  </cues>
                </cue>
                <library name="RM_ShieldMod_GetProgressBarData">
                  <actions>
                    <!--Check if the progress of the last launcher is to be shown in the objective.-->
                    <do_if value="not $LastLauncher or $DoneLaunchers.indexof.{$LastLauncher}">
                      <!--The last launcher to hit is now at 100%. Find the next best launcher.-->
                      <set_value name="$DisplayedLauncher" exact="null"/>
                      <set_value name="$DisplayedLauncherValue" exact="null"/>
                      <do_for_each name="$Macro" valuename="$Val" in="$LauncherTable">
                        <do_if value="$Val gt $DisplayedLauncherValue">
                          <set_value name="$DisplayedLauncher" exact="$Macro"/>
                          <set_value name="$DisplayedLauncherValue" exact="$Val"/>
                        </do_if>
                      </do_for_each>
                    </do_if>
                    <do_else>
                      <!--Use the last hitting launcher-->
                      <set_value name="$DisplayedLauncher" exact="$LastLauncher"/>
                      <set_value name="$DisplayedLauncherValue" exact="$LauncherTable.{$LastLauncher}"/>
                    </do_else>
                  </actions>
                </library>
                <library name="RM_ShieldMod_UpdateBriefing">
                  <actions>
                    <include_actions ref="RM_ShieldMod_GetProgressBarData"/>
                    <set_value name="$Step" exact="1"/>
                    <do_for_each name="$Macro" in="$DoneLaunchers">
                      <update_mission cue="$MissionCue">
                        <briefing>
                          <objective step="$Step" action="objective.custom" customaction="{30222,1150}" text="$Macro.name"/>
                        </briefing>
                      </update_mission>
                      <set_value name="$Step" operation="add"/>
                    </do_for_each>
                    <set_value name="$RemainingAmount" exact="$TargetLauncherAmount - $DoneLaunchers.count"/>
                    <do_if value="$RemainingAmount == 1">
                      <update_mission cue="$MissionCue">
                        <briefing>
                          <objective step="$Step" action="objective.custom" customaction="{30222,1150}" text="if $DoneLaunchers.count then {30222,1153} else {30222,1151}"/>
                        </briefing>
                      </update_mission>
                      <do_if value="$DisplayedLauncher">
                        <set_objective cue="$MissionCue" step="$Step" action="objective.custom" customaction="{30222,1150}" text="if $DoneLaunchers.count then {30222,1153} else {30222,1151}" silent="$RemainingAmount == $LastRemainingAmount">
                          <progress text="$DisplayedLauncher.name" progress="$DisplayedLauncherValue" max="$TargetHitAmount"/>
                        </set_objective>
                      </do_if>
                      <do_else>
                        <set_objective_from_briefing cue="$MissionCue" step="$Step" silent="$RemainingAmount == $LastRemainingAmount"/>
                      </do_else>
                    </do_if>
                    <do_else>
                      <substitute_text text="$ObjectiveText" source="if $DoneLaunchers.count then {30222,1154} else {30222,1152}">
                        <replace string="'$NUM$'" with="$RemainingAmount"/>
                      </substitute_text>
                      <update_mission cue="$MissionCue">
                        <briefing>
                          <objective step="$Step" action="objective.custom" customaction="{30222,1150}" text="$ObjectiveText"/>
                        </briefing>
                      </update_mission>
                      <do_if value="$DisplayedLauncher">
                        <set_objective cue="$MissionCue" step="$Step" action="objective.custom" customaction="{30222,1150}" text="$ObjectiveText" silent="$RemainingAmount == $LastRemainingAmount">
                          <progress text="$DisplayedLauncher.name" progress="$DisplayedLauncherValue" max="$TargetHitAmount"/>
                        </set_objective>
                      </do_if>
                      <do_else>
                        <set_objective_from_briefing cue="$MissionCue" step="$Step" silent="$RemainingAmount == $LastRemainingAmount"/>
                      </do_else>
                    </do_else>
                    <set_value name="$LastRemainingAmount" exact="$RemainingAmount"/>
                  </actions>
                </library>
                <cue name="RM_ShieldMod_Done">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <debug_text text="'Done'" chance="$DebugChance"/>
                    <!--
                    Now then. We should be able to begin our research.
                    I look forward to seeing how this turns out.
                    Perhaps you should flee.-->
                    <speak actor="$Boron_Mentor" line="[30222019, 30201170, 0.5s, 30222070]" priority="100" caninterrupt="false"/>
                    <do_for_each name="$Precursor" in="$ResearchWare.research.precursors.list">
                      <add_research ware="$Precursor"/>
                    </do_for_each>
                    <remove_mission cue="$MissionCue" type="completed"/>
                    <cancel_cue cue="RM_ShieldMod_Mission"/>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="RM_ShipMod" namespace="this">
          <conditions>
            <event_cue_completed cue="UnlockResearch"/>
          </conditions>
          <actions>
            <set_value name="$ResearchWare" exact="ware.research_mod_ship_mk1"/>
            <set_value name="$AlreadyResearched" exact="false"/>
            <do_for_each name="$Precursor" in="$ResearchWare.research.precursors.list">
              <do_if value="$Precursor.research.unlocked">
                <set_value name="$AlreadyResearched" exact="true"/>
                <debug_text text="'Research was already unlocked. Cancelling precursor mission for ' + $ResearchWare.name" filter="savegame"/>
                <break/>
              </do_if>
            </do_for_each>
          </actions>
          <cues>
            <cue name="RM_ShipMod_Mission" onfail="cancel">
              <conditions>
                <check_value value="not $AlreadyResearched"/>
              </conditions>
              <actions>
                <set_value name="$MissionCue" exact="namespace"/>
                <set_value name="$InventoryWare" exact="ware.inv_nanite_fabricator"/>
                <set_value name="$HQ" exact="namespace.parent.$HQ"/>
                <set_value name="$Boron_Mentor" exact="namespace.parent.$Boron_Mentor"/>
                <set_value name="$ResearchActive" exact="false"/>
                <set_value name="$DebugChance" exact="0"/>
                <set_value name="$Contact" exact="null"/>
                <set_value name="$ContactStation" exact="null"/>
                <set_value name="$ContactInterior" exact="null"/>
                <set_value name="$VisitedContact" exact="false"/>
                <set_value name="$ReceivedItem" exact="false"/>
                <set_value name="$DeliverStep" exact="2"/>
              </actions>
              <cues>
                <cue name="RM_ShipMod_ProductionStarted" instantiate="true">
                  <conditions>
                    <event_player_production_started research="true"/>
                    <check_value value="$ResearchWare == event.param2"/>
                  </conditions>
                  <actions>
                    <set_value name="$ResearchActive" exact="true"/>
                    <debug_text text="'Started production for ware ' + $ResearchWare" chance="$DebugChance"/>
                    <assert value="not $MissionCue.hasmission" text="'Mission cue ' + $MissionCue + ' already has a mission [Owen]'"/>
                  </actions>
                  <delay exact="0.5s"/>
                  <actions>
                    <do_if value="$VisitedContact">
                      <!--Player already has visited the contact.-->
                      <signal_cue cue="RM_ShipMod_StartMission"/>
                    </do_if>
                    <do_else>
                      <!--
                      Nanites are quite regulated but not illegal.
                      I may however need to push them beyond usual operating standards in order to achieve our goal.
                      I will direct you to a contact of mine.
                      He is quite skilled at moving restricted technology.-->
                      <speak actor="$Boron_Mentor" line="[30222037, 30222038, 30222039, 30222072]" priority="100" caninterrupt="false"/>
                      <debug_text text="player.age + ' intro dialogue to mission'" chance="$DebugChance"/>
                    </do_else>
                  </actions>
                </cue>
                <cue name="RM_ShipMod_ProductionAborted" instantiate="true">
                  <conditions>
                    <event_player_production_cancelled research="true"/>
                    <check_value value="event.param3.indexof.{$ResearchWare}"/>
                  </conditions>
                  <actions>
                    <set_value name="$ResearchActive" exact="false"/>
                    <do_if value="$MissionCue.hasmission">
                      <remove_mission cue="$MissionCue" type="aborted"/>
                    </do_if>
                    <debug_text text="player.age + ' aborted production.'" chance="$DebugChance"/>
                    <signal_cue_instantly cue="RM_ShipMod_Deliver_Ref" param="['set_passive', true]"/>
                    <reset_cue cue="RM_ShipMod_StartMission"/>
                    <!--TODO @Owen #important make sure that nothing critical is being managed in RM_ShipMod_StartMission e.g. NPC room instancing-->
                  </actions>
                </cue>
                <cue name="RM_ShipMod_ProductionStarted_SpeakEnd" instantiate="true">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor"/>
                    <!--Use $ResearchActive just in case another mission triggers the same lines-->
                    <check_value value="$ResearchActive and event.param2 == 30222037"/>
                  </conditions>
                  <actions>
                    <signal_cue cue="RM_ShipMod_StartMission"/>
                  </actions>
                </cue>
                <cue name="RM_ShipMod_StartMission" instantiate="true">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <debug_text text="player.age + ' Start mission'" chance="$DebugChance"/>
                    <do_if value="player.entity.inventory.{$InventoryWare}.count">
                      <set_value name="$Step_DeliverWare" exact="1"/>
                      <set_value name="RM_ShipMod_Deliver_Ref.$StartStep" exact="$Step_DeliverWare"/>
                      <create_mission cue="$MissionCue" name="{30222,1201}" description="{30222,1202} + '\n' + (if player.entity.isfemale then {30222,1204} else {30222,1203})" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}">
                        <briefing>
                          <objective step="$Step_DeliverWare" action="objective.deliver" text="$InventoryWare.name"/>
                        </briefing>
                      </create_mission>
                      <signal_cue_instantly cue="RM_ShipMod_Deliver_Ref" param="['set_passive', false]"/>
                    </do_if>
                    <do_else>
                      <set_value name="$Step_DeliverWare" exact="2"/>
                      <do_if value="$Contact.exists">
                        <debug_text text="player.age + ' contact exists'" chance="$DebugChance"/>
                      </do_if>
                      <do_else>
                        <do_if value="not $ContactStation.isoperational">
                          <find_sector_in_range name="$PotentialSectors" object="$HQ" mindistance="1" maxdistance="2" multiple="true"/>
                          <shuffle_list list="$PotentialSectors"/>
                          <do_for_each name="$PotentialSector" in="$PotentialSectors">
                            <find_station name="$ContactStation" space="$PotentialSector">
                              <match owner="faction.player" negate="true"/>
                              <match_relation_to faction="faction.player" relation="dock" comparison="ge"/>
                            </find_station>
                            <do_if value="$ContactStation.exists">
                              <break/>
                            </do_if>
                          </do_for_each>
                          <do_if value="not $ContactStation.isoperational">
                            <find_station name="$ContactStation" space="player.galaxy" reachablefrom="global.$BaseGameSector">
                              <match owner="factin.player" negate="true"/>
                              <match_relation_to faction="faction.player" relation="dock" comparison="ge"/>
                            </find_station>
                          </do_if>
                        </do_if>
                        <do_if value="$ContactStation.isoperational">
                          <debug_text text="player.age + ' create contact'" chance="$DebugChance"/>
                          <do_if value="$ContactInterior.exists">
                            <assert value="not $ContactInterior.exists" text="'A new station was selected but the old interior ' + $ContactInterior + ' ' + $ContactInterior.knownname + ' still exists. [Owen]'"/>
                            <destroy_object object="$ContactInterior"/>
                          </do_if>
                          <get_room_definition macro="$CorridorMacro" doors="$CorridorDoors" race="$ContactStation.owner.primaryrace" tags="tag.corridor"/>
                          <get_room_definition macro="$RoomMacro" doors="$RoomDoors" race="$ContactStation.owner.primaryrace" tags="tag.infrastructure"/>
                          <!-- Create persistent interior -->
                          <create_dynamic_interior object="$ContactStation" corridor="$CorridorMacro" room="$RoomMacro" door="$CorridorDoors.{1}" name="'{20007,1171}'" interiorname="$ContactInterior" corridorname="$ContactCorridor" roomname="$ContactRoom" persistent="true" private="true"/>
                          <create_cue_actor name="$Contact" cue="$MissionCue" macro="macro.character_argon_male_plot_shipmod_contact_macro">
                            <owner exact="faction.argon"/>
                            <page exact="10153"/>
                            <!--TODO @Owen Put name in textDB-->
                            <name name="'{20301,1085} {20301,1263}'"/>
                            <skills>
                              <skill type="management" exact="7"/>
                              <skill type="morale" exact="5"/>
                              <skill type="piloting" exact="5"/>
                              <skill type="engineering" exact="9"/>
                              <skill type="boarding" exact="7"/>
                            </skills>
                          </create_cue_actor>
                          <set_entity_traits entity="$Contact" missionactor="true" customhandler="true" subtitlename="true"/>
                          <set_entity_overrides entity="$Contact" title="'{30222,1250}'" icon="'dronedealer'"/>
                          <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $Contact,                              table[                             $requestercue = namespace,                             $location = $ContactRoom,                             $priority = 100,                             $position = position.[2.4m, 0.2m, -6.8m],                             $rotation = rotation.[-169deg, 0deg, 0deg],                             $debugchance = $DebugChance,                             $debugcaller = if $DebugChance == 100 then this else null]                             ]"/>
                        </do_if>
                      </do_else>
                      <do_if value="$Contact.exists">
                        <create_mission cue="$MissionCue" name="{30222,1201}" description="{30222,1202} + '\n' + (if player.entity.isfemale then {30222,1204} else {30222,1203})" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}">
                          <briefing>
                            <objective step="1" action="objective.talkto" object="$Contact"/>
                            <objective step="$Step_DeliverWare" action="objective.deliver" text="$InventoryWare.name"/>
                          </briefing>
                        </create_mission>
                        <set_objective_from_briefing cue="$MissionCue" step="1"/>
                      </do_if>
                      <do_else>
                        <debug_text text="'Unable to place contact [Owen]'" filter="error"/>
                      </do_else>
                    </do_else>
                  </actions>
                </cue>
                <!--TODO @Owen clean up $Contact once the research is done-->
                <cue name="RM_ShipMod_Contact_Conv_Started" instantiate="true">
                  <conditions>
                    <check_any>
                      <event_conversation_started/>
                      <event_conversation_returned_to_section/>
                    </check_any>
                    <check_value value="@$Contact.exists and event.object == $Contact"/>
                  </conditions>
                  <actions>
                    <do_if value="event.name == 'event_conversation_started'">
                      <do_if value="$VisitedContact">
                        <add_npc_line speaker="$Contact" line="[30222006, 30222007].random"/>
                      </do_if>
                      <do_else>
                        <add_npc_line speaker="$Contact" line="30222001"/>
                      </do_else>
                    </do_if>
                    <do_if value="player.entity.inventory.{$InventoryWare}.count == 0">
                      <do_if value="$ReceivedItem">
                        <!--Steal this line from the diplomatic mission page-->
                        <set_value name="$ReplacementCost" exact="10000Cr"/>
                        <add_player_choice text="{30202,711}" section="lost_item" comment="Sorry. I lost it." selectable="player.money ge $ReplacementCost" tooltip="$ReplacementCost.formatted.default + ' ' + {1001,101}"/>
                      </do_if>
                      <do_else>
                        <add_player_choice text="{30222,1230}" section="get_item"/>
                      </do_else>
                    </do_if>
                    <add_player_choice text="{1002,2}" section="contact_goodbye" position="bottom_left"/>
                    <set_value name="$VisitedContact" exact="true"/>
                  </actions>
                </cue>
                <cue name="RM_ShipMod_Contact_Conv_Next" instantiate="true">
                  <conditions>
                    <event_conversation_next_section/>
                    <check_value value="@$Contact.exists and event.object == $Contact"/>
                  </conditions>
                  <actions>
                    <do_if value="event.param == 'get_item'">
                      <set_value name="$ReceivedItem" exact="true"/>
                      <!--
                      Here you go.
                      I owe that Boron a favour, so don't worry about the cost.
                      You do know it's illegal without the proper licence, right?-->
                      <add_npc_line speaker="$Contact" line="30222002"/>
                      <add_npc_line speaker="$Contact" line="30222003" delay="0.5s"/>
                      <add_npc_line speaker="$Contact" line="30222004"/>
                      <add_npc_line speaker="$Contact" line="30222005"/>
                      <add_inventory entity="player.entity" ware="$InventoryWare" exact="1"/>
                      <signal_cue_instantly cue="RM_ShipMod_Deliver_Ref" param="['set_passive', false]"/>
                    </do_if>
                    <do_elseif value="event.param == 'lost_item'">
                      <add_inventory entity="player.entity" ware="$InventoryWare" exact="1"/>
                      <!--
                      Here you go.
                      I think our business is done.-->
                      <add_npc_line speaker="$Contact" line="30222002"/>
                      <add_npc_line speaker="$Contact" line="30222009"/>
                      <signal_cue_instantly cue="RM_ShipMod_Deliver_Ref" param="['set_passive', false]"/>
                    </do_elseif>
                    <do_elseif value="event.param == 'contact_goodbye' or event.param == 'g_cancel'">
                      <add_npc_line speaker="$Contact" line="30222008"/>
                    </do_elseif>
                  </actions>
                </cue>
                <cue name="RM_ShipMod_Deliver_Ref" ref="md.RML_Deliver_Inventory.Deliver_Inventory">
                  <param name="EndSignalCue" value="RM_ShipMod_Delivered"/>
                  <param name="MissionCue" value="$MissionCue"/>
                  <param name="StartStep" value="$DeliverStep"/>
                  <param name="IsPassive" value="true"/>
                  <!--Delivery params-->
                  <param name="WaresTableParam" value="table[{$InventoryWare} = 1]"/>
                  <param name="DeliveryNPC" value="$Boron_Mentor"/>
                  <param name="ProgressBarText" value="{30222,101}"/>
                  <param name="ConversationOptionText" value="{30222,102}"/>
                  <param name="ConversationTipText" value="{30135,105}"/>
                  <param name="PlaceNPC" value="false"/>
                  <param name="DebugChance" value="$DebugChance"/>
                </cue>
                <cue name="RM_ShipMod_Delivered">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <!--
                    Now then. We should be able to begin our research.
                    I look forward to seeing how this turns out.-->
                    <speak actor="$Boron_Mentor" line="[30222019, 30201170]" priority="100" caninterrupt="false"/>
                    <do_for_each name="$Precursor" in="$ResearchWare.research.precursors.list">
                      <add_research ware="$Precursor"/>
                    </do_for_each>
                    <remove_mission cue="$MissionCue" type="completed"/>
                    <cancel_cue cue="RM_ShipMod_Mission"/>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="RM_WeaponMod" namespace="this">
          <conditions>
            <event_cue_completed cue="UnlockResearch"/>
          </conditions>
          <actions>
            <set_value name="$ResearchWare" exact="ware.research_mod_weapon_mk1"/>
            <set_value name="$AlreadyResearched" exact="false"/>
            <do_for_each name="$Precursor" in="$ResearchWare.research.precursors.list">
              <do_if value="$Precursor.research.unlocked">
                <set_value name="$AlreadyResearched" exact="true"/>
                <debug_text text="'Research was already unlocked. Cancelling precursor mission for ' + $ResearchWare.name" filter="savegame"/>
                <break/>
              </do_if>
            </do_for_each>
          </actions>
          <cues>
            <cue name="RM_WeaponMod_Mission" onfail="cancel">
              <conditions>
                <check_value value="not $AlreadyResearched"/>
              </conditions>
              <actions>
                <set_value name="$MissionCue" exact="namespace"/>
                <set_value name="$InventoryWare" exact="ware.inv_charged_particle_regulator"/>
                <set_value name="$HQ" exact="namespace.parent.$HQ"/>
                <set_value name="$Boron_Mentor" exact="namespace.parent.$Boron_Mentor"/>
                <set_value name="$ResearchActive" exact="false"/>
                <set_value name="$DebugChance" exact="0"/>
                <set_value name="$MissionSuspendedTime" exact="null"/>
                <create_group groupname="$CacheLockboxes"/>
                <create_group groupname="$UnopenedLockboxes"/>
                <create_group groupname="$DroppedObjects"/>
                <create_group groupname="$LaserTowers"/>
              </actions>
              <cues>
                <cue name="RM_WeaponMod_ProductionStarted" instantiate="true">
                  <conditions>
                    <event_player_production_started research="true"/>
                    <check_value value="$ResearchWare == event.param2"/>
                  </conditions>
                  <actions>
                    <set_value name="$ResearchActive" exact="true"/>
                    <debug_text text="'Started production for ware ' + $ResearchWare" chance="$DebugChance"/>
                    <assert value="not $MissionCue.hasmission" text="'Mission cue ' + $MissionCue + ' already has a mission [Owen]'"/>
                  </actions>
                  <delay exact="0.5s"/>
                  <actions>
                    <do_if value="not $MissionSuspendedTime or player.age ge $MissionSuspendedTime">
                      <!--
                      Very well. I will use all of my past experience to deliver the best, and safest, improvements to weapon technologies.
                      This place, however, is hardly a weapon development facility.
                      Fortunately, I know where my Split captors kept a cache of weapon equipment.-->
                      <speak actor="$Boron_Mentor" line="[30222047, 0.2s, 30222048, 0.2s, 30222050]" priority="100" caninterrupt="false"/>
                      <debug_text text="player.age + ' intro dialogue to mission'" chance="$DebugChance"/>
                    </do_if>
                    <do_else>
                      <!--
                      There is a task you must do before we can start.
                      I will let you know when we get another opportunity.-->
                      <speak actor="$Boron_Mentor" line="[30201301, 0.2s, 30222022]" priority="100" caninterrupt="false"/>
                      <debug_text text="player.age + ' standby dialogue for mission'" chance="$DebugChance"/>
                    </do_else>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_ProductionAborted" instantiate="true">
                  <conditions>
                    <event_player_production_cancelled research="true"/>
                    <check_value value="event.param3.indexof.{$ResearchWare}"/>
                  </conditions>
                  <actions>
                    <set_value name="$ResearchActive" exact="false"/>
                    <do_if value="$MissionCue.hasmission">
                      <remove_mission cue="$MissionCue" type="aborted"/>
                    </do_if>
                    <do_if value="not $MissionSuspendedTime">
                      <signal_cue_instantly cue="RM_WeaponMod_SuspendMission" param="player.age + 30s"/>
                    </do_if>
                    <debug_text text="player.age + ' aborted production. $MissionSuspendedTime: ' + $MissionSuspendedTime" chance="$DebugChance"/>
                    <reset_cue cue="RM_WeaponMod_StartMission"/>
                  </actions>
                </cue>
                <!--event.param = suspend endtime-->
                <cue name="RM_WeaponMod_SuspendMission" instantiate="true">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <set_value name="$MissionSuspendedTime" exact="event.param"/>
                    <signal_cue_instantly cue="RM_WeaponMod_Deliver_Ref" param="['set_passive', true]"/>
                  </actions>
                </cue>
                <!--$MissionSuspendedTime is set if the player failed e.g. blew up all lockboxes.-->
                <cue name="RM_WeaponMod_Reset_Mission" checkinterval="1s">
                  <conditions>
                    <check_value value="$MissionSuspendedTime and player.age ge $MissionSuspendedTime"/>
                  </conditions>
                  <actions>
                    <set_value name="$MissionSuspendedTime" exact="0"/>
                    <do_if value="$ResearchActive">
                      <speak actor="$Boron_Mentor" line="30200019" priority="100" caninterrupt="false"/>
                    </do_if>
                    <debug_text text="player.age + ' $MissionSuspendedTime has passed. ' + (if $ResearchActive then 'activate mission' else 'research no currently active')" chance="$DebugChance"/>
                  </actions>
                  <delay exact="1s"/>
                  <actions>
                    <reset_cue cue="RM_WeaponMod_Reset_Mission"/>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_ProductionStarted_SpeakEnd" instantiate="true">
                  <conditions>
                    <event_speak_finished actor="$Boron_Mentor"/>
                    <!--Use $ResearchActive just in case another mission triggers the same lines-->
                    <check_value value="$ResearchActive and event.param2 == 30222047 or event.param2 == 30200019"/>
                  </conditions>
                  <actions>
                    <signal_cue cue="RM_WeaponMod_StartMission"/>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_StartMission" instantiate="true">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <debug_text text="player.age + ' Start mission'" chance="$DebugChance"/>
                    <do_if value="$UnopenedLockboxes.count == 0">
                      <debug_text text="player.age + ' Crate lockboxes'" chance="$DebugChance"/>
                      <find_sector_in_range name="$CacheSector" mindistance="1" maxdistance="2" object="$HQ"/>
                      <do_if value="not $CacheSector">
                        <set_value name="$CacheSector" exact="$HQ.sector"/>
                      </do_if>
                      <set_value name="$SectorCorePos" exact="$CacheSector.coreposition"/>
                      <do_any>
                        <set_value name="$CacheX" min="150km" max="200km"/>
                        <set_value name="$CacheX" min="-200km" max="-150km"/>
                      </do_any>
                      <set_value name="$CacheY" min="10km" max="15km"/>
                      <do_any>
                        <set_value name="$CacheZ" min="150km" max="200km"/>
                        <set_value name="$CacheZ" min="-200km" max="-150km"/>
                      </do_any>
                      <set_value name="$CachePos" exact="position.[$SectorCorePos.x + $CacheX, $SectorCorePos.y + $CacheY, $SectorCorePos.z + $CacheZ]"/>
                      <remove_value name="$SectorCorePos"/>
                      <remove_value name="$CacheX"/>
                      <remove_value name="$CacheY"/>
                      <remove_value name="$CacheZ"/>
                      <set_value name="$InventoryDropped" exact="false"/>
                      <set_value name="$CacheDestroyed" exact="false"/>
                      <do_all exact="3">
                        <create_lockbox name="$CacheLockbox" groupname="$CacheLockboxes" macro="macro.sm_gen_lockbox_rare_01_macro" sector="$CacheSector">
                          <safepos value="$CachePos" space="$CacheSector" radius="300m" min="400m" max="600m"/>
                        </create_lockbox>
                        <!--TODO @Owen #important find other wares to put in these lockboxes, but only the first spawned group-->
                        <add_cargo object="$CacheLockbox" ware="$InventoryWare" exact="1"/>
                        <add_to_group groupname="$UnopenedLockboxes" object="$CacheLockbox"/>
                      </do_all>
                      <do_all exact="2">
                        <create_ship name="$LaserTower" groupname="$LaserTowers" macro="macro.ship_gen_s_lasertower_01_a_macro" sector="$CacheSector">
                          <pilot>
                            <select race="race.drone"/>
                          </pilot>
                          <owner exact="faction.civilian"/>
                          <safepos value="$CachePos" space="$CacheSector" radius="350m" min="1000m" max="1300m"/>
                        </create_ship>
                        <set_object_radar_visible object="$LaserTower" visible="false"/>
                        <create_order id="'Lasertower'" object="$LaserTower" default="true"/>
                      </do_all>
                      <remove_value name="$CacheLockbox"/>
                      <remove_value name="$LaserTower"/>
                    </do_if>
                    <do_else>
                      <debug_text text="player.age + ' Use existing lockboxes'" chance="$DebugChance"/>
                      <set_value name="$RandomLockbox" exact="$UnopenedLockboxes.random"/>
                      <set_value name="$CacheSector" exact="$RandomLockbox.sector"/>
                      <create_position name="$CachePos" object="$RandomLockbox" space="$CacheSector" min="3km" max="4km"/>
                      <remove_value name="$RandomLockbox"/>
                    </do_else>
                    <create_mission cue="$MissionCue" name="{30222,1301}" description="{30222,1302} + '\n' + {30222,1303}" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}">
                      <briefing>
                        <objective step="1" action="objective.find" text="{30222,1350}" object="$CacheSector" offset="$CachePos" radius="20km" comment="Split Weapon Cache"/>
                        <objective step="2" action="objective.deliver" text="$InventoryWare.name"/>
                      </briefing>
                    </create_mission>
                    <set_objective_from_briefing cue="$MissionCue" step="1"/>
                    <reset_cue cue="RM_WeaponMod_Approaching_Lockbox"/>
                    <reset_cue cue="RM_WeaponMod_Near_Lasertower"/>
                  </actions>
                </cue>
                <library name="RM_WeaponMod_Activate_Lasertowers">
                  <actions>
                    <do_for_each name="$LaserTower" in="$LaserTowers">
                      <set_object_radar_visible object="$LaserTower" visible="true"/>
                      <set_relation_boost object="$LaserTower" faction="faction.player" silent="true" decay="0.00000001" value="-0.7"/>
                      <!--<do_if value="$LaserTower.owner == faction.civilian">
                        <set_owner object="$LaserTower" faction="faction.criminal" overridenpc="true"/>
                      </do_if>-->
                    </do_for_each>
                  </actions>
                </library>
                <cue name="RM_WeaponMod_Approaching_Lockbox" checkinterval="1s">
                  <conditions>
                    <check_value value="$MissionCue.hasmission"/>
                    <check_any exact="$CacheLockboxes.count" counter="$i">
                      <check_value value="player.sector == $CacheLockboxes.{$i}.sector and $CacheLockboxes.{$i}.distanceto.{player.entity} lt 20km"/>
                    </check_any>
                  </conditions>
                  <actions>
                    <!--
                    The cache is located around here.
                    Do be careful in this area.-->
                    <speak actor="$Boron_Mentor" line="[30222074, 0.5s, 30222051]"/>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_Near_Lasertower" checkinterval="1s">
                  <conditions>
                    <check_any exact="$LaserTowers.count" counter="$i">
                      <check_value value="player.sector == $LaserTowers.{$i}.sector and $LaserTowers.{$i}.distanceto.{player.entity} lt 2km"/>
                    </check_any>
                  </conditions>
                  <actions>
                    <do_for_each name="$LaserTower" in="$LaserTowers">
                      <set_object_radar_visible object="$LaserTower" visible="true"/>
                    </do_for_each>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_Lockbox_Content_Dropped" instantiate="true">
                  <conditions>
                    <event_object_dropped_objects group="$CacheLockboxes"/>
                  </conditions>
                  <actions>
                    <do_if value="$MissionCue.hasmission">
                      <!--Once you have what we need, feel free to destroy anything which remains.-->
                      <speak actor="$Boron_Mentor" line="30222052"/>
                    </do_if>
                    <remove_from_group group="$UnopenedLockboxes" object="event.object"/>
                    <do_for_each name="$Drop" in="event.param">
                      <do_if value="$Drop.wares.{$InventoryWare}.exists">
                        <add_to_group groupname="$DroppedObjects" object="$Drop"/>
                        <do_if value="not $InventoryDropped">
                          <set_value name="$InventoryDropped" exact="true"/>
                          <!--Once you have what we need, feel free to destroy anything which remains.-->
                          <speak actor="$Boron_Mentor" line="30222052"/>
                          <set_objective cue="$MissionCue" action="objective.collect" text="$InventoryWare.name" group="$DroppedObjects"/>
                        </do_if>
                      </do_if>
                    </do_for_each>
                    <include_actions ref="RM_WeaponMod_Activate_Lasertowers"/>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_Cache_Attacked" instantiate="true">
                  <conditions>
                    <check_any>
                      <event_object_attacked group="$LaserTowers"/>
                      <event_object_attacked group="$CacheLockboxes"/>
                    </check_any>
                  </conditions>
                  <actions>
                    <include_actions ref="RM_WeaponMod_Activate_Lasertowers"/>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_Lockboxes_Destroyed" instantiate="true">
                  <conditions>
                    <event_object_destroyed group="$CacheLockboxes"/>
                  </conditions>
                  <actions>
                    <remove_from_group group="$UnopenedLockboxes" object="event.object"/>
                    <do_if value="$UnopenedLockboxes.count == 0 and $DroppedObjects.count == 0 and RM_WeaponMod_Deliver_Ref.$IsPassive">
                      <!--This is quite a setback.-->
                      <speak actor="$Boron_Mentor" line="30222020"/>
                      <remove_mission cue="$MissionCue" type="failed" reason="{30004,6030}"/>
                      <signal_cue_instantly cue="RM_WeaponMod_SuspendMission" param="player.age + 2min"/>
                    </do_if>
                    <do_elseif value="not $CacheDestroyed and not RM_WeaponMod_Deliver_Ref.$IsPassive and @event.param.isplayerowned">
                      <!--Ha! I do wish to see the look on their faces.-->
                      <speak actor="$Boron_Mentor" line="30222053"/>
                      <set_value name="$CacheDestroyed" exact="true"/>
                    </do_elseif>
                    <include_actions ref="RM_WeaponMod_Activate_Lasertowers"/>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_Drop_Collected" instantiate="true">
                  <conditions>
                    <event_object_destroyed group="$DroppedObjects" method="killmethod.collected"/>
                    <check_value value="@event.param.isplayerowned"/>
                  </conditions>
                  <actions>
                    <do_if value="RM_WeaponMod_Deliver_Ref.$IsPassive">
                      <!--Bring the items to me and we can get started.-->
                      <speak actor="$Boron_Mentor" line="30222018" priority="100" caninterrupt="false"/>
                      <signal_cue_instantly cue="RM_WeaponMod_Deliver_Ref" param="['set_passive', false]"/>
                    </do_if>
                  </actions>
                </cue>
                <cue name="RM_WeaponMod_Deliver_Ref" ref="md.RML_Deliver_Inventory.Deliver_Inventory">
                  <param name="EndSignalCue" value="RM_WeaponMod_Delivered"/>
                  <param name="MissionCue" value="$MissionCue"/>
                  <param name="StartStep" value="2"/>
                  <param name="IsPassive" value="true"/>
                  <!--Delivery params-->
                  <param name="WaresTableParam" value="table[{$InventoryWare} = 1]"/>
                  <param name="DeliveryNPC" value="$Boron_Mentor"/>
                  <param name="ProgressBarText" value="{30222,101}"/>
                  <param name="ConversationOptionText" value="{30222,102}"/>
                  <param name="ConversationTipText" value="{30135,105}"/>
                  <param name="PlaceNPC" value="false"/>
                  <param name="DebugChance" value="$DebugChance"/>
                </cue>
                <cue name="RM_WeaponMod_Delivered">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <actions>
                    <!--
                    Now then. We should be able to begin our research.
                    I look forward to seeing how this turns out.-->
                    <speak actor="$Boron_Mentor" line="[30222019, 30201170]" priority="100" caninterrupt="false"/>
                    <do_for_each name="$Precursor" in="$ResearchWare.research.precursors.list">
                      <add_research ware="$Precursor"/>
                    </do_for_each>
                    <remove_mission cue="$MissionCue" type="completed"/>
                    <cancel_cue cue="RM_WeaponMod_Mission"/>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="RM_Venture" namespace="this">
          <conditions>
            <!--TODO @Owen @Roger nothing is currently triggering this mission-->
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$MissionCue" exact="namespace"/>
            <set_value name="$HQ" exact="namespace.parent.$HQ"/>
            <set_value name="$Boron_Mentor" exact="namespace.parent.$Boron_Mentor"/>
            <set_value name="$ResearchActive" exact="event.name == 'event_player_production_started'"/>
            <set_value name="$DebugChance" exact="0"/>
          </actions>
          <cues>
            <cue name="RM_Venture_StartMission_V2">
              <actions>
                <debug_text text="player.age + ' Start mission'" chance="$DebugChance"/>
                <set_value name="$VenturePlatform" exact="null"/>
                <set_value name="$VentureDock" exact="null"/>
                <find_station_by_true_owner name="$PlayerStations" space="player.galaxy" faction="faction.player" multiple="true" sortbyvalue="loop.element != player.headquarters"/>
                <do_for_each name="$PlayerStation" in="$PlayerStations">
                  <debug_text text="'checking ' + $PlayerStation.knownname"/>
                  <find_object_component name="$VenturePlatform" object="$PlayerStation" class="class.ventureplatform" checkoperational="false" chance="if $VenturePlatform then 0 else 100"/>
                  <find_object_component name="$VentureDock" object="$PlayerStation" macro="macro.dockarea_gen_m_venturer_01_macro" checkoperational="false" chance="if $VentureDock then 0 else 100"/>
                </do_for_each>
                <do_if value="$VenturePlatform and $VentureDock">
                  <debug_text text="'Player has already built a venture platform and dock.'" chance="$DebugChance"/>
                  <signal_cue cue="RM_Venture_Finish"/>
                </do_if>
                <do_else>
                  <create_mission cue="$MissionCue" name="{30222,1601}" description="{30222,1602}" type="missiontype.plot" faction="faction.civilian" difficulty="level.medium" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}"/>
                  <run_actions ref="RM_Venture_Update_Objectives">
                    <param name="MissionCue" value="$MissionCue"/>
                    <param name="HQ" value="$HQ"/>
                    <param name="DockRequired" value="not $VentureDock"/>
                    <param name="PlatformRequired" value="not $VenturePlatform"/>
                  </run_actions>
                </do_else>
              </actions>
            </cue>
            <!--TODO @Owen remove references to the HQ-->
            <library name="RM_Venture_Update_Objectives" purpose="run_actions">
              <params>
                <param name="MissionCue"/>
                <param name="HQ"/>
                <param name="DockRequired"/>
                <param name="PlatformRequired"/>
              </params>
              <actions>
                <do_if value="$DockRequired and $PlatformRequired">
                  <update_mission cue="$MissionCue">
                    <briefing>
                      <objective step="1" action="objective.build_module" text="{20104,101901}" object="$HQ" comment="Venture Platform"/>
                      <objective step="2" action="objective.build_module" text="macro.dockarea_gen_m_venturer_01_macro.name" object="$HQ"/>
                    </briefing>
                  </update_mission>
                  <set_objective_from_briefing cue="$MissionCue" step="1"/>
                </do_if>
                <do_else>
                  <update_mission cue="$MissionCue">
                    <briefing>
                      <objective step="if $PlatformRequired then 1 else 2" action="objective.build_module" text="{20104,101901}" object="$HQ"/>
                      <objective step="if $DockRequired then 1 else 2" action="objective.build_module" text="macro.dockarea_gen_m_venturer_01_macro.name" object="$HQ"/>
                    </briefing>
                  </update_mission>
                  <set_objective_from_briefing cue="$MissionCue" step="2"/>
                </do_else>
              </actions>
            </library>
            <cue name="RM_Venture_Update_Event" instantiate="true">
              <conditions>
                <event_object_signalled object="$Boron_Mentor" param="'venture_related_build'"/>
              </conditions>
              <actions>
                <do_if value="event.param2.$dockstatus and event.param2.$platformstatus">
                  <signal_cue cue="RM_Venture_Finish"/>
                </do_if>
                <do_else>
                  <run_actions ref="RM_Venture_Update_Objectives">
                    <param name="MissionCue" value="$MissionCue"/>
                    <param name="HQ" value="$HQ"/>
                    <param name="DockRequired" value="not event.param2.$dockstatus"/>
                    <param name="PlatformRequired" value="not event.param2.$platformstatus"/>
                  </run_actions>
                </do_else>
              </actions>
            </cue>
            <cue name="RM_Venture_Finish">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <remove_mission cue="$MissionCue" type="completed"/>
                <cancel_cue cue="RM_Venture"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <!--For presentation reasons we have this cue waiting for a suitable moment to trigger the warp HQ research mention from Boso-->
        <cue name="RM_Warp_HQ_Wait" checkinterval="20s" namespace="this">
          <conditions>
            <check_value value="UnlockResearch.state == cuestate.complete and ware.research_teleportation_range_03.research.unlocked and not ware.research_warp_hq_01.research.unlocked"/>
          </conditions>
          <delay exact="if RM_Warp_HQ.$WaitTime? then RM_Warp_HQ.$WaitTime else 2min"/>
          <actions>
            <!--Wait until there's no fighting or conversation going on-->
            <do_if value="(not $LastAttackTime? or $LastAttackTime + 30s lt player.age) and (not player.isinconversation) and (player.age ge (md.$LastMentorSpeak + 10min))">
              <signal_cue cue="RM_Warp_HQ"/>
            </do_if>
            <do_else>
              <!--Can't save this value here as it'll be removed on reset-->
              <set_value name="RM_Warp_HQ.$WaitTime" exact="30s"/>
              <reset_cue cue="this"/>
            </do_else>
          </actions>
          <cues>
            <cue name="RM_Warp_HQ_Wait_Last_Attack" instantiate="true">
              <conditions>
                <event_object_attacked group="global.$PlayerControlledGroup"/>
              </conditions>
              <actions>
                <set_value name="$LastAttackTime" exact="player.age"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <!--TODO @Owen if HQ has been warped with the final research but it needs to be researched again, give the conversation option but have Boso remind of the research-->
        <cue name="RM_Warp_HQ" namespace="this">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$MissionCue" exact="namespace"/>
            <set_value name="$HQ" exact="namespace.parent.$HQ"/>
            <set_value name="$Boron_Mentor" exact="namespace.parent.$Boron_Mentor"/>
            <set_value name="$ResearchWare" exact="ware.research_warp_hq_01"/>
            <find_sector name="$GrandExchangeI" macro="macro.cluster_01_sector001_macro"/>
            <set_value name="$DebugChance" exact="0"/>
            <!--TODO @Owen move to base cue and convert other parts to use it?-->
            <set_value name="$CharacterCutsceneTable" exact="table[]"/>
            <set_value name="$CharacterCutsceneTable.{$Boron_Mentor}" exact="table[$key = 'ShowCharacterBoron']"/>
          </actions>
          <cues>
            <!--
            May I have your attention?
            I would like to enact an experiment replicating the conditions that brought this facility to this location.
            This is something we must do face to face.-->
            <cue name="RM_Warp_HQ_Intro" ref="md.LIB_Dialog.Speak_Actor">
              <param name="Actor" value="$Boron_Mentor"/>
              <param name="CutsceneKey" value="$CharacterCutsceneTable.{$Boron_Mentor}"/>
              <param name="DelayInitial" value="2s"/>
              <param name="Lines" value="[[30228001], [30228002], [30228003]]"/>
              <param name="EndSignalCue" value="RM_Warp_HQ_Intro_Talkto"/>
            </cue>
            <cue name="RM_Warp_HQ_Intro_Talkto">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <debug_text text="player.age + ' Start mission'" chance="$DebugChance"/>
                <create_mission cue="$MissionCue" name="{30228,1001}" description="{30228,1002}" type="missiontype.plot" faction="faction.civilian" difficulty="level.hard" abortable="false" icon="'briefing_boso_ta_01'" iconcaption="{30201,2}" activate="false">
                  <objective step="1" action="objective.talkto" object="$Boron_Mentor"/>
                </create_mission>
              </actions>
              <cues>
                <cue name="RM_Warp_HQ_Intro_Conv_Started" instantiate="true">
                  <conditions>
                    <event_conversation_started actor="$Boron_Mentor"/>
                    <check_value value="player.room == $Boron_Mentor.room"/>
                  </conditions>
                  <actions>
                    <!--TODO @Owen use a custom handler? Or just override the initial speak?-->
                    <!--<add_npc_line speaker="$Boron_Mentor" line="30228004" comment="Good timing."/>-->
                    <add_player_choice text="{30228,3001}" section="hq_warp_ask"/>
                  </actions>
                </cue>
                <cue name="RM_Warp_HQ_Intro_Conv_Next_Section">
                  <conditions>
                    <event_conversation_next_section actor="$Boron_Mentor" section="hq_warp_ask"/>
                  </conditions>
                  <actions>
                    <cancel_cue cue="RM_Warp_HQ_Intro_Conv_Started"/>
                    <!--
                    You will find that a new item of research is available.
                    Given what we have learned from our teleportation research, I believe we can apply it on a grand scale.
                    This experiment will result in the relocation of this station to another position within this sector. That is unless we run into some disastrous issue of course.-->
                    <add_npc_line speaker="$Boron_Mentor" line="30228005"/>
                    <add_npc_line speaker="$Boron_Mentor" line="30228006"/>
                    <add_npc_line speaker="$Boron_Mentor" line="30228007"/>
                  </actions>
                  <cues>
                    <cue name="RM_Warp_HQ_Intro_Conv_End" version="3">
                      <conditions>
                        <event_conversation_finished actor="$Boron_Mentor"/>
                      </conditions>
                      <actions>
                        <add_encyclopedia_entry type="researchables" item="'research_warp_hq_01'"/>
                        <substitute_text source="{30228,1003}" text="$Description">
                          <replace string="'$SECTOR$'" with="Start.$HQSpawnSector.knownname"/>
                        </substitute_text>
                        <update_mission cue="$MissionCue" description="$Description"/>
                        <remove_value name="$Description"/>
                        <set_objective cue="$MissionCue" step="2" action="objective.research" text="$ResearchWare.name" updatebriefing="true"/>
                        <!--TODO @Owen now or when research starts?
                        Boso 30228008: Please gather the required resources so that I can begin.-->
                      </actions>
                      <patch sinceversion="2" state="complete">
                        <add_encyclopedia_entry type="researchables" item="'research_warp_hq_01'"/>
                      </patch>
                      <patch sinceversion="3" state="complete">
                        <substitute_text source="{30228,1003}" text="$Description">
                          <replace string="'$SECTOR$'" with="Start.$HQSpawnSector.knownname"/>
                        </substitute_text>
                        <update_mission cue="$MissionCue" description="$Description"/>
                      </patch>
                      <cues>
                        <cue name="RM_Warp_HQ_ProductionStarted" instantiate="true">
                          <conditions>
                            <event_player_production_started research="true"/>
                            <check_value value="$ResearchWare == event.param2"/>
                          </conditions>
                          <actions>
                            <!--TODO @Owen Boso speak-->
                            <set_objective cue="$MissionCue" step="2" action="objective.wait" text="{30228,2001}" updatebriefing="true"/>
                          </actions>
                        </cue>
                        <cue name="RM_Warp_HQ_ProductionAborted" instantiate="true">
                          <conditions>
                            <event_player_production_cancelled research="true"/>
                            <check_value value="event.param3.indexof.{$ResearchWare}"/>
                          </conditions>
                          <actions>
                            <set_objective cue="$MissionCue" step="2" action="objective.research" text="$ResearchWare.name" updatebriefing="true"/>
                          </actions>
                        </cue>
                        <cue name="RM_Warp_HQ_ProductionFinished">
                          <conditions>
                            <event_player_production_finished research="true"/>
                            <check_value value="event.param2 == $ResearchWare"/>
                          </conditions>
                          <actions>
                            <cancel_cue cue="RM_Warp_HQ_ProductionStarted"/>
                            <cancel_cue cue="RM_Warp_HQ_ProductionAborted"/>
                          </actions>
                          <cues>
                            <cue name="RM_Warp_HQ_ProductionFinished_LastSpeak" checkinterval="10s">
                              <conditions>
                                <check_value value="player.age ge (md.$LastMentorSpeak + 10min)"/>
                                <cue_is_waiting cue="RM_Warp_HQ_ProductionFinished_Speak_End"/>
                              </conditions>
                              <cues>
                                <cue name="RM_Warp_HQ_ProductionFinished_Speak_v2" ref="md.LIB_Dialog.Speak_Actor">
                                  <param name="Actor" value="$Boron_Mentor"/>
                                  <param name="CutsceneKey" value="$CharacterCutsceneTable.{$Boron_Mentor}"/>
                                  <param name="DelayInitial" value="2s"/>
                                  <param name="Lines" value="[[30228009]]" comment="{10201,30228009}"/>
                                  <param name="EndSignalCue" value="RM_Warp_HQ_ProductionFinished_Speak_End"/>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="PATCH_Cancel_LastSpeak" onfail="cancel">
                              <conditions>
                                <check_value value="cuestate.waiting != RM_Warp_HQ_ProductionFinished_Speak_End.state"/>
                              </conditions>
                              <actions>
                                <cancel_cue cue="RM_Warp_HQ_ProductionFinished_LastSpeak"/>
                              </actions>
                            </cue>
                            <!--Check if the mission is active. If not, the player may be doing something else.-->
                            <cue name="RM_Warp_HQ_ProductionFinished_Speak_End">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <actions>
                                <do_if value="$MissionCue.hasguidance">
                                  <signal_cue cue="RM_Warp_HQ_Beacon"/>
                                  <cancel_cue cue="this"/>
                                </do_if>
                                <do_else>
                                  <set_objective cue="$MissionCue" step="3" action="objective.custom" customaction="{30228,2002}" text="{30228,2003}" updatebriefing="true"/>
                                </do_else>
                              </actions>
                              <cues>
                                <cue name="RM_Warp_HQ_Trigger_Beacon">
                                  <conditions>
                                    <event_guidance_enabled cue="$MissionCue"/>
                                  </conditions>
                                  <actions>
                                    <signal_cue cue="RM_Warp_HQ_Beacon"/>
                                  </actions>
                                </cue>
                              </cues>
                            </cue>
                            <cue name="RM_Warp_HQ_Beacon">
                              <conditions>
                                <event_cue_signalled/>
                              </conditions>
                              <cues>
                                <!--
                                Boso 30228010: As this is the first attempt, I will limit the acceptable range to this sector.
                                Boso 30228011: To help improve accuracy I will require a beacon be placed.
                                Boso 30228012: I will warn you that I expect a significant blast wave which may result in wide-reaching destruction.
                                Boso 30228013: I suggest you place the beacon in an unpopulated location, although I am somewhat curious how destructive this blast would be.
                                Boso 30228029: When you are done, come and speak to me.-->
                                <cue name="RM_Warp_HQ_Beacon_Speak" ref="md.LIB_Dialog.Speak_Actor">
                                  <param name="Actor" value="$Boron_Mentor"/>
                                  <param name="CutsceneKey" value="$CharacterCutsceneTable.{$Boron_Mentor}"/>
                                  <param name="DelayInitial" value="2s"/>
                                  <param name="Lines" value="[[30228010], [30228011], [30228012], [30228013], [30228029]]"/>
                                  <param name="EndSignalCue" value="RM_Warp_HQ_Beacon_Speak_End"/>
                                </cue>
                                <cue name="RM_Warp_HQ_Beacon_Speak_End">
                                  <conditions>
                                    <event_cue_signalled/>
                                  </conditions>
                                  <actions>
                                    <set_objective cue="$MissionCue" step="3" action="objective.deploy" text="{30228,2004}" updatebriefing="true"/>
                                  </actions>
                                  <cues>
                                    <cue name="RM_Warp_HQ_Beacon_Launched" version="3">
                                      <conditions>
                                        <event_navbeacon_launched space="Start.$HQSpawnSector"/>
                                        <check_value value="event.param2.isplayerowned"/>
                                      </conditions>
                                      <patch sinceversion="2" state="waiting">
                                        <substitute_text source="{30228,1003}" text="$Description">
                                          <replace string="'$SECTOR$'" with="$GrandExchangeI.knownname"/>
                                        </substitute_text>
                                        <update_mission cue="$MissionCue" description="$Description"/>
                                        <remove_value name="$Description"/>
                                      </patch>
                                      <patch sinceversion="3" state="waiting">
                                        <substitute_text source="{30228,1003}" text="$Description">
                                          <replace string="'$SECTOR$'" with="Start.$HQSpawnSector.knownname"/>
                                        </substitute_text>
                                        <reset_cue cue="RM_Warp_HQ_Beacon_Launched"/>
                                      </patch>
                                      <cues>
                                        <cue name="RM_Warp_HQ_Beacon_Launched_Speak" ref="md.LIB_Dialog.Speak_Actor">
                                          <param name="Actor" value="$Boron_Mentor"/>
                                          <param name="CutsceneKey" value="$CharacterCutsceneTable.{$Boron_Mentor}"/>
                                          <param name="DelayInitial" value="2s"/>
                                          <param name="Lines" value="[[30228030]]"/>
                                          <param name="EndSignalCue" value="RM_Warp_HQ_Beacon_Launched_Speak_End"/>
                                        </cue>
                                        <cue name="RM_Warp_HQ_Beacon_Launched_Speak_End">
                                          <conditions>
                                            <event_cue_signalled/>
                                          </conditions>
                                          <actions>
                                            <set_objective cue="$MissionCue" step="3" action="objective.talkto" object="$Boron_Mentor" updatebriefing="true"/>
                                            <set_value name="$AllowFirstHQTeleport" exact="true"/>
                                          </actions>
                                          <cues>
                                            <!--event.param = Beacon-->
                                            <cue name="RM_Warp_HQ_Select_Beacon_Selected" version="3">
                                              <conditions>
                                                <event_cue_signalled cue="Warp_HQ_Conv_Handler_Beacon_Selected"/>
                                              </conditions>
                                              <actions>
                                                <remove_mission cue="$MissionCue"/>
                                                <set_value name="$AllowFirstHQTeleport" exact="false"/>
                                              </actions>
                                              <patch sinceversion="3" state="complete">
                                                <add_encyclopedia_entry type="researchables" item="'research_warp_hq_02'"/>
                                              </patch>
                                            </cue>
                                          </cues>
                                        </cue>
                                      </cues>
                                    </cue>
                                  </cues>
                                </cue>
                              </cues>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="Warp_HQ_Conv_Handler" instantiate="true">
          <conditions>
            <event_conversation_started actor="$Boron_Mentor"/>
            <check_value value="event.param == 'default' and ((ware.research_warp_hq_01.research.unlocked and @RM_Warp_HQ.$AllowFirstHQTeleport) or ware.research_warp_hq_02.research.unlocked)"/>
            <!--This isn't the actual cooldown, just to be safe that it can't be spammed-->
            <check_value value="not @$LastHQWarpTime or player.age gt $LastHQWarpTime + 2min"/>
          </conditions>
          <actions>
            <add_player_choice text="{30228,3005}" section="hq_warp_beacon"/>
            <set_value name="$PotentialBeacon" exact="null"/>
          </actions>
        </cue>
        <cue name="Warp_HQ_Conv_Handler_Next_Section" instantiate="true">
          <conditions>
            <event_conversation_next_section actor="$Boron_Mentor"/>
          </conditions>
          <actions>
            <do_if value="event.param == 'hq_warp_beacon'">
              <open_conversation_menu menu="MapMenu" param="[0, 0, true, null, null, 'selectComponent', [ 'hq_warp_beacon_select', [class.navbeacon], 'deployables', true, {30228,3002} ]]" param2="null"/>
            </do_if>
            <do_elseif value="event.param == 'hq_warp_beacon_select'">
              <do_if value="@RM_Warp_HQ.$AllowFirstHQTeleport and event.param2.{1}.sector != $HQSpawnSector">
                <!--I require the beacon to be placed in this sector.-->
                <add_npc_line speaker="$Boron_Mentor" line="30228031"/>
              </do_if>
              <do_else>
                <do_if value="event.param2.{1}.isclass.navbeacon and event.param2.{1}.isplayerowned">
                  <set_value name="$PotentialBeacon" exact="event.param2.{1}"/>
                  <create_position name="$PotentialPos" object="$PotentialBeacon" space="$PotentialBeacon.sector"/>
                  <run_actions ref="Check_HQ_Warp_Destination" result="$BeaconResult">
                    <!--TODO @Owen improve this calculation-->
                    <param name="Radius" value="[$HQ.buildplot.max.length * 1.5, 50km].max"/>
                    <param name="Position" value="$PotentialPos"/>
                    <param name="Sector" value="$PotentialBeacon.sector"/>
                    <param name="Exclude" value="[$HQ]"/>
                    <param name="DebugChance" value="$DebugChance"/>
                  </run_actions>
                  <set_value name="$AllowWarp" exact="true"/>
                  <do_if value="$BeaconResult == 'impossible'">
                    <!--Unfortunately, it seems that there is a immovable object in the target area.-->
                    <add_npc_line speaker="$Boron_Mentor" line="30228023" hidechoices="true"/>
                    <set_value name="$AllowWarp" exact="false"/>
                  </do_if>
                  <do_elseif value="$BeaconResult == 'allied_station'">
                    <!--That location is somewhat inhabited.-->
                    <add_npc_line speaker="$Boron_Mentor" line="30228017" hidechoices="true"/>
                  </do_elseif>
                  <do_elseif value="$BeaconResult == 'allied_ship'">
                    <!--There do appear to be ships at that location which will likely not survive.-->
                    <add_npc_line speaker="$Boron_Mentor" line="30228018" hidechoices="true"/>
                  </do_elseif>
                  <do_elseif value="$BeaconResult == 'enemy'">
                    <!--(clear enemy destination)Oh my. You appear to be planning to use the blast wave as a weapon. Interesting.-->
                    <add_npc_line speaker="$Boron_Mentor" line="30228020" hidechoices="true"/>
                  </do_elseif>
                  <do_elseif value="$BeaconResult == 'clear'">
                    <!--That does appear to be a suitable destination.-->
                    <add_npc_line speaker="$Boron_Mentor" line="30228019" hidechoices="true"/>
                  </do_elseif>
                  <!--Additional lines:
                  30228024: While I dislike saying such things, I must protest against this location.
                  30228025: I do not believe this location is suitable.-->
                  <do_if value="$AllowWarp">
                    <do_if value="$BeaconResult == 'allied_station' or $BeaconResult == 'allied_ship'">
                      <!--I am prepared. Shall I initiate the process?-->
                      <add_npc_line speaker="$Boron_Mentor" line="30228022" hidechoices="true"/>
                    </do_if>
                    <do_else>
                      <!--Would you like me to continue?-->
                      <add_npc_line speaker="$Boron_Mentor" line="30228021" hidechoices="true"/>
                    </do_else>
                    <add_player_choice text="{30228,3003}" section="hq_warp_beacon_confirm"/>
                    <add_player_choice text="{30228,3004}" section="hq_warp_beacon_abort"/>
                  </do_if>
                  <remove_value name="$PotentialPos"/>
                  <remove_value name="$BeaconResult"/>
                </do_if>
              </do_else>
            </do_elseif>
            <do_elseif value="event.param == 'hq_warp_beacon_confirm'">
              <do_if value="$PotentialBeacon.exists">
                <signal_cue_instantly cue="Warp_HQ_Conv_Handler_Beacon_Selected" param="$PotentialBeacon"/>
              </do_if>
            </do_elseif>
            <do_elseif value="event.param == 'hq_warp_beacon_abort'">

            </do_elseif>
          </actions>
        </cue>
        <!--event.param = Beacon-->
        <cue name="Warp_HQ_Conv_Handler_Beacon_Selected" instantiate="true">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$SelectedBeacon" exact="event.param"/>
            <!--Just in case the beacon is destroyed past this point-->
            <set_value name="$SelectedSector" exact="$SelectedBeacon.sector"/>
            <create_position name="$SelectedBeaconPos" object="$SelectedBeacon" space="$SelectedSector"/>
            <debug_text text="'Selected beacon ' + $SelectedBeacon + ' ' + $SelectedBeacon.knownname + ' at ' + $SelectedBeaconPos" chance="$DebugChance"/>
            <run_actions ref="Warp_HQ_To_Destination_Lib">
              <param name="HQ" value="$HQ"/>
              <param name="Boron_Mentor" value="$Boron_Mentor"/>
              <param name="Radius" value="[$HQ.buildplot.max.length * 1.5, 50km].max"/>
              <param name="Position" value="$SelectedBeaconPos"/>
              <param name="Sector" value="$SelectedSector"/>
              <param name="Exclude" value="[$HQ, $HQ.buildstorage]"/>
              <param name="FirstTime" value="RM_Warp_HQ.$AllowFirstHQTeleport"/>
              <param name="DebugChance" value="$DebugChance"/>
            </run_actions>
          </actions>
        </cue>
        <cue name="Check_HQ_Warp_Destination_Debug" instantiate="true">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$Obj" exact="player.ship"/>
            <do_if value="player.target.isclass.navbeacon">
              <set_value name="$Obj" exact="player.target"/>
            </do_if>
            <set_value name="$Sector" exact="$Obj.sector"/>
            <create_position name="$Pos" object="$Obj" space="$Sector"/>
            <run_actions ref="Check_HQ_Warp_Destination" result="$Result">
              <param name="Radius" value="18km" comment="Radius in which to check for obstructions"/>
              <param name="Position" value="$Pos"/>
              <param name="Sector" value="$Sector"/>
              <param name="Exclude" value="[$Obj, $HQ]"/>
              <param name="DebugChance" value="100"/>
            </run_actions>
            <debug_text text="$Result"/>
          </actions>
        </cue>
        <!--Helper library to analyse a potential destination for the HQ to warp to.
        Potential results, listed by priority:
        'impossible'      - There is blocker which can not be removed
        'allied_station'  - There is an allied station
        'allied_ship'     - There is an allied ship
        'enemy'           - There are only enemies
        'clear'           - Location is free of significant obstructions
        -->
        <library name="Check_HQ_Warp_Destination" purpose="run_actions">
          <params>
            <param name="Radius" comment="Radius in which to check for obstructions"/>
            <param name="Position"/>
            <param name="Sector"/>
            <param name="Exclude" default="null"/>
            <param name="DebugChance" default="0"/>
          </params>
          <actions>
            <find_object name="$Objects" class="class.controllable" excluded="$Exclude" known="true" unit="false" deployable="false" masstraffic="false" space="$Sector" recursive="true" multiple="true">
              <match class="class.buildstorage" negate="true"/>
              <!--TODO @Owen match_boundingbox_distance or just have an attribute-->
              <match_distance value="$Position" space="$Sector" max="$Radius"/>
            </find_object>
            <set_value name="$HasIndestructible" exact="false"/>
            <set_value name="$HasAlliedStation" exact="false"/>
            <set_value name="$HasAlliedShip" exact="false"/>
            <set_value name="$HasEnemy" exact="false"/>
            <!--TODO @Owen use get_closest_highway_offset on the offset to prevent placement in highways-->
            <do_for_each name="$Object" in="$Objects">
              <do_if value="$Object.isindestructible and not $Object.isclass.ship">
                <!--We can move ships, so doesn't matter if they're indestructible-->
                <set_value name="$HasIndestructible" exact="true"/>
                <debug_text text="$Object + ' ' + $Object.knownname + ' is indestructible'" chance="$DebugChance"/>
                <do_if value="not $DebugChance">
                  <!--Minor optimisation. If there's an immovable and indestructible blocker, can early out-->
                  <break/>
                </do_if>
              </do_if>
              <do_elseif value="$Object.hasrelation.enemy.{faction.player}">
                <set_value name="$HasEnemy" exact="true"/>
                <debug_text text="$Object + ' ' + $Object.knownname + ' is an enemy'" chance="$DebugChance"/>
              </do_elseif>
              <do_else>
                <do_if value="$Object.isclass.station">
                  <set_value name="$HasAlliedStation" exact="true"/>
                  <debug_text text="$Object + ' ' + $Object.knownname + ' is an allied station'" chance="$DebugChance"/>
                </do_if>
                <do_elseif value="$Object.isclass.ship and not $Object.hasrelation.enemy.{faction.player}">
                  <set_value name="$HasAlliedShip" exact="true"/>
                  <debug_text text="$Object + ' ' + $Object.knownname + ' is an allied ship'" chance="$DebugChance"/>
                </do_elseif>
              </do_else>
            </do_for_each>
            <do_if value="$HasIndestructible">
              <set_value name="$Result" exact="'impossible'"/>
            </do_if>
            <do_elseif value="$HasAlliedStation">
              <set_value name="$Result" exact="'allied_station'"/>
            </do_elseif>
            <do_elseif value="$HasAlliedShip">
              <set_value name="$Result" exact="'allied_ship'"/>
            </do_elseif>
            <do_elseif value="$HasEnemy">
              <set_value name="$Result" exact="'enemy'"/>
            </do_elseif>
            <do_else>
              <set_value name="$Result" exact="'clear'"/>
            </do_else>
            <return value="$Result"/>
          </actions>
        </library>
        <!--Helper library with parameters-->
        <library name="Warp_HQ_To_Destination_Lib" purpose="run_actions">
          <params>
            <param name="HQ"/>
            <param name="Boron_Mentor"/>
            <param name="Radius" comment="Radius in which to damage objects"/>
            <param name="Position"/>
            <param name="Sector"/>
            <param name="Exclude" default="null" comment="Objects not to be damaged or destroyed"/>
            <param name="FirstTime" default="false" comment="Some changes to the presentation if it's the first time"/>
            <param name="DebugChance" default="0"/>
          </params>
          <actions>
            <signal_cue_instantly cue="Warp_HQ_To_Destination" param="table[$HQ = $HQ, $Boron_Mentor = $Boron_Mentor, $Radius = $Radius, $Position = $Position,                                   $Sector = $Sector, $Exclude = $Exclude, $FirstTime = $FirstTime, $DebugChance = $DebugChance]"/>
          </actions>
        </library>
        <!--Helper cue (for internal use)
        event.param = table[
        $HQ,
        $Radius,
        $Position,
        $Sector,
        $Exclude,
        $DebugChance]-->
        <cue name="Warp_HQ_To_Destination" instantiate="true" namespace="this">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <set_value name="$HQ" exact="event.param.$HQ"/>
            <set_value name="$Boron_Mentor" exact="event.param.$Boron_Mentor"/>
            <set_value name="$Radius" exact="event.param.$Radius"/>
            <set_value name="$Position" exact="event.param.$Position"/>
            <set_value name="$Sector" exact="event.param.$Sector"/>
            <set_value name="$Exclude" exact="event.param.$Exclude"/>
            <set_value name="$FirstTime" exact="event.param.$FirstTime"/>
            <set_value name="$DebugChance" exact="event.param.$DebugChance"/>
            <set_value name="$ObjectWarpList" exact="[]"/>
            <set_value name="$ObjectDestructionList" exact="[]"/>
            <set_value name="Start.$LastHQWarpTime" exact="player.age"/>
            <do_if value="ware.research_warp_hq_02.research.unlocked">
              <remove_research ware="ware.research_warp_hq_02"/>
            </do_if>
          </actions>
          <delay exact="1s"/>
          <actions>
            <!--Charging the high-mass teleportation drive.-->
            <speak actor="$Boron_Mentor" line="30222060"/>
            <!--TODO @Owen charge up sound-->
          </actions>
          <delay exact="3s"/>
          <actions>
            <!--<play_sound sound="'general_impact_lp'" object="player.room"/>-->
            <do_if value="player.entity.hascontext.{$HQ}">
              <play_sound sound="'highway_left'" object="player.room"/>
              <do_if value="player.room.dynamicinterior and player.room.dynamicinterior.object == $HQ">
                <do_for_each name="$InteriorRoom" in="player.room.dynamicinterior.rooms">
                  <flicker_object_lights object="$InteriorRoom" duration="6s" strength="0.15" range="0.1"/>
                </do_for_each>
              </do_if>
            </do_if>
          </actions>
          <delay exact="1.5s"/>
          <actions>
            <do_if value="player.entity.hascontext.{$HQ}">
              <speak actor="$Boron_Mentor" line="30228026" comment="Goodness gracious me!"/>
              <play_sound sound="'anim_jumpdrive_l_deactivation'" object="player.room"/>
            </do_if>
          </actions>
          <delay exact="4s"/>
          <actions>
            <do_if value="player.entity.hascontext.{$HQ}">
              <fade_screen fadeout="2s" fadein="5s" color="white"/>
            </do_if>
            <do_elseif value="player.sector == $HQ.sector and $HQ.attention ge attention.visible">
              <fade_screen fadeout="1s" fadein="2s" color="white"/>
            </do_elseif>
            <do_elseif value="player.sector == $Sector">
              <!--For now, assume the player is close. They may have an external camera on an object in the destination area-->
              <fade_screen fadeout="1s" fadein="2s" color="white"/>
            </do_elseif>
          </actions>
          <delay exact="2s"/>
          <actions>
            <do_if value="player.room.dynamicinterior and player.room.dynamicinterior.object == $HQ">
              <flicker_object_lights object="player.room" duration="10s" strength="0.25" range="0.25" fadein="5s"/>
            </do_if>
            <signal_objects object="$HQ" param="'trigger_warp'" param2="this"/>
          </actions>
          <delay exact="10s"/>
          <actions>
            <do_if value="player.room.dynamicinterior and player.room.dynamicinterior.object == $HQ">
              <play_sound sound="'ui_modes_scan_long_on'" type="ui"/>
              <!--The power system is stabilising.-->
              <speak actor="$Boron_Mentor" line="30228027"/>
            </do_if>
          </actions>
          <delay exact="if (player.room.dynamicinterior and player.room.dynamicinterior.object == $HQ) then 8s else 4s"/>
          <actions>
            <!--It seems to have been successful.-->
            <speak actor="$Boron_Mentor" line="30222061"/>
          </actions>
          <delay exact="8s"/>
          <actions>
            <do_if value="$FirstTime">
              <!--
              We have collected an immense amount of data! This will keep me busy for some time.
              Thank you for allowing me to conduct this experiment.-->
              <speak actor="$Boron_Mentor" line="[30228033, 0.5s, 30228034]"/>
            </do_if>
            <!--TODO @Owen check if it's possible that $FirstTime isn't actually set the first time-->
            <add_encyclopedia_entry type="researchables" item="'research_warp_hq_02'"/>
          </actions>
          <cues>
            <cue name="Warp_HQ_To_Destination_Queue_Object_Destruction">
              <conditions>
                <event_object_signalled object="$HQ" param="'trigger_warp'"/>
              </conditions>
              <actions>
                <do_if value="event.param2 != parent">
                  <assert value="false" text="'HQ was signalled to trigger a warp but this cue was waiting for it to be signalled from ' + parent + ' instead of ' + event.param2 + ' [Owen]'"/>
                  <cancel_cue cue="namespace"/>
                </do_if>
                <do_else>
                  <!--TODO @Owen - build storage and CV-->
                  <warp object="$HQ" sector="$Sector">
                    <position value="$Position"/>
                  </warp>
                </do_else>
              </actions>
              <delay exact="1ms"/>
              <actions>
                <find_object name="$Objects" excluded="$Exclude" space="$Sector" checkoperational="false" recursive="true" multiple="true">
                  <match class="class.buildstorage" negate="true"/>
                  <match_distance value="$Position" space="$Sector" max="$Radius"/>
                </find_object>
                <do_for_each name="$Object" in="$Objects">
                  <do_if value="$Exclude">
                    <set_value name="$ExcludeObj" exact="false"/>
                    <do_for_each name="$Excluded" in="$Exclude">
                      <do_if value="$Excluded and $Object.hascontext.{$Excluded}">
                        <debug_text text="$Object + ' ' + $Object.knownname + ' is within excluded object ' + $Excluded + ' ' + $Excluded.knownname"/>
                        <set_value name="$ExcludeObj" exact="true"/>
                        <break/>
                      </do_if>
                    </do_for_each>
                    <do_if value="$ExcludeObj">
                      <continue/>
                    </do_if>
                  </do_if>
                  <do_if value="$Object.isindestructible">
                    <assert value="$Object.isclass.ship or not $Object.isclass.controllable" text="'Indestructible object ' + $Object + ' ' + $Object.knownname + ' which is not a ship was located at the target HQ warp area. It will not be destroyed but it should have been prevented [Owen]'"/>
                    <do_if value="$Object.isclass.ship">
                      <!--TODO Warp ship-->
                    </do_if>
                  </do_if>
                  <do_elseif value="$Object.isoperational">
                    <!--Operational objects-->
                    <do_if value="$Object.isclass.station">
                      <!--Operational stations-->
                      <!--TODO @Owen better checks whether the station is within the plot box of the HQ-->
                      <do_if value="$Object.distanceto.{$HQ} - ($Object.size / 2) le $HQ.buildplot.max.length">
                        <!--Warp this station to outside-->
                        <append_to_list name="$ObjectWarpList" exact="$Object"/>
                      </do_if>
                      <do_else>
                        <append_to_list name="$ObjectDestructionList" exact="$Object"/>
                      </do_else>
                    </do_if>
                    <do_else>
                      <!--Operational objects such as ships, asteroids, drops e.t.c-->
                      <append_to_list name="$ObjectDestructionList" exact="$Object"/>
                    </do_else>
                  </do_elseif>
                  <do_else>
                    <!--Wrecks or constructions-->
                  </do_else>
                </do_for_each>
              </actions>
            </cue>
            <!--This cue destroys all objects in $ObjectDestructionList and then warps a single object in the $ObjectWarpList. If either list is still populated, it will reset for next frame.
            This is to keep the safepos accurate as the stations take a frame to warp-->
            <cue name="Warp_HQ_To_Destination_Process_Objects">
              <conditions>
                <event_cue_completed cue="Warp_HQ_To_Destination_Queue_Object_Destruction"/>
              </conditions>
              <cues>
                <!--No conditions as this will be reset-->
                <cue name="Warp_HQ_To_Destination_Process_Objects_Actions">
                  <actions>
                    <!--Destroy all objects-->
                    <do_for_each name="$Object" in="$ObjectDestructionList">
                      <do_if value="$Object.isclass.station">
                        <find_object_component name="$Modules" object="$Object" class="class.module" checkoperational="false" multiple="true"/>
                        <do_for_each name="$Module" in="$Modules">
                          <set_value name="$DestructionDelay" min="0ms" max="500ms"/>
                          <debug_text text="'Queing destruction of ' + $Module + ' ' + $Module.knownname + ' in ' + $DestructionDelay" chance="$DebugChance"/>
                          <signal_cue_instantly cue="Warp_HQ_To_Destination_Process_Objects_Delayed_Destruction" param="[$Module, $DestructionDelay]"/>
                        </do_for_each>
                      </do_if>
                      <do_else>
                        <set_value name="$DestructionDelay" min="0ms" max="500ms"/>
                        <debug_text text="'Queing destruction of ' + $Object + ' ' + $Object.knownname + ' in ' + $DestructionDelay" chance="$DebugChance"/>
                        <signal_cue_instantly cue="Warp_HQ_To_Destination_Process_Objects_Delayed_Destruction" param="[$Object, $DestructionDelay]"/>
                      </do_else>
                    </do_for_each>
                    <clear_list list="$ObjectDestructionList"/>
                    <do_if value="$ObjectWarpList.count">
                      <set_value name="$Object" exact="$ObjectWarpList.{1}"/>
                      <remove_value name="$ObjectWarpList.{1}"/>
                      <append_to_list name="$ObjectDestructionList" exact="$Object"/>
                      <assert value="$HQ.rotation.yaw == 0 and $HQ.rotation.pitch == 0 and $HQ.rotation.roll == 0" text="'The below section assumes that the HQ is not rotated [Owen]'"/>
                      <create_position name="$ObjectPos" object="$Object" space="$Sector"/>
                      <set_value name="$DirectionCoords" exact="[                                    $Position.x - $ObjectPos.x,                                    $Position.y - $ObjectPos.y,                                    $Position.z - $ObjectPos.z]"/>
                      <!--Decide which quadrant directions to find a new safepos-->
                      <set_value name="$Quadrant1" exact="quadrant.none"/>
                      <set_value name="$Quadrant2" exact="quadrant.none"/>
                      <!--We don't have an absolute operator-->
                      <set_value name="$DirectionLengths" exact="table[]"/>
                      <set_value name="$DirectionLengths.$x" exact="if $DirectionCoords.{1} gt 0 then $DirectionCoords.{1} else 0 - $DirectionCoords.{1}"/>
                      <set_value name="$DirectionLengths.$y" exact="if $DirectionCoords.{2} gt 0 then $DirectionCoords.{2} else 0 - $DirectionCoords.{2}"/>
                      <set_value name="$DirectionLengths.$z" exact="if $DirectionCoords.{3} gt 0 then $DirectionCoords.{3} else 0 - $DirectionCoords.{3}"/>
                      <set_value name="$SortedDirectionLengths" exact="$DirectionLengths.keys.list"/>
                      <sort_list list="$SortedDirectionLengths" sortdescending="true"/>
                      <do_if value="$SortedDirectionLengths.{1} == '$x'">
                        <set_value name="$Quadrant1" exact="if $DirectionCoords.{1} gt 0 then quadrant.right else quadrant.left"/>
                      </do_if>
                      <do_elseif value="$SortedDirectionLengths.{1} == '$y'">
                        <set_value name="$Quadrant1" exact="if $DirectionCoords.{2} gt 0 then quadrant.up else quadrant.down"/>
                      </do_elseif>
                      <do_elseif value="$SortedDirectionLengths.{1} == '$z'">
                        <set_value name="$Quadrant1" exact="if $DirectionCoords.{3} gt 0 then quadrant.front else quadrant.back"/>
                      </do_elseif>
                      <!--Only have a second quadrant if the next direction was large enough compared to the first-->
                      <do_if value="$DirectionLengths.{$SortedDirectionLengths.{2}} gt $DirectionLengths.{$SortedDirectionLengths.{1}} / 2">
                        <do_if value="$SortedDirectionLengths.{2} == '$x'">
                          <set_value name="$Quadrant2" exact="if $DirectionCoords.{1} gt 0 then quadrant.right else quadrant.left"/>
                        </do_if>
                        <do_elseif value="$SortedDirectionLengths.{2} == '$y'">
                          <set_value name="$Quadrant2" exact="if $DirectionCoords.{2} gt 0 then quadrant.up else quadrant.down"/>
                        </do_elseif>
                        <do_elseif value="$SortedDirectionLengths.{2} == '$z'">
                          <set_value name="$Quadrant2" exact="if $DirectionCoords.{3} gt 0 then quadrant.front else quadrant.back"/>
                        </do_elseif>
                      </do_if>
                      <debug_text text="'Warping station ' + $Object + ' ' + $Object.knownname + ' to a new safepos in direction of ' + $Quadrant1 + ' and ' + $Quadrant2" chance="$DebugChance"/>
                      <warp object="$Object" sector="$Sector">
                        <safepos object="$Object" ignored="$Object" directionobject="$HQ" direction="$Quadrant1" direction2="$Quadrant2" includeplotbox="true"/>
                      </warp>
                    </do_if>
                    <do_if value="$ObjectDestructionList.count or $ObjectWarpList.count">
                      <reset_cue cue="this"/>
                    </do_if>
                  </actions>
                  <delay exact="1min"/>
                  <actions>
                    <!--bit of an ugly cleanup but shouldn't matter too much unless something queued to be killed past 1 minute-->
                    <cancel_cue cue="namespace"/>
                  </actions>
                </cue>
                <!--event.param = [$object, $delay]-->
                <cue name="Warp_HQ_To_Destination_Process_Objects_Delayed_Destruction" instantiate="true">
                  <conditions>
                    <event_cue_signalled/>
                  </conditions>
                  <delay exact="event.param.{2}"/>
                  <actions>
                    <do_if value="event.param.{1}.isclass.module">
                      <debug_text text="'Destroying module ' + event.param.{1} + ' ' + event.param.{1}.knownname" chance="$DebugChance"/>
                      <set_object_hull object="event.param.{1}" exact="1"/>
                      <apply_attackstrength attacker="$HQ" object="event.param.{1}.object" module="event.param.{1}" hullonly="event.param.{1}.maxhull" hullnoshield="0" hullshield="0" shieldonly="0"/>
                    </do_if>
                    <do_elseif value="event.param.{1}.isclass.controllable">
                      <debug_text text="'Destroying controllable ' + event.param.{1} + ' ' + event.param.{1}.knownname" chance="$DebugChance"/>
                      <set_object_hull object="event.param.{1}" exact="1"/>
                      <apply_attackstrength attacker="$HQ" object="event.param.{1}" hullonly="event.param.{1}.maxhull" hullnoshield="0" hullshield="0" shieldonly="0"/>
                    </do_elseif>
                    <do_else>
                      <debug_text text="'Destroying object ' + event.param.{1} + ' ' + event.param.{1}.knownname" chance="$DebugChance"/>
                      <destroy_object object="event.param.{1}" explosion="true"/>
                    </do_else>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
      </cues>
    </cue>
    <!--TODO @Owen unify dock and storage branches into a multi-use library, based on HQ_Tutorial_Build_Storage which is slightly more generic-->
    <library name="HQ_Tutorial_Build">
      <params>
        <param name="Station"/>
        <param name="MinStartTime"/>
        <param name="EndSignalCue" default="null"/>
        <param name="DebugChance" default="100"/>
      </params>
      <actions>
        <set_value name="$Boron_Mentor" exact="md.$PersistentCharacters.$BosoTa"/>
      </actions>
      <cues>
        <cue name="HQ_Tutorial_Build_Dock_Menu_Highlight">
          <conditions>
            <event_ui_triggered/>
            <check_value value="event.param == 'StationConfigurationMenu' and @event.param3.{3} == $Station"/>
          </conditions>
          <actions>
            <set_value name="$BosoDockAreaTutorial" exact="player.age gt $MinStartTime and player.age gt @$BosoDockAreaTutorialTime + 5min"/>
            <set_value name="$BosoDockAreaTutorialDoneLines" exact="[]"/>
            <set_value name="$NewModules" exact="[]"/>
            <set_value name="$HasDockArea" exact="false"/>
            <set_value name="$ConstructionPlan" exact="$Station.plannedconstruction.sequence"/>
            <do_if value="$ConstructionPlan">
              <do_all exact="$ConstructionPlan.count" counter="$plan_i">
                <do_if value="($ConstructionPlan.{$plan_i}.macro.isclass.dockarea and not $ConstructionPlan.{$plan_i}.macro.isventuremodule) or $ConstructionPlan.{$plan_i}.macro.isclass.pier">
                  <debug_text text="'has ' + $ConstructionPlan.{$plan_i}.macro" chance="$DebugChance"/>
                  <set_value name="$HasDockArea" exact="true"/>
                  <break/>
                </do_if>
              </do_all>
            </do_if>
            <remove_value name="$ConstructionPlan"/>
            <do_if value="$HasDockArea">
              <reset_cue cue="HQ_Tutorial_Build_Dock_Menu_Highlight"/>
            </do_if>
            <do_else>
              <get_ware_definition result="$ModuleWares" tags="tag.module"/>
              <set_value name="$HasDockareaBlueprint" exact="false"/>
              <do_for_each name="$ModuleWare" in="$ModuleWares">
                <do_if value="$ModuleWare.objectmacro.isclass.dockarea and not $ModuleWare.objectmacro.isventuremodule">
                  <do_if value="player.blueprints.{$ModuleWare}.any.exists">
                    <set_value name="$HasDockareaBlueprint" exact="true"/>
                    <break/>
                  </do_if>
                </do_if>
              </do_for_each>
              <do_if value="not $HasDockareaBlueprint">
                <show_help line="868" force="true" position="1" comment="{1012,868}"/>
                <show_help line="869" force="true" position="1" comment="{1012,869}"/>
              </do_if>
              <do_else>
                <do_if value="$BosoDockAreaTutorial">
                  <set_value name="$BosoDockAreaTutorialTime" exact="player.age"/>
                  <do_if value="$BosoDockAreaTutorial and not $BosoDockAreaTutorialDoneLines.indexof.{30201106}">
                    <speak actor="$Boron_Mentor" priority="100" line="30201106" comment="{10201,30201106}"/>
                  </do_if>
                </do_if>
              </do_else>
              <show_help_overlay id="'stationbuildst_dock'" highlightonly="true" comment="highlight the dockarea button"/>
              <remove_value name="$ModuleWares"/>
            </do_else>
          </actions>
          <delay exact="1s"/>
          <actions>
            <do_if value="$HasDockareaBlueprint and HQ_Tutorial_Build_Dock_Menu_Dockareas_Selected.state == cuestate.waiting">
              <show_help line="870" force="true" position="1" comment="{1012,870}"/>
            </do_if>
          </actions>
          <cues>
            <cue name="HQ_Tutorial_Build_Dock_Boso_Spoke" instantiate="true">
              <conditions>
                <event_speak_finished actor="$Boron_Mentor"/>
              </conditions>
              <actions>
                <append_to_list name="$BosoDockAreaTutorialDoneLines" exact="event.param2"/>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Dock_Menu_Dockareas_Selected">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'StationConfigurationMenu' and @event.param2 == 'moduletypes_dock'"/>
              </conditions>
              <actions>
                <remove_help all="true"/>
                <show_help line="871" force="true" position="1" comment="{1012,871}"/>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Dock_Module_Selected_Hint" instantiate="true">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'StationConfigurationMenu' and event.param2 == 'moduleadded'"/>
              </conditions>
              <actions>
                <remove_help_overlay id="'stationbuildst_dock'"/>
                <remove_help all="true"/>
                <do_if value="@macro.{event.param3}.isclass.dockarea">
                  <do_if value="not @macro.{event.param3}.isventuremodule">
                    <show_help line="872" force="true" comment="{1012,872}"/>
                  </do_if>
                </do_if>
                <do_elseif value="@macro.{event.param3}.isclass.pier">
                  <show_help line="873" force="true" position="1" comment="{1012,873}"/>
                </do_elseif>
                <show_help line="874" force="true" position="1" comment="{1012,874}"/>
                <show_help line="875" force="true" position="1" comment="{1012,875}"/>
                <do_if value="$BosoDockAreaTutorial and not $BosoDockAreaTutorialDoneLines.indexof.{30201107}">
                  <speak actor="$Boron_Mentor" priority="100" line="30201107" comment="{10201,30201107}"/>
                </do_if>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Dock_Module_Added" instantiate="true">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'AddFloatingItemsToConstructionPlan' and ((@event.param3.isclass.dockarea and not @event.param3.isclass.dockarea.isventuremodule) or @event.param3.isclass.pier)"/>
              </conditions>
              <actions>
                <append_to_list name="$NewModules" exact="event.param3"/>
                <debug_text text="'added: ' + $NewModules" chance="$DebugChance"/>
                <do_if value="$NewModules.count == 1">
                  <remove_help all="true"/>
                  <show_help line="876" force="true" position="1" comment="{1012,876}"/>
                  <show_help_overlay id="'confirm_modulechanges'" highlightonly="true" comment="highlight the confirm module changes button"/>
                  <do_if value="$BosoDockAreaTutorial and not $BosoDockAreaTutorialDoneLines.indexof.{30201108}">
                    <speak actor="$Boron_Mentor" priority="100" line="30201108" comment="{10201,30201108}"/>
                  </do_if>
                </do_if>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Module_Removed" instantiate="true">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'RemoveMacroFromConstructionPlan'"/>
              </conditions>
              <actions>
                <remove_from_list name="$NewModules" exact="event.param3" multiple="false"/>
                <debug_text text="'removed: ' + $NewModules" chance="$DebugChance"/>
                <do_if value="$NewModules.count == 0">
                  <remove_help_overlay id="'confirm_modulechanges'"/>
                  <remove_help_overlay id="'construction_available_funds'"/>
                  <remove_help_overlay id="'plot_resources_buyoffers'"/>
                  <reset_cue cue="HQ_Tutorial_Build_Module_Confirmed"/>
                </do_if>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Module_Confirmed">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'StationConfigurationMenu' and event.param2 == 'confirmmodulechanges'"/>
                <check_value value="$NewModules.count != 0"/>
              </conditions>
              <delay exact="1ms"/>
              <actions>
                <remove_help all="true"/>
                <remove_help_overlay id="'confirm_modulechanges'"/>
                <set_value name="this.$ShowOverlayHelpers" exact="$Station.buildstorage.money lt $Station.buildstorage.wantedmoney"/>
                <do_if value="this.$ShowOverlayHelpers">
                  <show_help_overlay id="'plot_resources_buyoffers'" highlightonly="true"/>
                  <show_help_overlay id="'construction_available_funds'" highlightonly="true"/>
                  <show_help line="877" force="true" position="1" comment="{1012,877}"/>
                  <do_if value="$BosoDockAreaTutorial and not $BosoDockAreaTutorialDoneLines.indexof.{30201109}">
                    <speak actor="$Boron_Mentor" priority="100" line="[30201109, 1s, 30201110]" comment="{10201,30201109} {10201,30201110}"/>
                  </do_if>
                </do_if>
                <set_value name="this.$BuildStorageMoney" exact="$Station.buildstorage.money"/>
                <set_value name="this.$MoneyChangeTime" exact="-1"/>
                <set_value name="this.$ExtendedMenuCount" exact="0"/>
              </actions>
              <cues>
                <cue name="HQ_Tutorial_Build_Module_Resources_Extended" instantiate="true">
                  <conditions>
                    <event_ui_triggered/>
                    <check_value value="event.param == 'StationConfigurationMenu' and event.param2 == 'confirmmodulechanges'"/>
                  </conditions>
                  <actions>
                    <set_value name="parent.$ExtendedMenuCount" operation="add"/>
                  </actions>
                </cue>
                <cue name="HQ_Tutorial_Build_Module_Money_Changed" instantiate="true" checkinterval="1s">
                  <conditions>
                    <cue_is_complete cue="HQ_Tutorial_Build_Module_Confirmed"/>
                    <check_value value="parent.$BuildStorageMoney != $Station.buildstorage.money"/>
                  </conditions>
                  <actions>
                    <remove_help_overlay id="'plot_resources_buyoffers'"/>
                    <set_value name="parent.$BuildStorageMoney" exact="$Station.buildstorage.money"/>
                    <set_value name="parent.$MoneyChangeTime" exact="player.age"/>
                  </actions>
                </cue>
                <cue name="HQ_Tutorial_Build_Module_Account_Checked" checkinterval="1s">
                  <conditions>
                    <cue_is_complete cue="HQ_Tutorial_Build_Module_Confirmed"/>
                    <check_any>
                      <check_value value="not parent.$ShowOverlayHelpers"/>
                      <check_all>
                        <check_value value="player.age gt parent.time + 10s"/>
                        <check_any>
                          <check_value value="parent.$ExtendedMenuCount ge 4"/>
                          <check_value value="player.age gt parent.time + 25s"/>
                          <check_value value="parent.$MoneyChangeTime gt 0 and player.age gt parent.$MoneyChangeTime + 5s"/>
                          <check_value value="$Station.buildstorage.money ge $Station.buildstorage.wantedmoney"/>
                        </check_any>
                      </check_all>
                    </check_any>
                  </conditions>
                  <actions>
                    <remove_help_overlay id="'plot_resources_buyoffers'"/>
                    <remove_help_overlay id="'construction_available_funds'"/>
                  </actions>
                  <cues>
                    <cue name="HQ_Tutorial_Build_Module_CV">
                      <actions>
                        <!--At this point, cancel some of the previous triggers as going backwards in the tutorial now is more work than is worth, as the player's made it this far-->
                        <cancel_cue cue="HQ_Tutorial_Build_Dock_Module_Added"/>
                        <cancel_cue cue="HQ_Tutorial_Build_Module_Removed"/>
                        <do_if value="$Station.buildstorage.buildmodule.constructionvessel">
                          <signal_cue cue="HQ_Tutorial_Build_Module_Ending"/>
                          <cancel_cue cue="this"/>
                        </do_if>
                        <do_else>
                          <show_help_overlay id="'construction_builders_header'" highlightonly="true"/>
                          <show_help line="878" force="true" position="1" comment="{1012,878}"/>
                          <do_if value="$BosoDockAreaTutorial and not $BosoDockAreaTutorialDoneLines.indexof.{30201111}">
                            <speak actor="$Boron_Mentor" priority="100" line="30201111" comment="{10201,30201111}"/>
                          </do_if>
                        </do_else>
                      </actions>
                      <cues>
                        <cue name="HQ_Tutorial_Build_Module_CV_Map">
                          <conditions>
                            <event_ui_triggered/>
                            <check_value value="event.param == 'MapMenu' and @event.param3.{6} == 'selectCV'"/>
                          </conditions>
                          <actions>
                            <cancel_cue cue="HQ_Tutorial_Build_Dock_Menu_Highlight_Close"/>
                            <remove_help all="true"/>
                            <remove_help_overlay id="'construction_builders_header'"/>
                            <show_help line="879" force="true" position="1" comment="{1012,879}"/>
                            <show_help line="880" force="true" position="1" comment="{1012,880}"/>
                            <do_if value="$BosoDockAreaTutorial and not $BosoDockAreaTutorialDoneLines.indexof.{30201112}">
                              <speak actor="$Boron_Mentor" priority="100" line="[30201112, 30201113, 30201114]" comment="{10201,30201112} {10201,30201113} {10201,30201114}"/>
                            </do_if>
                          </actions>
                          <cues>
                            <cue name="HQ_Tutorial_Build_Module_CV_Map_Close">
                              <conditions>
                                <event_ui_triggered/>
                                <check_value value="event.param2 == 'menu_close'"/>
                              </conditions>
                              <actions>
                                <signal_cue cue="HQ_Tutorial_Build_Module_Ending"/>
                                <cancel_cue cue="HQ_Tutorial_Build_Module_CV"/>
                              </actions>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="HQ_Tutorial_Build_Module_Ending">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <!--General hints about having enough credits for the build-->
                        <do_if value="$BosoDockAreaTutorial and not $BosoDockAreaTutorialDoneLines.indexof.{30201115}">
                          <speak actor="$Boron_Mentor" priority="100" line="[30201115, 30201116]" comment="{10201,30201115} {10201,30201116}"/>
                        </do_if>
                        <remove_help all="true"/>
                        <remove_help_overlay id="'stationbuildst_dock'"/>
                        <remove_help_overlay id="'confirm_modulechanges'"/>
                        <remove_help_overlay id="'plot_resources_buyoffers'"/>
                        <remove_help_overlay id="'construction_available_funds'"/>
                        <remove_help_overlay id="'construction_builders_header'"/>
                        <do_if value="$EndSignalCue">
                          <signal_cue cue="$EndSignalCue" check="false"/>
                        </do_if>
                        <cancel_cue cue="HQ_Tutorial_Build_Dock_Menu_Highlight_Close"/>
                        <cancel_cue cue="HQ_Tutorial_Build_Dock_Menu_Highlight"/>
                      </actions>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
            <cue name="HQ_Tutorial_Build_Dock_Menu_Highlight_Close">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'StationConfigurationMenu' and event.param2 == 'menu_close'"/>
              </conditions>
              <delay exact="if HQ_Tutorial_Build_Module_CV_Map.state == cuestate.waiting then 1s else 0s"/>
              <actions>
                <remove_help all="true"/>
                <remove_help_overlay id="'stationbuildst_dock'"/>
                <remove_help_overlay id="'confirm_modulechanges'"/>
                <remove_help_overlay id="'plot_resources_buyoffers'"/>
                <remove_help_overlay id="'construction_available_funds'"/>
                <remove_help_overlay id="'construction_builders_header'"/>
                <reset_cue cue="HQ_Tutorial_Build_Dock_Menu_Highlight"/>
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </library>
    <library name="HQ_Tutorial_Build_Storage">
      <params>
        <param name="Station"/>
        <param name="MinStartTime"/>
        <param name="StorageTypes" comment="list of compatible ware transport types for this tutorial"/>
        <param name="EndSignalCue" default="null"/>
        <param name="DebugChance" default="100"/>
      </params>
      <actions>
        <set_value name="$Boron_Mentor" exact="md.$PersistentCharacters.$BosoTa"/>
      </actions>
      <cues>
        <cue name="HQ_Tutorial_Build_Storage_Menu_Highlight">
          <conditions>
            <event_ui_triggered/>
            <check_value value="event.param == 'StationConfigurationMenu' and @event.param3.{3} == $Station"/>
          </conditions>
          <actions>
            <set_value name="$DoesBosoSpeak" exact="player.age gt $MinStartTime and player.age gt @$LastBosoSpeakTime + 5min"/>
            <set_value name="$DoneBosoSpeakLines" exact="[]"/>
            <set_value name="$NewModules" exact="[]"/>
            <set_value name="$HasStorageModule" exact="false"/>
            <set_value name="$ConstructionPlan" exact="$Station.plannedconstruction.sequence"/>
            <do_if value="$ConstructionPlan">
              <do_all exact="$ConstructionPlan.count" counter="$plan_i">
                <set_value name="$ModuleMacro" exact="$ConstructionPlan.{$plan_i}.macro"/>
                <do_if value="$ModuleMacro.isclass.storage">
                  <do_for_each name="$ModuleWareType" in="$ModuleMacro.waretransport">
                    <do_if value="$StorageTypes.indexof.{$ModuleWareType}">
                      <debug_text text="'has ' + $ModuleMacro" chance="$DebugChance"/>
                      <set_value name="$HasStorageModule" exact="true"/>
                      <break/>
                    </do_if>
                  </do_for_each>
                  <do_if value="$HasStorageModule">
                    <break/>
                  </do_if>
                </do_if>
              </do_all>
            </do_if>
            <remove_value name="$ConstructionPlan"/>
            <do_if value="$HasStorageModule">
              <reset_cue cue="HQ_Tutorial_Build_Storage_Menu_Highlight"/>
            </do_if>
            <do_else>
              <get_ware_definition result="$ModuleWares" tags="tag.module"/>
              <set_value name="$HasStorageModuleBlueprint" exact="false"/>
              <do_for_each name="$ModuleWare" in="$ModuleWares">
                <do_if value="$ModuleWare.objectmacro.isclass.storage and player.blueprints.{$ModuleWare}.any.exists">
                  <do_for_each name="$ModuleWareType" in="$ModuleWare.objectmacro.waretransport">
                    <do_if value="$StorageTypes.indexof.{$ModuleWareType}">
                      <set_value name="$HasStorageModuleBlueprint" exact="true"/>
                      <break/>
                    </do_if>
                  </do_for_each>
                  <do_if value="$HasStorageModuleBlueprint">
                    <break/>
                  </do_if>
                </do_if>
              </do_for_each>
              <do_if value="not $HasStorageModuleBlueprint">
                <show_help line="893" force="true" position="1" comment="{1012,893}"/>
                <show_help line="869" force="true" position="1" comment="{1012,869}"/>
              </do_if>
              <do_else>
                <!--TODO @Owen we have no alternative line for 30201106, First, place a new dock module. You can put it wherever you desire.-->
                <!--<do_if value="$DoesBosoSpeak">
                  <set_value name="$LastBosoSpeakTime" exact="player.age"/>
                  <do_if value="$DoesBosoSpeak and not $DoneBosoSpeakLines.indexof.{30201106}">
                    <speak actor="$Boron_Mentor" priority="100" line="30201106" comment="{10201,30201106}"/>
                  </do_if>
                </do_if>-->
              </do_else>
              <show_help_overlay id="'stationbuildst_storage'" highlightonly="true" comment="highlight the storage module button"/>
              <remove_value name="$ModuleWares"/>
            </do_else>
          </actions>
          <delay exact="1s"/>
          <actions>
            <do_if value="$HasStorageModuleBlueprint and HQ_Tutorial_Build_Storage_Menu_Modules_Selected.state == cuestate.waiting">
              <show_help line="894" force="true" position="1" comment="{1012,894}"/>
            </do_if>
          </actions>
          <cues>
            <cue name="HQ_Tutorial_Build_Storage_Boso_Spoke" instantiate="true">
              <conditions>
                <event_speak_finished actor="$Boron_Mentor"/>
              </conditions>
              <actions>
                <append_to_list name="$DoneBosoSpeakLines" exact="event.param2"/>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Storage_Menu_Modules_Selected">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'StationConfigurationMenu' and @event.param2 == 'moduletypes_storage'"/>
              </conditions>
              <actions>
                <remove_help all="true"/>
                <show_help line="895" force="true" position="1" comment="{1012,895}"/>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Storage_Module_Selected_Hint" instantiate="true">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'StationConfigurationMenu' and event.param2 == 'moduleadded'"/>
              </conditions>
              <actions>
                <remove_help_overlay id="'stationbuildst_storage'"/>
                <remove_help all="true"/>
                <set_value name="$SelectMacro" exact="@macro.{event.param3}"/>
                <do_if value="$SelectMacro and $SelectMacro.isclass.storage">
                  <substitute_text source="{1012,896}" text="$HintText">
                    <replace string="'$STORAGETYPE$'" with="$SelectMacro.waretransport.{1}.name"/>
                  </substitute_text>
                </do_if>
                <show_help line="874" force="true" position="1" comment="{1012,874}"/>
                <show_help line="875" force="true" position="1" comment="{1012,875}"/>
                <do_if value="$DoesBosoSpeak and not $DoneBosoSpeakLines.indexof.{30201107}">
                  <speak actor="$Boron_Mentor" priority="100" line="30201107" comment="{10201,30201107}"/>
                </do_if>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Storage_Module_Added" instantiate="true">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'AddFloatingItemsToConstructionPlan' and @event.param3.isclass.storage"/>
              </conditions>
              <actions>
                <append_to_list name="$NewModules" exact="event.param3"/>
                <debug_text text="'added: ' + $NewModules" chance="$DebugChance"/>
                <do_if value="$NewModules.count == 1">
                  <remove_help all="true"/>
                  <show_help line="876" force="true" position="1" comment="{1012,876}"/>
                  <show_help_overlay id="'confirm_modulechanges'" highlightonly="true" comment="highlight the confirm module changes button"/>
                  <do_if value="$DoesBosoSpeak and not $DoneBosoSpeakLines.indexof.{30201108}">
                    <speak actor="$Boron_Mentor" priority="100" line="30201108" comment="{10201,30201108}"/>
                  </do_if>
                </do_if>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Storage_Module_Removed" instantiate="true">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'RemoveMacroFromConstructionPlan'"/>
              </conditions>
              <actions>
                <remove_from_list name="$NewModules" exact="event.param3" multiple="false"/>
                <debug_text text="'removed: ' + $NewModules" chance="$DebugChance"/>
                <do_if value="$NewModules.count == 0">
                  <remove_help_overlay id="'confirm_modulechanges'"/>
                  <remove_help_overlay id="'construction_available_funds'"/>
                  <remove_help_overlay id="'plot_resources_buyoffers'"/>
                  <reset_cue cue="HQ_Tutorial_Build_Storage_Module_Confirmed"/>
                </do_if>
              </actions>
            </cue>
            <cue name="HQ_Tutorial_Build_Storage_Module_Confirmed">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'StationConfigurationMenu' and event.param2 == 'confirmmodulechanges'"/>
                <check_value value="$NewModules.count != 0"/>
              </conditions>
              <delay exact="1ms"/>
              <actions>
                <remove_help all="true"/>
                <remove_help_overlay id="'confirm_modulechanges'"/>
                <set_value name="this.$ShowOverlayHelpers" exact="$Station.buildstorage.money lt $Station.buildstorage.wantedmoney"/>
                <do_if value="this.$ShowOverlayHelpers">
                  <show_help_overlay id="'plot_resources_buyoffers'" highlightonly="true"/>
                  <show_help_overlay id="'construction_available_funds'" highlightonly="true"/>
                  <show_help line="877" force="true" position="1" comment="{1012,877}"/>
                  <do_if value="$DoesBosoSpeak and not $DoneBosoSpeakLines.indexof.{30201109}">
                    <speak actor="$Boron_Mentor" priority="100" line="[30201109, 1s, 30201110]" comment="{10201,30201109} {10201,30201110}"/>
                  </do_if>
                </do_if>
                <set_value name="this.$BuildStorageMoney" exact="$Station.buildstorage.money"/>
                <set_value name="this.$MoneyChangeTime" exact="-1"/>
                <set_value name="this.$ExtendedMenuCount" exact="0"/>
              </actions>
              <cues>
                <cue name="HQ_Tutorial_Build_Storage_Module_Resources_Extended" instantiate="true">
                  <conditions>
                    <event_ui_triggered/>
                    <check_value value="event.param == 'StationConfigurationMenu' and event.param2 == 'confirmmodulechanges'"/>
                  </conditions>
                  <actions>
                    <set_value name="parent.$ExtendedMenuCount" operation="add"/>
                  </actions>
                </cue>
                <cue name="HQ_Tutorial_Build_Storage_Module_Money_Changed" instantiate="true" checkinterval="1s">
                  <conditions>
                    <cue_is_complete cue="HQ_Tutorial_Build_Storage_Module_Confirmed"/>
                    <check_value value="parent.$BuildStorageMoney != $Station.buildstorage.money"/>
                  </conditions>
                  <actions>
                    <remove_help_overlay id="'plot_resources_buyoffers'"/>
                    <set_value name="parent.$BuildStorageMoney" exact="$Station.buildstorage.money"/>
                    <set_value name="parent.$MoneyChangeTime" exact="player.age"/>
                  </actions>
                </cue>
                <cue name="HQ_Tutorial_Build_Storage_Module_Account_Checked" checkinterval="1s">
                  <conditions>
                    <cue_is_complete cue="HQ_Tutorial_Build_Storage_Module_Confirmed"/>
                    <check_any>
                      <check_value value="not parent.$ShowOverlayHelpers"/>
                      <check_all>
                        <check_value value="player.age gt parent.time + 10s"/>
                        <check_any>
                          <check_value value="parent.$ExtendedMenuCount ge 4"/>
                          <check_value value="player.age gt parent.time + 25s"/>
                          <check_value value="parent.$MoneyChangeTime gt 0 and player.age gt parent.$MoneyChangeTime + 5s"/>
                          <check_value value="$Station.buildstorage.money ge $Station.buildstorage.wantedmoney"/>
                        </check_any>
                      </check_all>
                    </check_any>
                  </conditions>
                  <actions>
                    <remove_help_overlay id="'plot_resources_buyoffers'"/>
                    <remove_help_overlay id="'construction_available_funds'"/>
                  </actions>
                  <cues>
                    <cue name="HQ_Tutorial_Build_Storage_Module_CV">
                      <actions>
                        <!--At this point, cancel some of the previous triggers as going backwards in the tutorial now is more work than is worth, as the player's made it this far-->
                        <cancel_cue cue="HQ_Tutorial_Build_Storage_Module_Added"/>
                        <cancel_cue cue="HQ_Tutorial_Build_Storage_Module_Removed"/>
                        <do_if value="$Station.buildstorage.buildmodule.constructionvessel">
                          <signal_cue cue="HQ_Tutorial_Build_Storage_Module_Ending"/>
                          <cancel_cue cue="this"/>
                        </do_if>
                        <do_else>
                          <show_help_overlay id="'construction_builders_header'" highlightonly="true"/>
                          <show_help line="878" force="true" position="1" comment="{1012,878}"/>
                          <do_if value="$DoesBosoSpeak and not $DoneBosoSpeakLines.indexof.{30201111}">
                            <speak actor="$Boron_Mentor" priority="100" line="30201111" comment="{10201,30201111}"/>
                          </do_if>
                        </do_else>
                      </actions>
                      <cues>
                        <cue name="HQ_Tutorial_Build_Storage_Module_CV_Map">
                          <conditions>
                            <event_ui_triggered/>
                            <check_value value="event.param == 'MapMenu' and @event.param3.{6} == 'selectCV'"/>
                          </conditions>
                          <actions>
                            <cancel_cue cue="HQ_Tutorial_Build_Storage_Menu_Highlight_Close"/>
                            <remove_help all="true"/>
                            <remove_help_overlay id="'construction_builders_header'"/>
                            <show_help line="879" force="true" position="1" comment="{1012,879}"/>
                            <show_help line="880" force="true" position="1" comment="{1012,880}"/>
                            <do_if value="$DoesBosoSpeak and not $DoneBosoSpeakLines.indexof.{30201112}">
                              <speak actor="$Boron_Mentor" priority="100" line="[30201112, 30201113, 30201114]" comment="{10201,30201112} {10201,30201113} {10201,30201114}"/>
                            </do_if>
                          </actions>
                          <cues>
                            <cue name="HQ_Tutorial_Build_Storage_Module_CV_Map_Close">
                              <conditions>
                                <event_ui_triggered/>
                                <check_value value="event.param2 == 'menu_close'"/>
                              </conditions>
                              <actions>
                                <signal_cue cue="HQ_Tutorial_Build_Storage_Module_Ending"/>
                                <cancel_cue cue="HQ_Tutorial_Build_Storage_Module_CV"/>
                              </actions>
                            </cue>
                          </cues>
                        </cue>
                      </cues>
                    </cue>
                    <cue name="HQ_Tutorial_Build_Storage_Module_Ending">
                      <conditions>
                        <event_cue_signalled/>
                      </conditions>
                      <actions>
                        <!--General hints about having enough credits for the build-->
                        <do_if value="$DoesBosoSpeak and not $DoneBosoSpeakLines.indexof.{30201115}">
                          <speak actor="$Boron_Mentor" priority="100" line="[30201115, 30201116]" comment="{10201,30201115} {10201,30201116}"/>
                        </do_if>
                        <remove_help all="true"/>
                        <remove_help_overlay id="'stationbuildst_storage'"/>
                        <remove_help_overlay id="'confirm_modulechanges'"/>
                        <remove_help_overlay id="'plot_resources_buyoffers'"/>
                        <remove_help_overlay id="'construction_available_funds'"/>
                        <remove_help_overlay id="'construction_builders_header'"/>
                        <do_if value="$EndSignalCue">
                          <signal_cue cue="$EndSignalCue" check="false"/>
                        </do_if>
                        <cancel_cue cue="HQ_Tutorial_Build_Storage_Menu_Highlight_Close"/>
                        <cancel_cue cue="HQ_Tutorial_Build_Storage_Menu_Highlight"/>
                      </actions>
                    </cue>
                  </cues>
                </cue>
              </cues>
            </cue>
            <cue name="HQ_Tutorial_Build_Storage_Menu_Highlight_Close">
              <conditions>
                <event_ui_triggered/>
                <check_value value="event.param == 'StationConfigurationMenu' and event.param2 == 'menu_close'"/>
              </conditions>
              <delay exact="if HQ_Tutorial_Build_Module_CV_Map.state == cuestate.waiting then 1s else 0s"/>
              <actions>
                <remove_help all="true"/>
                <remove_help_overlay id="'stationbuildst_storage'"/>
                <remove_help_overlay id="'confirm_modulechanges'"/>
                <remove_help_overlay id="'plot_resources_buyoffers'"/>
                <remove_help_overlay id="'construction_available_funds'"/>
                <remove_help_overlay id="'construction_builders_header'"/>
                <reset_cue cue="HQ_Tutorial_Build_Storage_Menu_Highlight"/>
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </library>
  </cues>
</mdscript>
